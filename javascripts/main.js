if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2511";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__5133__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__5133 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__5133__delegate.call(this, args);
    };
    G__5133.cljs$lang$maxFixedArity = 0;
    G__5133.cljs$lang$applyTo = function(arglist__5134) {
      var args = cljs.core.seq(arglist__5134);
      return G__5133__delegate(args);
    };
    G__5133.cljs$core$IFn$_invoke$arity$variadic = G__5133__delegate;
    return G__5133;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3634__auto__ = ty;
    if (cljs.core.truth_(and__3634__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3634__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4533__auto___5135 = len;
  var i_5136 = 0;
  while (true) {
    if (i_5136 < n__4533__auto___5135) {
      new_arr[i_5136] = arr[i_5136];
      var G__5137 = i_5136 + 1;
      i_5136 = G__5137;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__5138__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__5138 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5138__delegate.call(this, array, i, idxs);
    };
    G__5138.cljs$lang$maxFixedArity = 2;
    G__5138.cljs$lang$applyTo = function(arglist__5139) {
      var array = cljs.core.first(arglist__5139);
      arglist__5139 = cljs.core.next(arglist__5139);
      var i = cljs.core.first(arglist__5139);
      var idxs = cljs.core.rest(arglist__5139);
      return G__5138__delegate(array, i, idxs);
    };
    G__5138.cljs$core$IFn$_invoke$arity$variadic = G__5138__delegate;
    return G__5138;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__5140__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__5140 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5140__delegate.call(this, array, idx, idx2, idxv);
    };
    G__5140.cljs$lang$maxFixedArity = 3;
    G__5140.cljs$lang$applyTo = function(arglist__5141) {
      var array = cljs.core.first(arglist__5141);
      arglist__5141 = cljs.core.next(arglist__5141);
      var idx = cljs.core.first(arglist__5141);
      arglist__5141 = cljs.core.next(arglist__5141);
      var idx2 = cljs.core.first(arglist__5141);
      var idxv = cljs.core.rest(arglist__5141);
      return G__5140__delegate(array, idx, idx2, idxv);
    };
    G__5140.cljs$core$IFn$_invoke$arity$variadic = G__5140__delegate;
    return G__5140;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.call(null, args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__5142) {
    var obj = cljs.core.first(arglist__5142);
    arglist__5142 = cljs.core.next(arglist__5142);
    var s = cljs.core.first(arglist__5142);
    var args = cljs.core.rest(arglist__5142);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj5144 = {};
  return obj5144;
}();
cljs.core.IFn = function() {
  var obj5146 = {};
  return obj5146;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = cljs.core._invoke[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._invoke["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj5148 = {};
  return obj5148;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3634__auto__ = value;
    if (and__3634__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4290__auto__ = value == null ? null : value;
    return function() {
      var or__3646__auto__ = cljs.core._clone[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._clone["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj5150 = {};
  return obj5150;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._count[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._count["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj5152 = {};
  return obj5152;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._empty[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._empty["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj5154 = {};
  return obj5154;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._conj[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._conj["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj5156 = {};
  return obj5156;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3634__auto__ = coll;
      if (and__3634__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4290__auto__ = coll == null ? null : coll;
      return function() {
        var or__3646__auto__ = cljs.core._nth[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._nth["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3634__auto__ = coll;
      if (and__3634__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4290__auto__ = coll == null ? null : coll;
      return function() {
        var or__3646__auto__ = cljs.core._nth[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._nth["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj5158 = {};
  return obj5158;
}();
cljs.core.ISeq = function() {
  var obj5160 = {};
  return obj5160;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._first[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._first["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._rest[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._rest["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj5162 = {};
  return obj5162;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._next[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._next["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj5164 = {};
  return obj5164;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3634__auto__ = o;
      if (and__3634__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4290__auto__ = o == null ? null : o;
      return function() {
        var or__3646__auto__ = cljs.core._lookup[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._lookup["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3634__auto__ = o;
      if (and__3634__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4290__auto__ = o == null ? null : o;
      return function() {
        var or__3646__auto__ = cljs.core._lookup[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._lookup["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj5166 = {};
  return obj5166;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._assoc[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._assoc["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj5168 = {};
  return obj5168;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._dissoc[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._dissoc["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj5170 = {};
  return obj5170;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._key[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._key["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._val[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._val["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj5172 = {};
  return obj5172;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._disjoin[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._disjoin["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj5174 = {};
  return obj5174;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._peek[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._peek["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._pop[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._pop["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj5176 = {};
  return obj5176;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._assoc_n[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj5178 = {};
  return obj5178;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3634__auto__ = o;
    if (and__3634__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4290__auto__ = o == null ? null : o;
    return function() {
      var or__3646__auto__ = cljs.core._deref[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._deref["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj5180 = {};
  return obj5180;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3634__auto__ = o;
    if (and__3634__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4290__auto__ = o == null ? null : o;
    return function() {
      var or__3646__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj5182 = {};
  return obj5182;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3634__auto__ = o;
    if (and__3634__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4290__auto__ = o == null ? null : o;
    return function() {
      var or__3646__auto__ = cljs.core._meta[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._meta["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj5184 = {};
  return obj5184;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3634__auto__ = o;
    if (and__3634__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4290__auto__ = o == null ? null : o;
    return function() {
      var or__3646__auto__ = cljs.core._with_meta[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._with_meta["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj5186 = {};
  return obj5186;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3634__auto__ = coll;
      if (and__3634__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4290__auto__ = coll == null ? null : coll;
      return function() {
        var or__3646__auto__ = cljs.core._reduce[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._reduce["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3634__auto__ = coll;
      if (and__3634__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4290__auto__ = coll == null ? null : coll;
      return function() {
        var or__3646__auto__ = cljs.core._reduce[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._reduce["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj5188 = {};
  return obj5188;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj5190 = {};
  return obj5190;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3634__auto__ = o;
    if (and__3634__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4290__auto__ = o == null ? null : o;
    return function() {
      var or__3646__auto__ = cljs.core._equiv[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._equiv["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj5192 = {};
  return obj5192;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3634__auto__ = o;
    if (and__3634__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4290__auto__ = o == null ? null : o;
    return function() {
      var or__3646__auto__ = cljs.core._hash[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._hash["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj5194 = {};
  return obj5194;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3634__auto__ = o;
    if (and__3634__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4290__auto__ = o == null ? null : o;
    return function() {
      var or__3646__auto__ = cljs.core._seq[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._seq["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj5196 = {};
  return obj5196;
}();
cljs.core.IList = function() {
  var obj5198 = {};
  return obj5198;
}();
cljs.core.IRecord = function() {
  var obj5200 = {};
  return obj5200;
}();
cljs.core.IReversible = function() {
  var obj5202 = {};
  return obj5202;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._rseq[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._rseq["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj5204 = {};
  return obj5204;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._entry_key[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._entry_key["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._comparator[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._comparator["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj5206 = {};
  return obj5206;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3634__auto__ = writer;
    if (and__3634__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4290__auto__ = writer == null ? null : writer;
    return function() {
      var or__3646__auto__ = cljs.core._write[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._write["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3634__auto__ = writer;
    if (and__3634__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4290__auto__ = writer == null ? null : writer;
    return function() {
      var or__3646__auto__ = cljs.core._flush[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._flush["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj5208 = {};
  return obj5208;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3634__auto__ = o;
    if (and__3634__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4290__auto__ = o == null ? null : o;
    return function() {
      var or__3646__auto__ = cljs.core._pr_writer[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj5210 = {};
  return obj5210;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3634__auto__ = d;
    if (and__3634__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4290__auto__ = d == null ? null : d;
    return function() {
      var or__3646__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj5212 = {};
  return obj5212;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = cljs.core._notify_watches[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = cljs.core._add_watch[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._add_watch["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = cljs.core._remove_watch[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj5214 = {};
  return obj5214;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._as_transient[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._as_transient["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj5216 = {};
  return obj5216;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3634__auto__ = tcoll;
    if (and__3634__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4290__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3646__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3634__auto__ = tcoll;
    if (and__3634__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4290__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3646__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj5218 = {};
  return obj5218;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3634__auto__ = tcoll;
    if (and__3634__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4290__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3646__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj5220 = {};
  return obj5220;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3634__auto__ = tcoll;
    if (and__3634__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4290__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3646__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj5222 = {};
  return obj5222;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3634__auto__ = tcoll;
    if (and__3634__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4290__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3646__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3634__auto__ = tcoll;
    if (and__3634__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4290__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3646__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj5224 = {};
  return obj5224;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3634__auto__ = tcoll;
    if (and__3634__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4290__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3646__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj5226 = {};
  return obj5226;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3634__auto__ = x;
    if (and__3634__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4290__auto__ = x == null ? null : x;
    return function() {
      var or__3646__auto__ = cljs.core._compare[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._compare["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj5228 = {};
  return obj5228;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._drop_first[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._drop_first["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj5230 = {};
  return obj5230;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._chunked_first[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj5232 = {};
  return obj5232;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._chunked_next[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj5234 = {};
  return obj5234;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3634__auto__ = x;
    if (and__3634__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4290__auto__ = x == null ? null : x;
    return function() {
      var or__3646__auto__ = cljs.core._name[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._name["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3634__auto__ = x;
    if (and__3634__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4290__auto__ = x == null ? null : x;
    return function() {
      var or__3646__auto__ = cljs.core._namespace[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._namespace["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj5236 = {};
  return obj5236;
}();
cljs.core.IReset = function() {
  var obj5238 = {};
  return obj5238;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3634__auto__ = o;
    if (and__3634__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4290__auto__ = o == null ? null : o;
    return function() {
      var or__3646__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj5240 = {};
  return obj5240;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3634__auto__ = o;
      if (and__3634__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4290__auto__ = o == null ? null : o;
      return function() {
        var or__3646__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3634__auto__ = o;
      if (and__3634__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4290__auto__ = o == null ? null : o;
      return function() {
        var or__3646__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3634__auto__ = o;
      if (and__3634__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4290__auto__ = o == null ? null : o;
      return function() {
        var or__3646__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3634__auto__ = o;
      if (and__3634__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4290__auto__ = o == null ? null : o;
      return function() {
        var or__3646__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj5242 = {};
  return obj5242;
}();
cljs.core._vreset_BANG_ = function _vreset_BANG_(o, new_value) {
  if (function() {
    var and__3634__auto__ = o;
    if (and__3634__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4290__auto__ = o == null ? null : o;
    return function() {
      var or__3646__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj5244 = {};
  return obj5244;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3634__auto__ = coll;
    if (and__3634__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4290__auto__ = coll == null ? null : coll;
    return function() {
      var or__3646__auto__ = cljs.core._iterator[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._iterator["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul.call(null, 4294967295, 5) === 0)) {
  cljs.core.imul = function imul(a, b) {
    return Math.imul.call(null, a, b);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, cljs.core.imul.call(null, k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul.call(null, h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul.call(null, h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1.call(null, in$);
    var h1 = cljs.core.m3_mix_H1.call(null, cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix.call(null, h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__5245 = i + 2;
        var G__5246 = cljs.core.m3_mix_H1.call(null, h1, cljs.core.m3_mix_K1.call(null, in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__5245;
        h1 = G__5246;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1.call(null, in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix.call(null, h1__$1, cljs.core.imul.call(null, 2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj5248 = {};
  return obj5248;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__5249 = i + 1;
          var G__5250 = cljs.core.imul.call(null, 31, hash) + s.charCodeAt(i);
          i = G__5249;
          hash = G__5250;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_.call(null, k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj5254 = {};
      return obj5254;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__5256 = o;
    if (G__5256) {
      var bit__4320__auto__ = G__5256.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4320__auto__ || G__5256.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor.call(null, o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int.call(null, cljs.core.hash_string.call(null, o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash.call(null, o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.m3_hash_unencoded_chars.call(null, sym.name), cljs.core.hash_string.call(null, sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3634__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3634__auto__) {
        return b.ns;
      } else {
        return and__3634__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = goog.array.defaultCompare(a.ns, b.ns);
          if (0 === nsc) {
            return goog.array.defaultCompare(a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return goog.array.defaultCompare(a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4067__auto__ = self__._hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__5258 = null;
  var G__5258__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__5258__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__5258 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5258__2.call(this, self__, coll);
      case 3:
        return G__5258__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5258.cljs$core$IFn$_invoke$arity$2 = G__5258__2;
  G__5258.cljs$core$IFn$_invoke$arity$3 = G__5258__3;
  return G__5258;
}();
cljs.core.Symbol.prototype.apply = function(self__, args5257) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5257)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163840;
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val;
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function __GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__5260 = x;
  if (G__5260) {
    var bit__4327__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3646__auto__ = bit__4327__auto__;
      if (cljs.core.truth_(or__3646__auto__)) {
        return or__3646__auto__;
      } else {
        return G__5260.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__5260.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIterable, G__5260);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIterable, G__5260);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__5262 = value;
  if (G__5262) {
    var bit__4327__auto__ = G__5262.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4327__auto__ || G__5262.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__5262.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__5262);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__5262);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5264 = coll;
      if (G__5264) {
        var bit__4320__auto__ = G__5264.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4320__auto__ || G__5264.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5266 = coll;
      if (G__5266) {
        var bit__4320__auto__ = G__5266.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4320__auto__ || G__5266.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__5268 = coll;
      if (G__5268) {
        var bit__4320__auto__ = G__5268.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4320__auto__ || G__5268.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5270 = coll;
      if (G__5270) {
        var bit__4320__auto__ = G__5270.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4320__auto__ || G__5270.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__5271__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__5272 = y;
            var G__5273 = cljs.core.first.call(null, more);
            var G__5274 = cljs.core.next.call(null, more);
            x = G__5272;
            y = G__5273;
            more = G__5274;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5271 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5271__delegate.call(this, x, y, more);
    };
    G__5271.cljs$lang$maxFixedArity = 2;
    G__5271.cljs$lang$applyTo = function(arglist__5275) {
      var x = cljs.core.first(arglist__5275);
      arglist__5275 = cljs.core.next(arglist__5275);
      var y = cljs.core.first(arglist__5275);
      var more = cljs.core.rest(arglist__5275);
      return G__5271__delegate(x, y, more);
    };
    G__5271.cljs$core$IFn$_invoke$arity$variadic = G__5271__delegate;
    return G__5271;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq.call(null, coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1.call(null, hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1.call(null, h1, k1);
  return cljs.core.m3_fmix.call(null, h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__5276 = n + 1;
      var G__5277 = cljs.core.imul.call(null, 31, hash_code) + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__5278 = cljs.core.next.call(null, coll__$1);
      n = G__5276;
      hash_code = G__5277;
      coll__$1 = G__5278;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__5279 = n + 1;
      var G__5280 = hash_code + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__5281 = cljs.core.next.call(null, coll__$1);
      n = G__5279;
      hash_code = G__5280;
      coll__$1 = G__5281;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_.call(null, x)) {
    return x;
  } else {
    return cljs.core.reduced.call(null, x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__5282 = nval;
            var G__5283 = n + 1;
            val = G__5282;
            n = G__5283;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5284 = nval;
          var G__5285 = n + 1;
          val__$1 = G__5284;
          n = G__5285;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5286 = nval;
          var G__5287 = n + 1;
          val__$1 = G__5286;
          n = G__5287;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__5288 = nval;
            var G__5289 = n + 1;
            val = G__5288;
            n = G__5289;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5290 = nval;
          var G__5291 = n + 1;
          val__$1 = G__5290;
          n = G__5291;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5292 = nval;
          var G__5293 = n + 1;
          val__$1 = G__5292;
          n = G__5293;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__5295 = x;
  if (G__5295) {
    var bit__4327__auto__ = G__5295.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4327__auto__ || G__5295.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__5295.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__5295);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__5295);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__5297 = x;
  if (G__5297) {
    var bit__4327__auto__ = G__5297.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4327__auto__ || G__5297.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__5297.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__5297);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__5297);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__5298 = sn;
      s = G__5298;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__5299__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__5300 = conj.call(null, coll, x);
          var G__5301 = cljs.core.first.call(null, xs);
          var G__5302 = cljs.core.next.call(null, xs);
          coll = G__5300;
          x = G__5301;
          xs = G__5302;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__5299 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5299__delegate.call(this, coll, x, xs);
    };
    G__5299.cljs$lang$maxFixedArity = 2;
    G__5299.cljs$lang$applyTo = function(arglist__5303) {
      var coll = cljs.core.first(arglist__5303);
      arglist__5303 = cljs.core.next(arglist__5303);
      var x = cljs.core.first(arglist__5303);
      var xs = cljs.core.rest(arglist__5303);
      return G__5299__delegate(coll, x, xs);
    };
    G__5299.cljs$core$IFn$_invoke$arity$variadic = G__5299__delegate;
    return G__5299;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__5304 = cljs.core.next.call(null, s);
      var G__5305 = acc + 1;
      s = G__5304;
      acc = G__5305;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__5307 = coll;
      if (G__5307) {
        var bit__4320__auto__ = G__5307.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4320__auto__ || G__5307.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            return cljs.core.accumulating_seq_count.call(null, coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__5308 = cljs.core.next.call(null, coll);
              var G__5309 = n - 1;
              coll = G__5308;
              n = G__5309;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__5310 = cljs.core.next.call(null, coll);
              var G__5311 = n - 1;
              var G__5312 = not_found;
              coll = G__5310;
              n = G__5311;
              not_found = G__5312;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__5317 = coll;
          if (G__5317) {
            var bit__4320__auto__ = G__5317.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4320__auto__ || G__5317.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__5318 = coll;
                  if (G__5318) {
                    var bit__4327__auto__ = G__5318.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4327__auto__ || G__5318.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__5318.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__5318);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__5318);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__5319 = coll;
          if (G__5319) {
            var bit__4320__auto__ = G__5319.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4320__auto__ || G__5319.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__5320 = coll;
                  if (G__5320) {
                    var bit__4327__auto__ = G__5320.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4327__auto__ || G__5320.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__5320.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__5320);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__5320);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq.call(null, xs)) {
      var G__5321 = n__$1 - 1;
      var G__5322 = cljs.core.rest.call(null, xs);
      n__$1 = G__5321;
      xs = G__5322;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__5325 = o;
        if (G__5325) {
          var bit__4320__auto__ = G__5325.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4320__auto__ || G__5325.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__5326 = o;
        if (G__5326) {
          var bit__4320__auto__ = G__5326.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4320__auto__ || G__5326.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__5327__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__5328 = ret;
          var G__5329 = cljs.core.first.call(null, kvs);
          var G__5330 = cljs.core.second.call(null, kvs);
          var G__5331 = cljs.core.nnext.call(null, kvs);
          coll = G__5328;
          k = G__5329;
          v = G__5330;
          kvs = G__5331;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__5327 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5327__delegate.call(this, coll, k, v, kvs);
    };
    G__5327.cljs$lang$maxFixedArity = 3;
    G__5327.cljs$lang$applyTo = function(arglist__5332) {
      var coll = cljs.core.first(arglist__5332);
      arglist__5332 = cljs.core.next(arglist__5332);
      var k = cljs.core.first(arglist__5332);
      arglist__5332 = cljs.core.next(arglist__5332);
      var v = cljs.core.first(arglist__5332);
      var kvs = cljs.core.rest(arglist__5332);
      return G__5327__delegate(coll, k, v, kvs);
    };
    G__5327.cljs$core$IFn$_invoke$arity$variadic = G__5327__delegate;
    return G__5327;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__5333__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__5334 = ret;
            var G__5335 = cljs.core.first.call(null, ks);
            var G__5336 = cljs.core.next.call(null, ks);
            coll = G__5334;
            k = G__5335;
            ks = G__5336;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__5333 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5333__delegate.call(this, coll, k, ks);
    };
    G__5333.cljs$lang$maxFixedArity = 2;
    G__5333.cljs$lang$applyTo = function(arglist__5337) {
      var coll = cljs.core.first(arglist__5337);
      arglist__5337 = cljs.core.next(arglist__5337);
      var k = cljs.core.first(arglist__5337);
      var ks = cljs.core.rest(arglist__5337);
      return G__5333__delegate(coll, k, ks);
    };
    G__5333.cljs$core$IFn$_invoke$arity$variadic = G__5333__delegate;
    return G__5333;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3646__auto__ = goog.isFunction(f);
  if (or__3646__auto__) {
    return or__3646__auto__;
  } else {
    var G__5341 = f;
    if (G__5341) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto____$1 = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto____$1)) {
          return or__3646__auto____$1;
        } else {
          return G__5341.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__5341.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__5341);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__5341);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__5343 = null;
  var G__5343__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null);
  };
  var G__5343__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a);
  };
  var G__5343__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b);
  };
  var G__5343__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c);
  };
  var G__5343__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d);
  };
  var G__5343__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e);
  };
  var G__5343__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__5343__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__5343__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__5343__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__5343__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__5343__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__5343__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__5343__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__5343__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__5343__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__5343__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__5343__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__5343__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__5343__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__5343__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__5343__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__5343 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__5343__1.call(this, self__);
      case 2:
        return G__5343__2.call(this, self__, a);
      case 3:
        return G__5343__3.call(this, self__, a, b);
      case 4:
        return G__5343__4.call(this, self__, a, b, c);
      case 5:
        return G__5343__5.call(this, self__, a, b, c, d);
      case 6:
        return G__5343__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__5343__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__5343__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__5343__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__5343__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__5343__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__5343__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__5343__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__5343__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__5343__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__5343__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__5343__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__5343__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__5343__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__5343__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__5343__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__5343__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5343.cljs$core$IFn$_invoke$arity$1 = G__5343__1;
  G__5343.cljs$core$IFn$_invoke$arity$2 = G__5343__2;
  G__5343.cljs$core$IFn$_invoke$arity$3 = G__5343__3;
  G__5343.cljs$core$IFn$_invoke$arity$4 = G__5343__4;
  G__5343.cljs$core$IFn$_invoke$arity$5 = G__5343__5;
  G__5343.cljs$core$IFn$_invoke$arity$6 = G__5343__6;
  G__5343.cljs$core$IFn$_invoke$arity$7 = G__5343__7;
  G__5343.cljs$core$IFn$_invoke$arity$8 = G__5343__8;
  G__5343.cljs$core$IFn$_invoke$arity$9 = G__5343__9;
  G__5343.cljs$core$IFn$_invoke$arity$10 = G__5343__10;
  G__5343.cljs$core$IFn$_invoke$arity$11 = G__5343__11;
  G__5343.cljs$core$IFn$_invoke$arity$12 = G__5343__12;
  G__5343.cljs$core$IFn$_invoke$arity$13 = G__5343__13;
  G__5343.cljs$core$IFn$_invoke$arity$14 = G__5343__14;
  G__5343.cljs$core$IFn$_invoke$arity$15 = G__5343__15;
  G__5343.cljs$core$IFn$_invoke$arity$16 = G__5343__16;
  G__5343.cljs$core$IFn$_invoke$arity$17 = G__5343__17;
  G__5343.cljs$core$IFn$_invoke$arity$18 = G__5343__18;
  G__5343.cljs$core$IFn$_invoke$arity$19 = G__5343__19;
  G__5343.cljs$core$IFn$_invoke$arity$20 = G__5343__20;
  G__5343.cljs$core$IFn$_invoke$arity$21 = G__5343__21;
  G__5343.cljs$core$IFn$_invoke$arity$22 = G__5343__22;
  return G__5343;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args5342) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5342)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__5347 = o;
    if (G__5347) {
      var bit__4327__auto__ = G__5347.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4327__auto__ || G__5347.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__5347.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__5347);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__5347);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3634__auto__ = !(o == null);
    if (and__3634__auto__) {
      var G__5351 = o;
      if (G__5351) {
        var bit__4327__auto__ = G__5351.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4327__auto__ || G__5351.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__5351.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__5351);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__5351);
      }
    } else {
      return and__3634__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__5352__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__5353 = ret;
            var G__5354 = cljs.core.first.call(null, ks);
            var G__5355 = cljs.core.next.call(null, ks);
            coll = G__5353;
            k = G__5354;
            ks = G__5355;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__5352 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5352__delegate.call(this, coll, k, ks);
    };
    G__5352.cljs$lang$maxFixedArity = 2;
    G__5352.cljs$lang$applyTo = function(arglist__5356) {
      var coll = cljs.core.first(arglist__5356);
      arglist__5356 = cljs.core.next(arglist__5356);
      var k = cljs.core.first(arglist__5356);
      var ks = cljs.core.rest(arglist__5356);
      return G__5352__delegate(coll, k, ks);
    };
    G__5352.cljs$core$IFn$_invoke$arity$variadic = G__5352__delegate;
    return G__5352;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__5358 = x;
    if (G__5358) {
      var bit__4327__auto__ = G__5358.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4327__auto__ || G__5358.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__5358.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__5358);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__5358);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__5360 = x;
    if (G__5360) {
      var bit__4327__auto__ = G__5360.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4327__auto__ || G__5360.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__5360.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__5360);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__5360);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__5362 = x;
  if (G__5362) {
    var bit__4327__auto__ = G__5362.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4327__auto__ || G__5362.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__5362.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__5362);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__5362);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__5364 = x;
  if (G__5364) {
    var bit__4327__auto__ = G__5364.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4327__auto__ || G__5364.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__5364.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__5364);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__5364);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__5366 = x;
  if (G__5366) {
    var bit__4327__auto__ = G__5366.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4327__auto__ || G__5366.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__5366.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__5366);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__5366);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__5368 = x;
  if (G__5368) {
    var bit__4327__auto__ = G__5368.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4327__auto__ || G__5368.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__5368.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__5368);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__5368);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__5370 = x;
    if (G__5370) {
      var bit__4327__auto__ = G__5370.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4327__auto__ || G__5370.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__5370.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__5370);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__5370);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__5372 = x;
  if (G__5372) {
    var bit__4327__auto__ = G__5372.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4327__auto__ || G__5372.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__5372.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__5372);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__5372);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__5374 = x;
  if (G__5374) {
    var bit__4320__auto__ = G__5374.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4320__auto__ || G__5374.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj5378 = {};
    return obj5378;
  };
  var js_obj__1 = function() {
    var G__5379__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__5379 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__5379__delegate.call(this, keyvals);
    };
    G__5379.cljs$lang$maxFixedArity = 0;
    G__5379.cljs$lang$applyTo = function(arglist__5380) {
      var keyvals = cljs.core.seq(arglist__5380);
      return G__5379__delegate(keyvals);
    };
    G__5379.cljs$core$IFn$_invoke$arity$variadic = G__5379__delegate;
    return G__5379;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__5381 = i__$1 + 1;
      var G__5382 = j__$1 + 1;
      var G__5383 = len__$1 - 1;
      i__$1 = G__5381;
      j__$1 = G__5382;
      len__$1 = G__5383;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__5384 = i__$1 - 1;
      var G__5385 = j__$1 - 1;
      var G__5386 = len__$1 - 1;
      i__$1 = G__5384;
      j__$1 = G__5385;
      len__$1 = G__5386;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj5388 = {};
  return obj5388;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__5390 = s;
    if (G__5390) {
      var bit__4327__auto__ = G__5390.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4327__auto__ || G__5390.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__5390.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__5390);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__5390);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__5392 = s;
  if (G__5392) {
    var bit__4327__auto__ = G__5392.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4327__auto__ || G__5392.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__5392.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__5392);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__5392);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3646__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3646__auto__) {
    return or__3646__auto__;
  } else {
    var G__5396 = f;
    if (G__5396) {
      var bit__4327__auto__ = G__5396.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4327__auto__ || G__5396.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__5396.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__5396);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__5396);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__5397__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__5398 = cljs.core.conj.call(null, s, x__$1);
              var G__5399 = etc;
              s = G__5398;
              xs = G__5399;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__5397 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5397__delegate.call(this, x, y, more);
    };
    G__5397.cljs$lang$maxFixedArity = 2;
    G__5397.cljs$lang$applyTo = function(arglist__5400) {
      var x = cljs.core.first(arglist__5400);
      arglist__5400 = cljs.core.next(arglist__5400);
      var y = cljs.core.first(arglist__5400);
      var more = cljs.core.rest(arglist__5400);
      return G__5397__delegate(x, y, more);
    };
    G__5397.cljs$core$IFn$_invoke$arity$variadic = G__5397__delegate;
    return G__5397;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3646__auto__ = cljs.core.seq.call(null, coll);
    if (or__3646__auto__) {
      return or__3646__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__5402 = x;
            if (G__5402) {
              var bit__4320__auto__ = G__5402.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4320__auto__ || G__5402.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.call(null, xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__5403 = xs;
        var G__5404 = ys;
        var G__5405 = len;
        var G__5406 = n + 1;
        xs = G__5403;
        ys = G__5404;
        len = G__5405;
        n = G__5406;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5407 = nval;
          var G__5408 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__5407;
          coll__$1 = G__5408;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__5411 = coll;
      if (G__5411) {
        var bit__4320__auto__ = G__5411.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4320__auto__ || G__5411.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            return cljs.core.seq_reduce.call(null, f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__5412 = coll;
      if (G__5412) {
        var bit__4320__auto__ = G__5412.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4320__auto__ || G__5412.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            return cljs.core.seq_reduce.call(null, f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.call(null, f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__5413 = null;
      var G__5413__0 = function() {
        return f.call(null);
      };
      var G__5413__1 = function(x) {
        return cf.call(null, x);
      };
      var G__5413__2 = function(x, y) {
        return f.call(null, x, y);
      };
      G__5413 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__5413__0.call(this);
          case 1:
            return G__5413__1.call(this, x);
          case 2:
            return G__5413__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5413.cljs$core$IFn$_invoke$arity$0 = G__5413__0;
      G__5413.cljs$core$IFn$_invoke$arity$1 = G__5413__1;
      G__5413.cljs$core$IFn$_invoke$arity$2 = G__5413__2;
      return G__5413;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.call(null, xform, f, f.call(null), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = xform.call(null, f);
    var ret = cljs.core.reduce.call(null, f__$1, init, coll);
    return f__$1.call(null, ret);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__5414__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__5414 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5414__delegate.call(this, x, y, more);
    };
    G__5414.cljs$lang$maxFixedArity = 2;
    G__5414.cljs$lang$applyTo = function(arglist__5415) {
      var x = cljs.core.first(arglist__5415);
      arglist__5415 = cljs.core.next(arglist__5415);
      var y = cljs.core.first(arglist__5415);
      var more = cljs.core.rest(arglist__5415);
      return G__5414__delegate(x, y, more);
    };
    G__5414.cljs$core$IFn$_invoke$arity$variadic = G__5414__delegate;
    return G__5414;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__5416__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__5416 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5416__delegate.call(this, x, y, more);
    };
    G__5416.cljs$lang$maxFixedArity = 2;
    G__5416.cljs$lang$applyTo = function(arglist__5417) {
      var x = cljs.core.first(arglist__5417);
      arglist__5417 = cljs.core.next(arglist__5417);
      var y = cljs.core.first(arglist__5417);
      var more = cljs.core.rest(arglist__5417);
      return G__5416__delegate(x, y, more);
    };
    G__5416.cljs$core$IFn$_invoke$arity$variadic = G__5416__delegate;
    return G__5416;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__5418__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__5418 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5418__delegate.call(this, x, y, more);
    };
    G__5418.cljs$lang$maxFixedArity = 2;
    G__5418.cljs$lang$applyTo = function(arglist__5419) {
      var x = cljs.core.first(arglist__5419);
      arglist__5419 = cljs.core.next(arglist__5419);
      var y = cljs.core.first(arglist__5419);
      var more = cljs.core.rest(arglist__5419);
      return G__5418__delegate(x, y, more);
    };
    G__5418.cljs$core$IFn$_invoke$arity$variadic = G__5418__delegate;
    return G__5418;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__5420__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__5420 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5420__delegate.call(this, x, y, more);
    };
    G__5420.cljs$lang$maxFixedArity = 2;
    G__5420.cljs$lang$applyTo = function(arglist__5421) {
      var x = cljs.core.first(arglist__5421);
      arglist__5421 = cljs.core.next(arglist__5421);
      var y = cljs.core.first(arglist__5421);
      var more = cljs.core.rest(arglist__5421);
      return G__5420__delegate(x, y, more);
    };
    G__5420.cljs$core$IFn$_invoke$arity$variadic = G__5420__delegate;
    return G__5420;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__5422__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__5423 = y;
            var G__5424 = cljs.core.first.call(null, more);
            var G__5425 = cljs.core.next.call(null, more);
            x = G__5423;
            y = G__5424;
            more = G__5425;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5422 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5422__delegate.call(this, x, y, more);
    };
    G__5422.cljs$lang$maxFixedArity = 2;
    G__5422.cljs$lang$applyTo = function(arglist__5426) {
      var x = cljs.core.first(arglist__5426);
      arglist__5426 = cljs.core.next(arglist__5426);
      var y = cljs.core.first(arglist__5426);
      var more = cljs.core.rest(arglist__5426);
      return G__5422__delegate(x, y, more);
    };
    G__5422.cljs$core$IFn$_invoke$arity$variadic = G__5422__delegate;
    return G__5422;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__5427__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__5428 = y;
            var G__5429 = cljs.core.first.call(null, more);
            var G__5430 = cljs.core.next.call(null, more);
            x = G__5428;
            y = G__5429;
            more = G__5430;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5427 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5427__delegate.call(this, x, y, more);
    };
    G__5427.cljs$lang$maxFixedArity = 2;
    G__5427.cljs$lang$applyTo = function(arglist__5431) {
      var x = cljs.core.first(arglist__5431);
      arglist__5431 = cljs.core.next(arglist__5431);
      var y = cljs.core.first(arglist__5431);
      var more = cljs.core.rest(arglist__5431);
      return G__5427__delegate(x, y, more);
    };
    G__5427.cljs$core$IFn$_invoke$arity$variadic = G__5427__delegate;
    return G__5427;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__5432__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__5433 = y;
            var G__5434 = cljs.core.first.call(null, more);
            var G__5435 = cljs.core.next.call(null, more);
            x = G__5433;
            y = G__5434;
            more = G__5435;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5432 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5432__delegate.call(this, x, y, more);
    };
    G__5432.cljs$lang$maxFixedArity = 2;
    G__5432.cljs$lang$applyTo = function(arglist__5436) {
      var x = cljs.core.first(arglist__5436);
      arglist__5436 = cljs.core.next(arglist__5436);
      var y = cljs.core.first(arglist__5436);
      var more = cljs.core.rest(arglist__5436);
      return G__5432__delegate(x, y, more);
    };
    G__5432.cljs$core$IFn$_invoke$arity$variadic = G__5432__delegate;
    return G__5432;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__5437__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__5438 = y;
            var G__5439 = cljs.core.first.call(null, more);
            var G__5440 = cljs.core.next.call(null, more);
            x = G__5438;
            y = G__5439;
            more = G__5440;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5437 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5437__delegate.call(this, x, y, more);
    };
    G__5437.cljs$lang$maxFixedArity = 2;
    G__5437.cljs$lang$applyTo = function(arglist__5441) {
      var x = cljs.core.first(arglist__5441);
      arglist__5441 = cljs.core.next(arglist__5441);
      var y = cljs.core.first(arglist__5441);
      var more = cljs.core.rest(arglist__5441);
      return G__5437__delegate(x, y, more);
    };
    G__5437.cljs$core$IFn$_invoke$arity$variadic = G__5437__delegate;
    return G__5437;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3963__auto__ = x;
    var y__3964__auto__ = y;
    return x__3963__auto__ > y__3964__auto__ ? x__3963__auto__ : y__3964__auto__;
  };
  var max__3 = function() {
    var G__5442__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3963__auto__ = x;
        var y__3964__auto__ = y;
        return x__3963__auto__ > y__3964__auto__ ? x__3963__auto__ : y__3964__auto__;
      }(), more);
    };
    var G__5442 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5442__delegate.call(this, x, y, more);
    };
    G__5442.cljs$lang$maxFixedArity = 2;
    G__5442.cljs$lang$applyTo = function(arglist__5443) {
      var x = cljs.core.first(arglist__5443);
      arglist__5443 = cljs.core.next(arglist__5443);
      var y = cljs.core.first(arglist__5443);
      var more = cljs.core.rest(arglist__5443);
      return G__5442__delegate(x, y, more);
    };
    G__5442.cljs$core$IFn$_invoke$arity$variadic = G__5442__delegate;
    return G__5442;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3970__auto__ = x;
    var y__3971__auto__ = y;
    return x__3970__auto__ < y__3971__auto__ ? x__3970__auto__ : y__3971__auto__;
  };
  var min__3 = function() {
    var G__5444__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3970__auto__ = x;
        var y__3971__auto__ = y;
        return x__3970__auto__ < y__3971__auto__ ? x__3970__auto__ : y__3971__auto__;
      }(), more);
    };
    var G__5444 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5444__delegate.call(this, x, y, more);
    };
    G__5444.cljs$lang$maxFixedArity = 2;
    G__5444.cljs$lang$applyTo = function(arglist__5445) {
      var x = cljs.core.first(arglist__5445);
      arglist__5445 = cljs.core.next(arglist__5445);
      var y = cljs.core.first(arglist__5445);
      var more = cljs.core.rest(arglist__5445);
      return G__5444__delegate(x, y, more);
    };
    G__5444.cljs$core$IFn$_invoke$arity$variadic = G__5444__delegate;
    return G__5444;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__5446__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__5446 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5446__delegate.call(this, x, y, more);
    };
    G__5446.cljs$lang$maxFixedArity = 2;
    G__5446.cljs$lang$applyTo = function(arglist__5447) {
      var x = cljs.core.first(arglist__5447);
      arglist__5447 = cljs.core.next(arglist__5447);
      var y = cljs.core.first(arglist__5447);
      var more = cljs.core.rest(arglist__5447);
      return G__5446__delegate(x, y, more);
    };
    G__5446.cljs$core$IFn$_invoke$arity$variadic = G__5446__delegate;
    return G__5446;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__5448__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__5448 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5448__delegate.call(this, x, y, more);
    };
    G__5448.cljs$lang$maxFixedArity = 2;
    G__5448.cljs$lang$applyTo = function(arglist__5449) {
      var x = cljs.core.first(arglist__5449);
      arglist__5449 = cljs.core.next(arglist__5449);
      var y = cljs.core.first(arglist__5449);
      var more = cljs.core.rest(arglist__5449);
      return G__5448__delegate(x, y, more);
    };
    G__5448.cljs$core$IFn$_invoke$arity$variadic = G__5448__delegate;
    return G__5448;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__5450__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__5450 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5450__delegate.call(this, x, y, more);
    };
    G__5450.cljs$lang$maxFixedArity = 2;
    G__5450.cljs$lang$applyTo = function(arglist__5451) {
      var x = cljs.core.first(arglist__5451);
      arglist__5451 = cljs.core.next(arglist__5451);
      var y = cljs.core.first(arglist__5451);
      var more = cljs.core.rest(arglist__5451);
      return G__5450__delegate(x, y, more);
    };
    G__5450.cljs$core$IFn$_invoke$arity$variadic = G__5450__delegate;
    return G__5450;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__5452__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__5452 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5452__delegate.call(this, x, y, more);
    };
    G__5452.cljs$lang$maxFixedArity = 2;
    G__5452.cljs$lang$applyTo = function(arglist__5453) {
      var x = cljs.core.first(arglist__5453);
      arglist__5453 = cljs.core.next(arglist__5453);
      var y = cljs.core.first(arglist__5453);
      var more = cljs.core.rest(arglist__5453);
      return G__5452__delegate(x, y, more);
    };
    G__5452.cljs$core$IFn$_invoke$arity$variadic = G__5452__delegate;
    return G__5452;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__5454__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__5454 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5454__delegate.call(this, x, y, more);
    };
    G__5454.cljs$lang$maxFixedArity = 2;
    G__5454.cljs$lang$applyTo = function(arglist__5455) {
      var x = cljs.core.first(arglist__5455);
      arglist__5455 = cljs.core.next(arglist__5455);
      var y = cljs.core.first(arglist__5455);
      var more = cljs.core.rest(arglist__5455);
      return G__5454__delegate(x, y, more);
    };
    G__5454.cljs$core$IFn$_invoke$arity$variadic = G__5454__delegate;
    return G__5454;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__5456__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract, x - y, more);
    };
    var G__5456 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5456__delegate.call(this, x, y, more);
    };
    G__5456.cljs$lang$maxFixedArity = 2;
    G__5456.cljs$lang$applyTo = function(arglist__5457) {
      var x = cljs.core.first(arglist__5457);
      arglist__5457 = cljs.core.next(arglist__5457);
      var y = cljs.core.first(arglist__5457);
      var more = cljs.core.rest(arglist__5457);
      return G__5456__delegate(x, y, more);
    };
    G__5456.cljs$core$IFn$_invoke$arity$variadic = G__5456__delegate;
    return G__5456;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__5458__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract_int, x - y, more);
    };
    var G__5458 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5458__delegate.call(this, x, y, more);
    };
    G__5458.cljs$lang$maxFixedArity = 2;
    G__5458.cljs$lang$applyTo = function(arglist__5459) {
      var x = cljs.core.first(arglist__5459);
      arglist__5459 = cljs.core.next(arglist__5459);
      var y = cljs.core.first(arglist__5459);
      var more = cljs.core.rest(arglist__5459);
      return G__5458__delegate(x, y, more);
    };
    G__5458.cljs$core$IFn$_invoke$arity$variadic = G__5458__delegate;
    return G__5458;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__5460__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__5461 = y;
            var G__5462 = cljs.core.first.call(null, more);
            var G__5463 = cljs.core.next.call(null, more);
            x = G__5461;
            y = G__5462;
            more = G__5463;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5460 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5460__delegate.call(this, x, y, more);
    };
    G__5460.cljs$lang$maxFixedArity = 2;
    G__5460.cljs$lang$applyTo = function(arglist__5464) {
      var x = cljs.core.first(arglist__5464);
      arglist__5464 = cljs.core.next(arglist__5464);
      var y = cljs.core.first(arglist__5464);
      var more = cljs.core.rest(arglist__5464);
      return G__5460__delegate(x, y, more);
    };
    G__5460.cljs$core$IFn$_invoke$arity$variadic = G__5460__delegate;
    return G__5460;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__5465 = n__$1 - 1;
      var G__5466 = cljs.core.next.call(null, xs);
      n__$1 = G__5465;
      xs = G__5466;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return goog.string.buildString(x);
    }
  };
  var str__2 = function() {
    var G__5467__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__5468 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__5469 = cljs.core.next.call(null, more);
          sb = G__5468;
          more = G__5469;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__5467 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__5467__delegate.call(this, x, ys);
    };
    G__5467.cljs$lang$maxFixedArity = 1;
    G__5467.cljs$lang$applyTo = function(arglist__5470) {
      var x = cljs.core.first(arglist__5470);
      var ys = cljs.core.rest(arglist__5470);
      return G__5467__delegate(x, ys);
    };
    G__5467.cljs$core$IFn$_invoke$arity$variadic = G__5467__delegate;
    return G__5467;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? cljs.core.counted_QMARK_.call(null, x) && cljs.core.counted_QMARK_.call(null, y) && !(cljs.core.count.call(null, x) === cljs.core.count.call(null, y)) ? false : function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__5471 = cljs.core.next.call(null, xs);
            var G__5472 = cljs.core.next.call(null, ys);
            xs = G__5471;
            ys = G__5472;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__5473 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__5474 = cljs.core.next.call(null, s);
        res = G__5473;
        s = G__5474;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__5475 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__5476 = cljs.core.next.call(null, s);
      h = G__5475;
      s = G__5476;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__5477 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__5478 = cljs.core.next.call(null, s__$1);
      h = G__5477;
      s__$1 = G__5478;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__5485_5491 = cljs.core.seq.call(null, fn_map);
  var chunk__5486_5492 = null;
  var count__5487_5493 = 0;
  var i__5488_5494 = 0;
  while (true) {
    if (i__5488_5494 < count__5487_5493) {
      var vec__5489_5495 = cljs.core._nth.call(null, chunk__5486_5492, i__5488_5494);
      var key_name_5496 = cljs.core.nth.call(null, vec__5489_5495, 0, null);
      var f_5497 = cljs.core.nth.call(null, vec__5489_5495, 1, null);
      var str_name_5498 = cljs.core.name.call(null, key_name_5496);
      obj[str_name_5498] = f_5497;
      var G__5499 = seq__5485_5491;
      var G__5500 = chunk__5486_5492;
      var G__5501 = count__5487_5493;
      var G__5502 = i__5488_5494 + 1;
      seq__5485_5491 = G__5499;
      chunk__5486_5492 = G__5500;
      count__5487_5493 = G__5501;
      i__5488_5494 = G__5502;
      continue;
    } else {
      var temp__4126__auto___5503 = cljs.core.seq.call(null, seq__5485_5491);
      if (temp__4126__auto___5503) {
        var seq__5485_5504__$1 = temp__4126__auto___5503;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5485_5504__$1)) {
          var c__4433__auto___5505 = cljs.core.chunk_first.call(null, seq__5485_5504__$1);
          var G__5506 = cljs.core.chunk_rest.call(null, seq__5485_5504__$1);
          var G__5507 = c__4433__auto___5505;
          var G__5508 = cljs.core.count.call(null, c__4433__auto___5505);
          var G__5509 = 0;
          seq__5485_5491 = G__5506;
          chunk__5486_5492 = G__5507;
          count__5487_5493 = G__5508;
          i__5488_5494 = G__5509;
          continue;
        } else {
          var vec__5490_5510 = cljs.core.first.call(null, seq__5485_5504__$1);
          var key_name_5511 = cljs.core.nth.call(null, vec__5490_5510, 0, null);
          var f_5512 = cljs.core.nth.call(null, vec__5490_5510, 1, null);
          var str_name_5513 = cljs.core.name.call(null, key_name_5511);
          obj[str_name_5513] = f_5512;
          var G__5514 = cljs.core.next.call(null, seq__5485_5504__$1);
          var G__5515 = null;
          var G__5516 = 0;
          var G__5517 = 0;
          seq__5485_5491 = G__5514;
          chunk__5486_5492 = G__5515;
          count__5487_5493 = G__5516;
          i__5488_5494 = G__5517;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__5519 = coll;
  if (G__5519) {
    var bit__4327__auto__ = G__5519.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4327__auto__ || G__5519.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__5519.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__5519);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__5519);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__5520 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__5520;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__5521 = i - 1;
        var G__5522 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__5521;
        r = G__5522;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__5523) {
    var xs = cljs.core.seq(arglist__5523);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3646__auto__ = coll == null;
    if (or__3646__auto__) {
      return or__3646__auto__;
    } else {
      var G__5527 = coll;
      if (G__5527) {
        var bit__4320__auto__ = G__5527.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4320__auto__ || G__5527.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__5529 = x;
  if (G__5529) {
    var bit__4327__auto__ = G__5529.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4327__auto__ || G__5529.cljs$core$IList$) {
      return true;
    } else {
      if (!G__5529.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__5529);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__5529);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol.call(null, k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3634__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3634__auto__) {
        return b.ns;
      } else {
        return and__3634__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = goog.array.defaultCompare(a.ns, b.ns);
          if (0 === nsc) {
            return goog.array.defaultCompare(a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return goog.array.defaultCompare(a.name, b.name);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4067__auto__ = self__._hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_keyword.call(null, this$__$1);
    self__._hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__5531 = null;
  var G__5531__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__5531__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__5531 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5531__2.call(this, self__, coll);
      case 3:
        return G__5531__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5531.cljs$core$IFn$_invoke$arity$2 = G__5531__2;
  G__5531.cljs$core$IFn$_invoke$arity$3 = G__5531__3;
  return G__5531;
}();
cljs.core.Keyword.prototype.apply = function(self__, args5530) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5530)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__5533 = x;
    if (G__5533) {
      var bit__4320__auto__ = G__5533.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4320__auto__ || G__5533.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__5534 = ls.sval();
        ls = G__5534;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__5536 = s;
    if (G__5536) {
      var bit__4320__auto__ = G__5536.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4320__auto__ || G__5536.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__5537 = cljs.core.next.call(null, s__$1);
      s__$1 = G__5537;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_5538 = 0;
  var xs_5539 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_5539) {
      ret[i_5538] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_5539));
      var G__5540 = i_5538 + 1;
      var G__5541 = cljs.core.next.call(null, xs_5539);
      i_5538 = G__5540;
      xs_5539 = G__5541;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__5542 = i + 1;
          var G__5543 = cljs.core.next.call(null, s__$1);
          i = G__5542;
          s__$1 = G__5543;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4533__auto___5544 = size;
      var i_5545 = 0;
      while (true) {
        if (i_5545 < n__4533__auto___5544) {
          a[i_5545] = init_val_or_seq;
          var G__5546 = i_5545 + 1;
          i_5545 = G__5546;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__5547 = i + 1;
          var G__5548 = cljs.core.next.call(null, s__$1);
          i = G__5547;
          s__$1 = G__5548;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4533__auto___5549 = size;
      var i_5550 = 0;
      while (true) {
        if (i_5550 < n__4533__auto___5549) {
          a[i_5550] = init_val_or_seq;
          var G__5551 = i_5550 + 1;
          i_5550 = G__5551;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__5552 = i + 1;
          var G__5553 = cljs.core.next.call(null, s__$1);
          i = G__5552;
          s__$1 = G__5553;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4533__auto___5554 = size;
      var i_5555 = 0;
      while (true) {
        if (i_5555 < n__4533__auto___5554) {
          a[i_5555] = init_val_or_seq;
          var G__5556 = i_5555 + 1;
          i_5555 = G__5556;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__5557 = i + 1;
          var G__5558 = cljs.core.next.call(null, s__$1);
          i = G__5557;
          s__$1 = G__5558;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4533__auto___5559 = size;
      var i_5560 = 0;
      while (true) {
        if (i_5560 < n__4533__auto___5559) {
          a[i_5560] = init_val_or_seq;
          var G__5561 = i_5560 + 1;
          i_5560 = G__5561;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__5562 = cljs.core.next.call(null, s__$1);
        var G__5563 = i - 1;
        var G__5564 = sum + 1;
        s__$1 = G__5562;
        i = G__5563;
        sum = G__5564;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__5565__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__5565 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5565__delegate.call(this, x, y, zs);
    };
    G__5565.cljs$lang$maxFixedArity = 2;
    G__5565.cljs$lang$applyTo = function(arglist__5566) {
      var x = cljs.core.first(arglist__5566);
      arglist__5566 = cljs.core.next(arglist__5566);
      var y = cljs.core.first(arglist__5566);
      var zs = cljs.core.rest(arglist__5566);
      return G__5565__delegate(x, y, zs);
    };
    G__5565.cljs$core$IFn$_invoke$arity$variadic = G__5565__delegate;
    return G__5565;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__5567__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__5567 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__5567__delegate.call(this, a, b, c, d, more);
    };
    G__5567.cljs$lang$maxFixedArity = 4;
    G__5567.cljs$lang$applyTo = function(arglist__5568) {
      var a = cljs.core.first(arglist__5568);
      arglist__5568 = cljs.core.next(arglist__5568);
      var b = cljs.core.first(arglist__5568);
      arglist__5568 = cljs.core.next(arglist__5568);
      var c = cljs.core.first(arglist__5568);
      arglist__5568 = cljs.core.next(arglist__5568);
      var d = cljs.core.first(arglist__5568);
      var more = cljs.core.rest(arglist__5568);
      return G__5567__delegate(a, b, c, d, more);
    };
    G__5567.cljs$core$IFn$_invoke$arity$variadic = G__5567__delegate;
    return G__5567;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__5569__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__5570 = ntcoll;
          var G__5571 = cljs.core.first.call(null, vals);
          var G__5572 = cljs.core.next.call(null, vals);
          tcoll = G__5570;
          val = G__5571;
          vals = G__5572;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__5569 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5569__delegate.call(this, tcoll, val, vals);
    };
    G__5569.cljs$lang$maxFixedArity = 2;
    G__5569.cljs$lang$applyTo = function(arglist__5573) {
      var tcoll = cljs.core.first(arglist__5573);
      arglist__5573 = cljs.core.next(arglist__5573);
      var val = cljs.core.first(arglist__5573);
      var vals = cljs.core.rest(arglist__5573);
      return G__5569__delegate(tcoll, val, vals);
    };
    G__5569.cljs$core$IFn$_invoke$arity$variadic = G__5569__delegate;
    return G__5569;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__5574__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__5575 = ntcoll;
          var G__5576 = cljs.core.first.call(null, kvs);
          var G__5577 = cljs.core.second.call(null, kvs);
          var G__5578 = cljs.core.nnext.call(null, kvs);
          tcoll = G__5575;
          key = G__5576;
          val = G__5577;
          kvs = G__5578;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__5574 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5574__delegate.call(this, tcoll, key, val, kvs);
    };
    G__5574.cljs$lang$maxFixedArity = 3;
    G__5574.cljs$lang$applyTo = function(arglist__5579) {
      var tcoll = cljs.core.first(arglist__5579);
      arglist__5579 = cljs.core.next(arglist__5579);
      var key = cljs.core.first(arglist__5579);
      arglist__5579 = cljs.core.next(arglist__5579);
      var val = cljs.core.first(arglist__5579);
      var kvs = cljs.core.rest(arglist__5579);
      return G__5574__delegate(tcoll, key, val, kvs);
    };
    G__5574.cljs$core$IFn$_invoke$arity$variadic = G__5574__delegate;
    return G__5574;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__5580__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__5581 = ntcoll;
          var G__5582 = cljs.core.first.call(null, ks);
          var G__5583 = cljs.core.next.call(null, ks);
          tcoll = G__5581;
          key = G__5582;
          ks = G__5583;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__5580 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5580__delegate.call(this, tcoll, key, ks);
    };
    G__5580.cljs$lang$maxFixedArity = 2;
    G__5580.cljs$lang$applyTo = function(arglist__5584) {
      var tcoll = cljs.core.first(arglist__5584);
      arglist__5584 = cljs.core.next(arglist__5584);
      var key = cljs.core.first(arglist__5584);
      var ks = cljs.core.rest(arglist__5584);
      return G__5580__delegate(tcoll, key, ks);
    };
    G__5580.cljs$core$IFn$_invoke$arity$variadic = G__5580__delegate;
    return G__5580;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__5585__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__5586 = ntcoll;
          var G__5587 = cljs.core.first.call(null, vals);
          var G__5588 = cljs.core.next.call(null, vals);
          tcoll = G__5586;
          val = G__5587;
          vals = G__5588;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__5585 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5585__delegate.call(this, tcoll, val, vals);
    };
    G__5585.cljs$lang$maxFixedArity = 2;
    G__5585.cljs$lang$applyTo = function(arglist__5589) {
      var tcoll = cljs.core.first(arglist__5589);
      arglist__5589 = cljs.core.next(arglist__5589);
      var val = cljs.core.first(arglist__5589);
      var vals = cljs.core.rest(arglist__5589);
      return G__5585__delegate(tcoll, val, vals);
    };
    G__5585.cljs$core$IFn$_invoke$arity$variadic = G__5585__delegate;
    return G__5585;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4577 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4577);
      } else {
        return f.call(null, a4577);
      }
    } else {
      var b4578 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4577, b4578);
        } else {
          return f.call(null, a4577, b4578);
        }
      } else {
        var c4579 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4577, b4578, c4579);
          } else {
            return f.call(null, a4577, b4578, c4579);
          }
        } else {
          var d4580 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4577, b4578, c4579, d4580);
            } else {
              return f.call(null, a4577, b4578, c4579, d4580);
            }
          } else {
            var e4581 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4577, b4578, c4579, d4580, e4581);
              } else {
                return f.call(null, a4577, b4578, c4579, d4580, e4581);
              }
            } else {
              var f4582 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4577, b4578, c4579, d4580, e4581, f4582);
                } else {
                  return f.call(null, a4577, b4578, c4579, d4580, e4581, f4582);
                }
              } else {
                var g4583 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4577, b4578, c4579, d4580, e4581, f4582, g4583);
                  } else {
                    return f.call(null, a4577, b4578, c4579, d4580, e4581, f4582, g4583);
                  }
                } else {
                  var h4584 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584);
                    } else {
                      return f.call(null, a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584);
                    }
                  } else {
                    var i4585 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585);
                      } else {
                        return f.call(null, a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585);
                      }
                    } else {
                      var j4586 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586);
                        } else {
                          return f.call(null, a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586);
                        }
                      } else {
                        var k4587 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587);
                          } else {
                            return f.call(null, a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587);
                          }
                        } else {
                          var l4588 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587, l4588);
                            } else {
                              return f.call(null, a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587, l4588);
                            }
                          } else {
                            var m4589 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587, l4588, m4589);
                              } else {
                                return f.call(null, a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587, l4588, m4589);
                              }
                            } else {
                              var n4590 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587, l4588, m4589, n4590);
                                } else {
                                  return f.call(null, a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587, l4588, m4589, n4590);
                                }
                              } else {
                                var o4591 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587, l4588, m4589, n4590, o4591);
                                  } else {
                                    return f.call(null, a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587, l4588, m4589, n4590, o4591);
                                  }
                                } else {
                                  var p4592 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587, l4588, m4589, n4590, o4591, p4592);
                                    } else {
                                      return f.call(null, a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587, l4588, m4589, n4590, o4591, p4592);
                                    }
                                  } else {
                                    var q4593 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587, l4588, m4589, n4590, o4591, p4592, q4593);
                                      } else {
                                        return f.call(null, a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587, l4588, m4589, n4590, o4591, p4592, q4593);
                                      }
                                    } else {
                                      var r4594 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587, l4588, m4589, n4590, o4591, p4592, q4593, r4594);
                                        } else {
                                          return f.call(null, a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587, l4588, m4589, n4590, o4591, p4592, q4593, r4594);
                                        }
                                      } else {
                                        var s4595 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587, l4588, m4589, n4590, o4591, p4592, q4593, r4594, s4595);
                                          } else {
                                            return f.call(null, a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587, l4588, m4589, n4590, o4591, p4592, q4593, r4594, s4595);
                                          }
                                        } else {
                                          var t4596 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587, l4588, m4589, n4590, o4591, p4592, q4593, r4594, s4595, t4596);
                                            } else {
                                              return f.call(null, a4577, b4578, c4579, d4580, e4581, f4582, g4583, h4584, i4585, j4586, k4587, l4588, m4589, n4590, o4591, p4592, q4593, r4594, s4595, t4596);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__5590__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__5590 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__5590__delegate.call(this, f, a, b, c, d, args);
    };
    G__5590.cljs$lang$maxFixedArity = 5;
    G__5590.cljs$lang$applyTo = function(arglist__5591) {
      var f = cljs.core.first(arglist__5591);
      arglist__5591 = cljs.core.next(arglist__5591);
      var a = cljs.core.first(arglist__5591);
      arglist__5591 = cljs.core.next(arglist__5591);
      var b = cljs.core.first(arglist__5591);
      arglist__5591 = cljs.core.next(arglist__5591);
      var c = cljs.core.first(arglist__5591);
      arglist__5591 = cljs.core.next(arglist__5591);
      var d = cljs.core.first(arglist__5591);
      var args = cljs.core.rest(arglist__5591);
      return G__5590__delegate(f, a, b, c, d, args);
    };
    G__5590.cljs$core$IFn$_invoke$arity$variadic = G__5590__delegate;
    return G__5590;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__5592__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__5592 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__5592__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__5592.cljs$lang$maxFixedArity = 6;
    G__5592.cljs$lang$applyTo = function(arglist__5593) {
      var obj = cljs.core.first(arglist__5593);
      arglist__5593 = cljs.core.next(arglist__5593);
      var f = cljs.core.first(arglist__5593);
      arglist__5593 = cljs.core.next(arglist__5593);
      var a = cljs.core.first(arglist__5593);
      arglist__5593 = cljs.core.next(arglist__5593);
      var b = cljs.core.first(arglist__5593);
      arglist__5593 = cljs.core.next(arglist__5593);
      var c = cljs.core.first(arglist__5593);
      arglist__5593 = cljs.core.next(arglist__5593);
      var d = cljs.core.first(arglist__5593);
      var args = cljs.core.rest(arglist__5593);
      return G__5592__delegate(obj, f, a, b, c, d, args);
    };
    G__5592.cljs$core$IFn$_invoke$arity$variadic = G__5592__delegate;
    return G__5592;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__5594__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__5594 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5594__delegate.call(this, x, y, more);
    };
    G__5594.cljs$lang$maxFixedArity = 2;
    G__5594.cljs$lang$applyTo = function(arglist__5595) {
      var x = cljs.core.first(arglist__5595);
      arglist__5595 = cljs.core.next(arglist__5595);
      var y = cljs.core.first(arglist__5595);
      var more = cljs.core.rest(arglist__5595);
      return G__5594__delegate(x, y, more);
    };
    G__5594.cljs$core$IFn$_invoke$arity$variadic = G__5594__delegate;
    return G__5594;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t5599 !== "undefined") {
  } else {
    cljs.core.t5599 = function(nil_iter, meta5600) {
      this.nil_iter = nil_iter;
      this.meta5600 = meta5600;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t5599.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t5599.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t5599.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t5599.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5601) {
      var self__ = this;
      var _5601__$1 = this;
      return self__.meta5600;
    };
    cljs.core.t5599.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5601, meta5600__$1) {
      var self__ = this;
      var _5601__$1 = this;
      return new cljs.core.t5599(self__.nil_iter, meta5600__$1);
    };
    cljs.core.t5599.cljs$lang$type = true;
    cljs.core.t5599.cljs$lang$ctorStr = "cljs.core/t5599";
    cljs.core.t5599.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
      return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/t5599");
    };
    cljs.core.__GT_t5599 = function __GT_t5599(nil_iter__$1, meta5600) {
      return new cljs.core.t5599(nil_iter__$1, meta5600);
    };
  }
  return new cljs.core.t5599(nil_iter, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 54, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 3007, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 3003, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/brabadu/projects/prom-stats/target/cljsbuild-compiler-0/cljs/core.cljs"], null));
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq.call(null, self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next.call(null, self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not.call(null, this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first.call(null, self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter.call(null);
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter.call(null, coll);
      } else {
        if (cljs.core.iterable_QMARK_.call(null, coll)) {
          return cljs.core._iterator.call(null, coll);
        } else {
          if (cljs.core.seqable_QMARK_.call(null, coll)) {
            return cljs.core.seq_iter.call(null, coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3634__auto__ = !(lt.stepper == null);
      if (and__3634__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3634__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, self__.xform.call(null, lt, self__.iter.next()))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq.call(null, self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first.call(null, iters__$1);
      if (cljs.core.not.call(null, iter.hasNext())) {
        return false;
      } else {
        var G__5602 = cljs.core.next.call(null, iters__$1);
        iters__$1 = G__5602;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4533__auto___5603 = self__.iters.length;
  var i_5604 = 0;
  while (true) {
    if (i_5604 < n__4533__auto___5603) {
      self__.nexts[i_5604] = self__.iters[i_5604].next();
      var G__5605 = i_5604 + 1;
      i_5604 = G__5605;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.call(null, self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3634__auto__ = !(lt.stepper == null);
      if (and__3634__auto__) {
        return this$.hasNext();
      } else {
        return and__3634__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, cljs.core.apply.call(null, self__.xform, cljs.core.cons.call(null, lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.call(null, xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(xform.call(null, stepfn), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq.call(null, self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq.call(null, this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential.call(null, this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_.call(null, other) && cljs.core.seq.call(null, other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, cljs.core._seq.call(null, this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper.call(null, xform, cljs.core.iter.call(null, coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__5606_5610 = cljs.core.seq.call(null, colls);
  var chunk__5607_5611 = null;
  var count__5608_5612 = 0;
  var i__5609_5613 = 0;
  while (true) {
    if (i__5609_5613 < count__5608_5612) {
      var coll_5614 = cljs.core._nth.call(null, chunk__5607_5611, i__5609_5613);
      iters.push(cljs.core.iter.call(null, coll_5614));
      var G__5615 = seq__5606_5610;
      var G__5616 = chunk__5607_5611;
      var G__5617 = count__5608_5612;
      var G__5618 = i__5609_5613 + 1;
      seq__5606_5610 = G__5615;
      chunk__5607_5611 = G__5616;
      count__5608_5612 = G__5617;
      i__5609_5613 = G__5618;
      continue;
    } else {
      var temp__4126__auto___5619 = cljs.core.seq.call(null, seq__5606_5610);
      if (temp__4126__auto___5619) {
        var seq__5606_5620__$1 = temp__4126__auto___5619;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5606_5620__$1)) {
          var c__4433__auto___5621 = cljs.core.chunk_first.call(null, seq__5606_5620__$1);
          var G__5622 = cljs.core.chunk_rest.call(null, seq__5606_5620__$1);
          var G__5623 = c__4433__auto___5621;
          var G__5624 = cljs.core.count.call(null, c__4433__auto___5621);
          var G__5625 = 0;
          seq__5606_5610 = G__5622;
          chunk__5607_5611 = G__5623;
          count__5608_5612 = G__5624;
          i__5609_5613 = G__5625;
          continue;
        } else {
          var coll_5626 = cljs.core.first.call(null, seq__5606_5620__$1);
          iters.push(cljs.core.iter.call(null, coll_5626));
          var G__5627 = cljs.core.next.call(null, seq__5606_5620__$1);
          var G__5628 = null;
          var G__5629 = 0;
          var G__5630 = 0;
          seq__5606_5610 = G__5627;
          chunk__5607_5611 = G__5628;
          count__5608_5612 = G__5629;
          i__5609_5613 = G__5630;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.call(null, xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_.call(null, coll)) {
      return coll;
    } else {
      var or__3646__auto__ = cljs.core.seq.call(null, coll);
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__5631__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array.call(null, cljs.core.cons.call(null, coll, colls)));
    };
    var G__5631 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5631__delegate.call(this, xform, coll, colls);
    };
    G__5631.cljs$lang$maxFixedArity = 2;
    G__5631.cljs$lang$applyTo = function(arglist__5632) {
      var xform = cljs.core.first(arglist__5632);
      arglist__5632 = cljs.core.next(arglist__5632);
      var coll = cljs.core.first(arglist__5632);
      var colls = cljs.core.rest(arglist__5632);
      return G__5631__delegate(xform, coll, colls);
    };
    G__5631.cljs$core$IFn$_invoke$arity$variadic = G__5631__delegate;
    return G__5631;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__5633 = pred;
        var G__5634 = cljs.core.next.call(null, coll);
        pred = G__5633;
        coll = G__5634;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3646__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3646__auto__)) {
        return or__3646__auto__;
      } else {
        var G__5635 = pred;
        var G__5636 = cljs.core.next.call(null, coll);
        pred = G__5635;
        coll = G__5636;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__5637 = null;
    var G__5637__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__5637__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__5637__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__5637__3 = function() {
      var G__5638__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__5638 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__5638__delegate.call(this, x, y, zs);
      };
      G__5638.cljs$lang$maxFixedArity = 2;
      G__5638.cljs$lang$applyTo = function(arglist__5639) {
        var x = cljs.core.first(arglist__5639);
        arglist__5639 = cljs.core.next(arglist__5639);
        var y = cljs.core.first(arglist__5639);
        var zs = cljs.core.rest(arglist__5639);
        return G__5638__delegate(x, y, zs);
      };
      G__5638.cljs$core$IFn$_invoke$arity$variadic = G__5638__delegate;
      return G__5638;
    }();
    G__5637 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__5637__0.call(this);
        case 1:
          return G__5637__1.call(this, x);
        case 2:
          return G__5637__2.call(this, x, y);
        default:
          return G__5637__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__5637.cljs$lang$maxFixedArity = 2;
    G__5637.cljs$lang$applyTo = G__5637__3.cljs$lang$applyTo;
    G__5637.cljs$core$IFn$_invoke$arity$0 = G__5637__0;
    G__5637.cljs$core$IFn$_invoke$arity$1 = G__5637__1;
    G__5637.cljs$core$IFn$_invoke$arity$2 = G__5637__2;
    G__5637.cljs$core$IFn$_invoke$arity$variadic = G__5637__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__5637;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__5640__delegate = function(args) {
      return x;
    };
    var G__5640 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__5640__delegate.call(this, args);
    };
    G__5640.cljs$lang$maxFixedArity = 0;
    G__5640.cljs$lang$applyTo = function(arglist__5641) {
      var args = cljs.core.seq(arglist__5641);
      return G__5640__delegate(args);
    };
    G__5640.cljs$core$IFn$_invoke$arity$variadic = G__5640__delegate;
    return G__5640;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__5642 = null;
      var G__5642__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__5642__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__5642__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__5642__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__5642__4 = function() {
        var G__5643__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__5643 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5643__delegate.call(this, x, y, z, args);
        };
        G__5643.cljs$lang$maxFixedArity = 3;
        G__5643.cljs$lang$applyTo = function(arglist__5644) {
          var x = cljs.core.first(arglist__5644);
          arglist__5644 = cljs.core.next(arglist__5644);
          var y = cljs.core.first(arglist__5644);
          arglist__5644 = cljs.core.next(arglist__5644);
          var z = cljs.core.first(arglist__5644);
          var args = cljs.core.rest(arglist__5644);
          return G__5643__delegate(x, y, z, args);
        };
        G__5643.cljs$core$IFn$_invoke$arity$variadic = G__5643__delegate;
        return G__5643;
      }();
      G__5642 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__5642__0.call(this);
          case 1:
            return G__5642__1.call(this, x);
          case 2:
            return G__5642__2.call(this, x, y);
          case 3:
            return G__5642__3.call(this, x, y, z);
          default:
            return G__5642__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5642.cljs$lang$maxFixedArity = 3;
      G__5642.cljs$lang$applyTo = G__5642__4.cljs$lang$applyTo;
      G__5642.cljs$core$IFn$_invoke$arity$0 = G__5642__0;
      G__5642.cljs$core$IFn$_invoke$arity$1 = G__5642__1;
      G__5642.cljs$core$IFn$_invoke$arity$2 = G__5642__2;
      G__5642.cljs$core$IFn$_invoke$arity$3 = G__5642__3;
      G__5642.cljs$core$IFn$_invoke$arity$variadic = G__5642__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__5642;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__5645 = null;
      var G__5645__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__5645__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__5645__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__5645__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__5645__4 = function() {
        var G__5646__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__5646 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5646__delegate.call(this, x, y, z, args);
        };
        G__5646.cljs$lang$maxFixedArity = 3;
        G__5646.cljs$lang$applyTo = function(arglist__5647) {
          var x = cljs.core.first(arglist__5647);
          arglist__5647 = cljs.core.next(arglist__5647);
          var y = cljs.core.first(arglist__5647);
          arglist__5647 = cljs.core.next(arglist__5647);
          var z = cljs.core.first(arglist__5647);
          var args = cljs.core.rest(arglist__5647);
          return G__5646__delegate(x, y, z, args);
        };
        G__5646.cljs$core$IFn$_invoke$arity$variadic = G__5646__delegate;
        return G__5646;
      }();
      G__5645 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__5645__0.call(this);
          case 1:
            return G__5645__1.call(this, x);
          case 2:
            return G__5645__2.call(this, x, y);
          case 3:
            return G__5645__3.call(this, x, y, z);
          default:
            return G__5645__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5645.cljs$lang$maxFixedArity = 3;
      G__5645.cljs$lang$applyTo = G__5645__4.cljs$lang$applyTo;
      G__5645.cljs$core$IFn$_invoke$arity$0 = G__5645__0;
      G__5645.cljs$core$IFn$_invoke$arity$1 = G__5645__1;
      G__5645.cljs$core$IFn$_invoke$arity$2 = G__5645__2;
      G__5645.cljs$core$IFn$_invoke$arity$3 = G__5645__3;
      G__5645.cljs$core$IFn$_invoke$arity$variadic = G__5645__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__5645;
    }();
  };
  var comp__4 = function() {
    var G__5648__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__5649__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__5650 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__5651 = cljs.core.next.call(null, fs__$2);
                ret = G__5650;
                fs__$2 = G__5651;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__5649 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__5649__delegate.call(this, args);
          };
          G__5649.cljs$lang$maxFixedArity = 0;
          G__5649.cljs$lang$applyTo = function(arglist__5652) {
            var args = cljs.core.seq(arglist__5652);
            return G__5649__delegate(args);
          };
          G__5649.cljs$core$IFn$_invoke$arity$variadic = G__5649__delegate;
          return G__5649;
        }();
      }(fs__$1);
    };
    var G__5648 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5648__delegate.call(this, f1, f2, f3, fs);
    };
    G__5648.cljs$lang$maxFixedArity = 3;
    G__5648.cljs$lang$applyTo = function(arglist__5653) {
      var f1 = cljs.core.first(arglist__5653);
      arglist__5653 = cljs.core.next(arglist__5653);
      var f2 = cljs.core.first(arglist__5653);
      arglist__5653 = cljs.core.next(arglist__5653);
      var f3 = cljs.core.first(arglist__5653);
      var fs = cljs.core.rest(arglist__5653);
      return G__5648__delegate(f1, f2, f3, fs);
    };
    G__5648.cljs$core$IFn$_invoke$arity$variadic = G__5648__delegate;
    return G__5648;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__5654 = null;
      var G__5654__0 = function() {
        return f.call(null, arg1);
      };
      var G__5654__1 = function(x) {
        return f.call(null, arg1, x);
      };
      var G__5654__2 = function(x, y) {
        return f.call(null, arg1, x, y);
      };
      var G__5654__3 = function(x, y, z) {
        return f.call(null, arg1, x, y, z);
      };
      var G__5654__4 = function() {
        var G__5655__delegate = function(x, y, z, args) {
          return cljs.core.apply.call(null, f, arg1, x, y, z, args);
        };
        var G__5655 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5655__delegate.call(this, x, y, z, args);
        };
        G__5655.cljs$lang$maxFixedArity = 3;
        G__5655.cljs$lang$applyTo = function(arglist__5656) {
          var x = cljs.core.first(arglist__5656);
          arglist__5656 = cljs.core.next(arglist__5656);
          var y = cljs.core.first(arglist__5656);
          arglist__5656 = cljs.core.next(arglist__5656);
          var z = cljs.core.first(arglist__5656);
          var args = cljs.core.rest(arglist__5656);
          return G__5655__delegate(x, y, z, args);
        };
        G__5655.cljs$core$IFn$_invoke$arity$variadic = G__5655__delegate;
        return G__5655;
      }();
      G__5654 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__5654__0.call(this);
          case 1:
            return G__5654__1.call(this, x);
          case 2:
            return G__5654__2.call(this, x, y);
          case 3:
            return G__5654__3.call(this, x, y, z);
          default:
            return G__5654__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5654.cljs$lang$maxFixedArity = 3;
      G__5654.cljs$lang$applyTo = G__5654__4.cljs$lang$applyTo;
      G__5654.cljs$core$IFn$_invoke$arity$0 = G__5654__0;
      G__5654.cljs$core$IFn$_invoke$arity$1 = G__5654__1;
      G__5654.cljs$core$IFn$_invoke$arity$2 = G__5654__2;
      G__5654.cljs$core$IFn$_invoke$arity$3 = G__5654__3;
      G__5654.cljs$core$IFn$_invoke$arity$variadic = G__5654__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__5654;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__5657 = null;
      var G__5657__0 = function() {
        return f.call(null, arg1, arg2);
      };
      var G__5657__1 = function(x) {
        return f.call(null, arg1, arg2, x);
      };
      var G__5657__2 = function(x, y) {
        return f.call(null, arg1, arg2, x, y);
      };
      var G__5657__3 = function(x, y, z) {
        return f.call(null, arg1, arg2, x, y, z);
      };
      var G__5657__4 = function() {
        var G__5658__delegate = function(x, y, z, args) {
          return cljs.core.apply.call(null, f, arg1, arg2, x, y, z, args);
        };
        var G__5658 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5658__delegate.call(this, x, y, z, args);
        };
        G__5658.cljs$lang$maxFixedArity = 3;
        G__5658.cljs$lang$applyTo = function(arglist__5659) {
          var x = cljs.core.first(arglist__5659);
          arglist__5659 = cljs.core.next(arglist__5659);
          var y = cljs.core.first(arglist__5659);
          arglist__5659 = cljs.core.next(arglist__5659);
          var z = cljs.core.first(arglist__5659);
          var args = cljs.core.rest(arglist__5659);
          return G__5658__delegate(x, y, z, args);
        };
        G__5658.cljs$core$IFn$_invoke$arity$variadic = G__5658__delegate;
        return G__5658;
      }();
      G__5657 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__5657__0.call(this);
          case 1:
            return G__5657__1.call(this, x);
          case 2:
            return G__5657__2.call(this, x, y);
          case 3:
            return G__5657__3.call(this, x, y, z);
          default:
            return G__5657__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5657.cljs$lang$maxFixedArity = 3;
      G__5657.cljs$lang$applyTo = G__5657__4.cljs$lang$applyTo;
      G__5657.cljs$core$IFn$_invoke$arity$0 = G__5657__0;
      G__5657.cljs$core$IFn$_invoke$arity$1 = G__5657__1;
      G__5657.cljs$core$IFn$_invoke$arity$2 = G__5657__2;
      G__5657.cljs$core$IFn$_invoke$arity$3 = G__5657__3;
      G__5657.cljs$core$IFn$_invoke$arity$variadic = G__5657__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__5657;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__5660 = null;
      var G__5660__0 = function() {
        return f.call(null, arg1, arg2, arg3);
      };
      var G__5660__1 = function(x) {
        return f.call(null, arg1, arg2, arg3, x);
      };
      var G__5660__2 = function(x, y) {
        return f.call(null, arg1, arg2, arg3, x, y);
      };
      var G__5660__3 = function(x, y, z) {
        return f.call(null, arg1, arg2, arg3, x, y, z);
      };
      var G__5660__4 = function() {
        var G__5661__delegate = function(x, y, z, args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, x, y, z, args);
        };
        var G__5661 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5661__delegate.call(this, x, y, z, args);
        };
        G__5661.cljs$lang$maxFixedArity = 3;
        G__5661.cljs$lang$applyTo = function(arglist__5662) {
          var x = cljs.core.first(arglist__5662);
          arglist__5662 = cljs.core.next(arglist__5662);
          var y = cljs.core.first(arglist__5662);
          arglist__5662 = cljs.core.next(arglist__5662);
          var z = cljs.core.first(arglist__5662);
          var args = cljs.core.rest(arglist__5662);
          return G__5661__delegate(x, y, z, args);
        };
        G__5661.cljs$core$IFn$_invoke$arity$variadic = G__5661__delegate;
        return G__5661;
      }();
      G__5660 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__5660__0.call(this);
          case 1:
            return G__5660__1.call(this, x);
          case 2:
            return G__5660__2.call(this, x, y);
          case 3:
            return G__5660__3.call(this, x, y, z);
          default:
            return G__5660__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5660.cljs$lang$maxFixedArity = 3;
      G__5660.cljs$lang$applyTo = G__5660__4.cljs$lang$applyTo;
      G__5660.cljs$core$IFn$_invoke$arity$0 = G__5660__0;
      G__5660.cljs$core$IFn$_invoke$arity$1 = G__5660__1;
      G__5660.cljs$core$IFn$_invoke$arity$2 = G__5660__2;
      G__5660.cljs$core$IFn$_invoke$arity$3 = G__5660__3;
      G__5660.cljs$core$IFn$_invoke$arity$variadic = G__5660__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__5660;
    }();
  };
  var partial__5 = function() {
    var G__5663__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__5664__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__5664 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__5664__delegate.call(this, args);
        };
        G__5664.cljs$lang$maxFixedArity = 0;
        G__5664.cljs$lang$applyTo = function(arglist__5665) {
          var args = cljs.core.seq(arglist__5665);
          return G__5664__delegate(args);
        };
        G__5664.cljs$core$IFn$_invoke$arity$variadic = G__5664__delegate;
        return G__5664;
      }();
    };
    var G__5663 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__5663__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__5663.cljs$lang$maxFixedArity = 4;
    G__5663.cljs$lang$applyTo = function(arglist__5666) {
      var f = cljs.core.first(arglist__5666);
      arglist__5666 = cljs.core.next(arglist__5666);
      var arg1 = cljs.core.first(arglist__5666);
      arglist__5666 = cljs.core.next(arglist__5666);
      var arg2 = cljs.core.first(arglist__5666);
      arglist__5666 = cljs.core.next(arglist__5666);
      var arg3 = cljs.core.first(arglist__5666);
      var more = cljs.core.rest(arglist__5666);
      return G__5663__delegate(f, arg1, arg2, arg3, more);
    };
    G__5663.cljs$core$IFn$_invoke$arity$variadic = G__5663__delegate;
    return G__5663;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__5667 = null;
      var G__5667__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__5667__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__5667__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__5667__4 = function() {
        var G__5668__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__5668 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5668__delegate.call(this, a, b, c, ds);
        };
        G__5668.cljs$lang$maxFixedArity = 3;
        G__5668.cljs$lang$applyTo = function(arglist__5669) {
          var a = cljs.core.first(arglist__5669);
          arglist__5669 = cljs.core.next(arglist__5669);
          var b = cljs.core.first(arglist__5669);
          arglist__5669 = cljs.core.next(arglist__5669);
          var c = cljs.core.first(arglist__5669);
          var ds = cljs.core.rest(arglist__5669);
          return G__5668__delegate(a, b, c, ds);
        };
        G__5668.cljs$core$IFn$_invoke$arity$variadic = G__5668__delegate;
        return G__5668;
      }();
      G__5667 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__5667__1.call(this, a);
          case 2:
            return G__5667__2.call(this, a, b);
          case 3:
            return G__5667__3.call(this, a, b, c);
          default:
            return G__5667__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5667.cljs$lang$maxFixedArity = 3;
      G__5667.cljs$lang$applyTo = G__5667__4.cljs$lang$applyTo;
      G__5667.cljs$core$IFn$_invoke$arity$1 = G__5667__1;
      G__5667.cljs$core$IFn$_invoke$arity$2 = G__5667__2;
      G__5667.cljs$core$IFn$_invoke$arity$3 = G__5667__3;
      G__5667.cljs$core$IFn$_invoke$arity$variadic = G__5667__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__5667;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__5670 = null;
      var G__5670__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__5670__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__5670__4 = function() {
        var G__5671__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__5671 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5671__delegate.call(this, a, b, c, ds);
        };
        G__5671.cljs$lang$maxFixedArity = 3;
        G__5671.cljs$lang$applyTo = function(arglist__5672) {
          var a = cljs.core.first(arglist__5672);
          arglist__5672 = cljs.core.next(arglist__5672);
          var b = cljs.core.first(arglist__5672);
          arglist__5672 = cljs.core.next(arglist__5672);
          var c = cljs.core.first(arglist__5672);
          var ds = cljs.core.rest(arglist__5672);
          return G__5671__delegate(a, b, c, ds);
        };
        G__5671.cljs$core$IFn$_invoke$arity$variadic = G__5671__delegate;
        return G__5671;
      }();
      G__5670 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__5670__2.call(this, a, b);
          case 3:
            return G__5670__3.call(this, a, b, c);
          default:
            return G__5670__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5670.cljs$lang$maxFixedArity = 3;
      G__5670.cljs$lang$applyTo = G__5670__4.cljs$lang$applyTo;
      G__5670.cljs$core$IFn$_invoke$arity$2 = G__5670__2;
      G__5670.cljs$core$IFn$_invoke$arity$3 = G__5670__3;
      G__5670.cljs$core$IFn$_invoke$arity$variadic = G__5670__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__5670;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__5673 = null;
      var G__5673__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__5673__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__5673__4 = function() {
        var G__5674__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__5674 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5674__delegate.call(this, a, b, c, ds);
        };
        G__5674.cljs$lang$maxFixedArity = 3;
        G__5674.cljs$lang$applyTo = function(arglist__5675) {
          var a = cljs.core.first(arglist__5675);
          arglist__5675 = cljs.core.next(arglist__5675);
          var b = cljs.core.first(arglist__5675);
          arglist__5675 = cljs.core.next(arglist__5675);
          var c = cljs.core.first(arglist__5675);
          var ds = cljs.core.rest(arglist__5675);
          return G__5674__delegate(a, b, c, ds);
        };
        G__5674.cljs$core$IFn$_invoke$arity$variadic = G__5674__delegate;
        return G__5674;
      }();
      G__5673 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__5673__2.call(this, a, b);
          case 3:
            return G__5673__3.call(this, a, b, c);
          default:
            return G__5673__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5673.cljs$lang$maxFixedArity = 3;
      G__5673.cljs$lang$applyTo = G__5673__4.cljs$lang$applyTo;
      G__5673.cljs$core$IFn$_invoke$arity$2 = G__5673__2;
      G__5673.cljs$core$IFn$_invoke$arity$3 = G__5673__3;
      G__5673.cljs$core$IFn$_invoke$arity$variadic = G__5673__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__5673;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4533__auto___5676 = size;
          var i_5677 = 0;
          while (true) {
            if (i_5677 < n__4533__auto___5676) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_5677, cljs.core._nth.call(null, c, i_5677)));
              var G__5678 = i_5677 + 1;
              i_5677 = G__5678;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__5679 = null;
        var G__5679__0 = function() {
          return rf.call(null);
        };
        var G__5679__1 = function(result) {
          return rf.call(null, result);
        };
        var G__5679__2 = function(result, input) {
          var v = f.call(null, input);
          if (v == null) {
            return result;
          } else {
            return rf.call(null, result, v);
          }
        };
        G__5679 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__5679__0.call(this);
            case 1:
              return G__5679__1.call(this, result);
            case 2:
              return G__5679__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__5679.cljs$core$IFn$_invoke$arity$0 = G__5679__0;
        G__5679.cljs$core$IFn$_invoke$arity$1 = G__5679__1;
        G__5679.cljs$core$IFn$_invoke$arity$2 = G__5679__2;
        return G__5679;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4533__auto___5680 = size;
          var i_5681 = 0;
          while (true) {
            if (i_5681 < n__4533__auto___5680) {
              var x_5682 = f.call(null, cljs.core._nth.call(null, c, i_5681));
              if (x_5682 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_5682);
              }
              var G__5683 = i_5681 + 1;
              i_5681 = G__5683;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, cljs.core.first.call(null, s));
          if (x == null) {
            return keep.call(null, f, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__5684 = cljs.core.seq.call(null, self__.watches);
  var chunk__5685 = null;
  var count__5686 = 0;
  var i__5687 = 0;
  while (true) {
    if (i__5687 < count__5686) {
      var vec__5688 = cljs.core._nth.call(null, chunk__5685, i__5687);
      var key = cljs.core.nth.call(null, vec__5688, 0, null);
      var f = cljs.core.nth.call(null, vec__5688, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__5690 = seq__5684;
      var G__5691 = chunk__5685;
      var G__5692 = count__5686;
      var G__5693 = i__5687 + 1;
      seq__5684 = G__5690;
      chunk__5685 = G__5691;
      count__5686 = G__5692;
      i__5687 = G__5693;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__5684);
      if (temp__4126__auto__) {
        var seq__5684__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5684__$1)) {
          var c__4433__auto__ = cljs.core.chunk_first.call(null, seq__5684__$1);
          var G__5694 = cljs.core.chunk_rest.call(null, seq__5684__$1);
          var G__5695 = c__4433__auto__;
          var G__5696 = cljs.core.count.call(null, c__4433__auto__);
          var G__5697 = 0;
          seq__5684 = G__5694;
          chunk__5685 = G__5695;
          count__5686 = G__5696;
          i__5687 = G__5697;
          continue;
        } else {
          var vec__5689 = cljs.core.first.call(null, seq__5684__$1);
          var key = cljs.core.nth.call(null, vec__5689, 0, null);
          var f = cljs.core.nth.call(null, vec__5689, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__5698 = cljs.core.next.call(null, seq__5684__$1);
          var G__5699 = null;
          var G__5700 = 0;
          var G__5701 = 0;
          seq__5684 = G__5698;
          chunk__5685 = G__5699;
          count__5686 = G__5700;
          i__5687 = G__5701;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__5705__delegate = function(x, p__5702) {
      var map__5704 = p__5702;
      var map__5704__$1 = cljs.core.seq_QMARK_.call(null, map__5704) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5704) : map__5704;
      var validator = cljs.core.get.call(null, map__5704__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__5704__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__5705 = function(x, var_args) {
      var p__5702 = null;
      if (arguments.length > 1) {
        p__5702 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__5705__delegate.call(this, x, p__5702);
    };
    G__5705.cljs$lang$maxFixedArity = 1;
    G__5705.cljs$lang$applyTo = function(arglist__5706) {
      var x = cljs.core.first(arglist__5706);
      var p__5702 = cljs.core.rest(arglist__5706);
      return G__5705__delegate(x, p__5702);
    };
    G__5705.cljs$core$IFn$_invoke$arity$variadic = G__5705__delegate;
    return G__5705;
  }();
  atom = function(x, var_args) {
    var p__5702 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null))))].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__5707__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__5707 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__5707__delegate.call(this, a, f, x, y, more);
    };
    G__5707.cljs$lang$maxFixedArity = 4;
    G__5707.cljs$lang$applyTo = function(arglist__5708) {
      var a = cljs.core.first(arglist__5708);
      arglist__5708 = cljs.core.next(arglist__5708);
      var f = cljs.core.first(arglist__5708);
      arglist__5708 = cljs.core.next(arglist__5708);
      var x = cljs.core.first(arglist__5708);
      arglist__5708 = cljs.core.next(arglist__5708);
      var y = cljs.core.first(arglist__5708);
      var more = cljs.core.rest(arglist__5708);
      return G__5707__delegate(a, f, x, y, more);
    };
    G__5707.cljs$core$IFn$_invoke$arity$variadic = G__5707__delegate;
    return G__5707;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function __GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_.call(null, vol, newval);
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_.call(null, -1);
      return function(ia) {
        return function() {
          var G__5709 = null;
          var G__5709__0 = function() {
            return rf.call(null);
          };
          var G__5709__1 = function(result) {
            return rf.call(null, result);
          };
          var G__5709__2 = function(result, input) {
            var i = cljs.core._vreset_BANG_.call(null, ia, cljs.core._deref.call(null, ia) + 1);
            var v = f.call(null, i, input);
            if (v == null) {
              return result;
            } else {
              return rf.call(null, result, v);
            }
          };
          G__5709 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__5709__0.call(this);
              case 1:
                return G__5709__1.call(this, result);
              case 2:
                return G__5709__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__5709.cljs$core$IFn$_invoke$arity$0 = G__5709__0;
          G__5709.cljs$core$IFn$_invoke$arity$1 = G__5709__1;
          G__5709.cljs$core$IFn$_invoke$arity$2 = G__5709__2;
          return G__5709;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
            var c = cljs.core.chunk_first.call(null, s);
            var size = cljs.core.count.call(null, c);
            var b = cljs.core.chunk_buffer.call(null, size);
            var n__4533__auto___5710 = size;
            var i_5711 = 0;
            while (true) {
              if (i_5711 < n__4533__auto___5710) {
                var x_5712 = f.call(null, idx + i_5711, cljs.core._nth.call(null, c, i_5711));
                if (x_5712 == null) {
                } else {
                  cljs.core.chunk_append.call(null, b, x_5712);
                }
                var G__5713 = i_5711 + 1;
                i_5711 = G__5713;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
          } else {
            var x = f.call(null, idx, cljs.core.first.call(null, s));
            if (x == null) {
              return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
            } else {
              return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi.call(null, 0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3634__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3634__auto__)) {
            return p.call(null, y);
          } else {
            return and__3634__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3634__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3634__auto__)) {
            var and__3634__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3634__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3634__auto____$1;
            }
          } else {
            return and__3634__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__5720__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__5720 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5720__delegate.call(this, x, y, z, args);
        };
        G__5720.cljs$lang$maxFixedArity = 3;
        G__5720.cljs$lang$applyTo = function(arglist__5721) {
          var x = cljs.core.first(arglist__5721);
          arglist__5721 = cljs.core.next(arglist__5721);
          var y = cljs.core.first(arglist__5721);
          arglist__5721 = cljs.core.next(arglist__5721);
          var z = cljs.core.first(arglist__5721);
          var args = cljs.core.rest(arglist__5721);
          return G__5720__delegate(x, y, z, args);
        };
        G__5720.cljs$core$IFn$_invoke$arity$variadic = G__5720__delegate;
        return G__5720;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3634__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3634__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3634__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3634__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3634__auto__)) {
            var and__3634__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3634__auto____$1)) {
              var and__3634__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3634__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3634__auto____$2;
              }
            } else {
              return and__3634__auto____$1;
            }
          } else {
            return and__3634__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3634__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3634__auto__)) {
            var and__3634__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3634__auto____$1)) {
              var and__3634__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3634__auto____$2)) {
                var and__3634__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3634__auto____$3)) {
                  var and__3634__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3634__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3634__auto____$4;
                  }
                } else {
                  return and__3634__auto____$3;
                }
              } else {
                return and__3634__auto____$2;
              }
            } else {
              return and__3634__auto____$1;
            }
          } else {
            return and__3634__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__5722__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__5714_SHARP_) {
            var and__3634__auto__ = p1.call(null, p1__5714_SHARP_);
            if (cljs.core.truth_(and__3634__auto__)) {
              return p2.call(null, p1__5714_SHARP_);
            } else {
              return and__3634__auto__;
            }
          }, args));
        };
        var G__5722 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5722__delegate.call(this, x, y, z, args);
        };
        G__5722.cljs$lang$maxFixedArity = 3;
        G__5722.cljs$lang$applyTo = function(arglist__5723) {
          var x = cljs.core.first(arglist__5723);
          arglist__5723 = cljs.core.next(arglist__5723);
          var y = cljs.core.first(arglist__5723);
          arglist__5723 = cljs.core.next(arglist__5723);
          var z = cljs.core.first(arglist__5723);
          var args = cljs.core.rest(arglist__5723);
          return G__5722__delegate(x, y, z, args);
        };
        G__5722.cljs$core$IFn$_invoke$arity$variadic = G__5722__delegate;
        return G__5722;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3634__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3634__auto__)) {
            var and__3634__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3634__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3634__auto____$1;
            }
          } else {
            return and__3634__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3634__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3634__auto__)) {
            var and__3634__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3634__auto____$1)) {
              var and__3634__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3634__auto____$2)) {
                var and__3634__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3634__auto____$3)) {
                  var and__3634__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3634__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3634__auto____$4;
                  }
                } else {
                  return and__3634__auto____$3;
                }
              } else {
                return and__3634__auto____$2;
              }
            } else {
              return and__3634__auto____$1;
            }
          } else {
            return and__3634__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3634__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3634__auto__)) {
            var and__3634__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3634__auto____$1)) {
              var and__3634__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3634__auto____$2)) {
                var and__3634__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3634__auto____$3)) {
                  var and__3634__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3634__auto____$4)) {
                    var and__3634__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3634__auto____$5)) {
                      var and__3634__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3634__auto____$6)) {
                        var and__3634__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3634__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3634__auto____$7;
                        }
                      } else {
                        return and__3634__auto____$6;
                      }
                    } else {
                      return and__3634__auto____$5;
                    }
                  } else {
                    return and__3634__auto____$4;
                  }
                } else {
                  return and__3634__auto____$3;
                }
              } else {
                return and__3634__auto____$2;
              }
            } else {
              return and__3634__auto____$1;
            }
          } else {
            return and__3634__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__5724__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__5715_SHARP_) {
            var and__3634__auto__ = p1.call(null, p1__5715_SHARP_);
            if (cljs.core.truth_(and__3634__auto__)) {
              var and__3634__auto____$1 = p2.call(null, p1__5715_SHARP_);
              if (cljs.core.truth_(and__3634__auto____$1)) {
                return p3.call(null, p1__5715_SHARP_);
              } else {
                return and__3634__auto____$1;
              }
            } else {
              return and__3634__auto__;
            }
          }, args));
        };
        var G__5724 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5724__delegate.call(this, x, y, z, args);
        };
        G__5724.cljs$lang$maxFixedArity = 3;
        G__5724.cljs$lang$applyTo = function(arglist__5725) {
          var x = cljs.core.first(arglist__5725);
          arglist__5725 = cljs.core.next(arglist__5725);
          var y = cljs.core.first(arglist__5725);
          arglist__5725 = cljs.core.next(arglist__5725);
          var z = cljs.core.first(arglist__5725);
          var args = cljs.core.rest(arglist__5725);
          return G__5724__delegate(x, y, z, args);
        };
        G__5724.cljs$core$IFn$_invoke$arity$variadic = G__5724__delegate;
        return G__5724;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__5726__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__5716_SHARP_) {
                return p1__5716_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__5717_SHARP_) {
                var and__3634__auto__ = p1__5717_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3634__auto__)) {
                  return p1__5717_SHARP_.call(null, y);
                } else {
                  return and__3634__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__5718_SHARP_) {
                var and__3634__auto__ = p1__5718_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3634__auto__)) {
                  var and__3634__auto____$1 = p1__5718_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3634__auto____$1)) {
                    return p1__5718_SHARP_.call(null, z);
                  } else {
                    return and__3634__auto____$1;
                  }
                } else {
                  return and__3634__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__5727__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__5719_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__5719_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__5727 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__5727__delegate.call(this, x, y, z, args);
            };
            G__5727.cljs$lang$maxFixedArity = 3;
            G__5727.cljs$lang$applyTo = function(arglist__5728) {
              var x = cljs.core.first(arglist__5728);
              arglist__5728 = cljs.core.next(arglist__5728);
              var y = cljs.core.first(arglist__5728);
              arglist__5728 = cljs.core.next(arglist__5728);
              var z = cljs.core.first(arglist__5728);
              var args = cljs.core.rest(arglist__5728);
              return G__5727__delegate(x, y, z, args);
            };
            G__5727.cljs$core$IFn$_invoke$arity$variadic = G__5727__delegate;
            return G__5727;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__5726 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5726__delegate.call(this, p1, p2, p3, ps);
    };
    G__5726.cljs$lang$maxFixedArity = 3;
    G__5726.cljs$lang$applyTo = function(arglist__5729) {
      var p1 = cljs.core.first(arglist__5729);
      arglist__5729 = cljs.core.next(arglist__5729);
      var p2 = cljs.core.first(arglist__5729);
      arglist__5729 = cljs.core.next(arglist__5729);
      var p3 = cljs.core.first(arglist__5729);
      var ps = cljs.core.rest(arglist__5729);
      return G__5726__delegate(p1, p2, p3, ps);
    };
    G__5726.cljs$core$IFn$_invoke$arity$variadic = G__5726__delegate;
    return G__5726;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3646__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3646__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3646__auto____$1)) {
            return or__3646__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__5736__delegate = function(x, y, z, args) {
          var or__3646__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3646__auto__)) {
            return or__3646__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__5736 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5736__delegate.call(this, x, y, z, args);
        };
        G__5736.cljs$lang$maxFixedArity = 3;
        G__5736.cljs$lang$applyTo = function(arglist__5737) {
          var x = cljs.core.first(arglist__5737);
          arglist__5737 = cljs.core.next(arglist__5737);
          var y = cljs.core.first(arglist__5737);
          arglist__5737 = cljs.core.next(arglist__5737);
          var z = cljs.core.first(arglist__5737);
          var args = cljs.core.rest(arglist__5737);
          return G__5736__delegate(x, y, z, args);
        };
        G__5736.cljs$core$IFn$_invoke$arity$variadic = G__5736__delegate;
        return G__5736;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3646__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3646__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3646__auto____$1)) {
            return or__3646__auto____$1;
          } else {
            var or__3646__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3646__auto____$2)) {
              return or__3646__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3646__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3646__auto____$1)) {
            return or__3646__auto____$1;
          } else {
            var or__3646__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3646__auto____$2)) {
              return or__3646__auto____$2;
            } else {
              var or__3646__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3646__auto____$3)) {
                return or__3646__auto____$3;
              } else {
                var or__3646__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3646__auto____$4)) {
                  return or__3646__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__5738__delegate = function(x, y, z, args) {
          var or__3646__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3646__auto__)) {
            return or__3646__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3646__auto__) {
              return function(p1__5730_SHARP_) {
                var or__3646__auto____$1 = p1.call(null, p1__5730_SHARP_);
                if (cljs.core.truth_(or__3646__auto____$1)) {
                  return or__3646__auto____$1;
                } else {
                  return p2.call(null, p1__5730_SHARP_);
                }
              };
            }(or__3646__auto__), args);
          }
        };
        var G__5738 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5738__delegate.call(this, x, y, z, args);
        };
        G__5738.cljs$lang$maxFixedArity = 3;
        G__5738.cljs$lang$applyTo = function(arglist__5739) {
          var x = cljs.core.first(arglist__5739);
          arglist__5739 = cljs.core.next(arglist__5739);
          var y = cljs.core.first(arglist__5739);
          arglist__5739 = cljs.core.next(arglist__5739);
          var z = cljs.core.first(arglist__5739);
          var args = cljs.core.rest(arglist__5739);
          return G__5738__delegate(x, y, z, args);
        };
        G__5738.cljs$core$IFn$_invoke$arity$variadic = G__5738__delegate;
        return G__5738;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3646__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3646__auto____$1)) {
            return or__3646__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3646__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3646__auto____$1)) {
            return or__3646__auto____$1;
          } else {
            var or__3646__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3646__auto____$2)) {
              return or__3646__auto____$2;
            } else {
              var or__3646__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3646__auto____$3)) {
                return or__3646__auto____$3;
              } else {
                var or__3646__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3646__auto____$4)) {
                  return or__3646__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3646__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3646__auto____$1)) {
            return or__3646__auto____$1;
          } else {
            var or__3646__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3646__auto____$2)) {
              return or__3646__auto____$2;
            } else {
              var or__3646__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3646__auto____$3)) {
                return or__3646__auto____$3;
              } else {
                var or__3646__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3646__auto____$4)) {
                  return or__3646__auto____$4;
                } else {
                  var or__3646__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3646__auto____$5)) {
                    return or__3646__auto____$5;
                  } else {
                    var or__3646__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3646__auto____$6)) {
                      return or__3646__auto____$6;
                    } else {
                      var or__3646__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3646__auto____$7)) {
                        return or__3646__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__5740__delegate = function(x, y, z, args) {
          var or__3646__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3646__auto__)) {
            return or__3646__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3646__auto__) {
              return function(p1__5731_SHARP_) {
                var or__3646__auto____$1 = p1.call(null, p1__5731_SHARP_);
                if (cljs.core.truth_(or__3646__auto____$1)) {
                  return or__3646__auto____$1;
                } else {
                  var or__3646__auto____$2 = p2.call(null, p1__5731_SHARP_);
                  if (cljs.core.truth_(or__3646__auto____$2)) {
                    return or__3646__auto____$2;
                  } else {
                    return p3.call(null, p1__5731_SHARP_);
                  }
                }
              };
            }(or__3646__auto__), args);
          }
        };
        var G__5740 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5740__delegate.call(this, x, y, z, args);
        };
        G__5740.cljs$lang$maxFixedArity = 3;
        G__5740.cljs$lang$applyTo = function(arglist__5741) {
          var x = cljs.core.first(arglist__5741);
          arglist__5741 = cljs.core.next(arglist__5741);
          var y = cljs.core.first(arglist__5741);
          arglist__5741 = cljs.core.next(arglist__5741);
          var z = cljs.core.first(arglist__5741);
          var args = cljs.core.rest(arglist__5741);
          return G__5740__delegate(x, y, z, args);
        };
        G__5740.cljs$core$IFn$_invoke$arity$variadic = G__5740__delegate;
        return G__5740;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__5742__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__5732_SHARP_) {
                return p1__5732_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__5733_SHARP_) {
                var or__3646__auto__ = p1__5733_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3646__auto__)) {
                  return or__3646__auto__;
                } else {
                  return p1__5733_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__5734_SHARP_) {
                var or__3646__auto__ = p1__5734_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3646__auto__)) {
                  return or__3646__auto__;
                } else {
                  var or__3646__auto____$1 = p1__5734_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3646__auto____$1)) {
                    return or__3646__auto____$1;
                  } else {
                    return p1__5734_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__5743__delegate = function(x, y, z, args) {
              var or__3646__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3646__auto__)) {
                return or__3646__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3646__auto__, ps__$1) {
                  return function(p1__5735_SHARP_) {
                    return cljs.core.some.call(null, p1__5735_SHARP_, args);
                  };
                }(or__3646__auto__, ps__$1), ps__$1);
              }
            };
            var G__5743 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__5743__delegate.call(this, x, y, z, args);
            };
            G__5743.cljs$lang$maxFixedArity = 3;
            G__5743.cljs$lang$applyTo = function(arglist__5744) {
              var x = cljs.core.first(arglist__5744);
              arglist__5744 = cljs.core.next(arglist__5744);
              var y = cljs.core.first(arglist__5744);
              arglist__5744 = cljs.core.next(arglist__5744);
              var z = cljs.core.first(arglist__5744);
              var args = cljs.core.rest(arglist__5744);
              return G__5743__delegate(x, y, z, args);
            };
            G__5743.cljs$core$IFn$_invoke$arity$variadic = G__5743__delegate;
            return G__5743;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__5742 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5742__delegate.call(this, p1, p2, p3, ps);
    };
    G__5742.cljs$lang$maxFixedArity = 3;
    G__5742.cljs$lang$applyTo = function(arglist__5745) {
      var p1 = cljs.core.first(arglist__5745);
      arglist__5745 = cljs.core.next(arglist__5745);
      var p2 = cljs.core.first(arglist__5745);
      arglist__5745 = cljs.core.next(arglist__5745);
      var p3 = cljs.core.first(arglist__5745);
      var ps = cljs.core.rest(arglist__5745);
      return G__5742__delegate(p1, p2, p3, ps);
    };
    G__5742.cljs$core$IFn$_invoke$arity$variadic = G__5742__delegate;
    return G__5742;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__5747 = null;
        var G__5747__0 = function() {
          return rf.call(null);
        };
        var G__5747__1 = function(result) {
          return rf.call(null, result);
        };
        var G__5747__2 = function(result, input) {
          return rf.call(null, result, f.call(null, input));
        };
        var G__5747__3 = function() {
          var G__5748__delegate = function(result, input, inputs) {
            return rf.call(null, result, cljs.core.apply.call(null, f, input, inputs));
          };
          var G__5748 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              inputs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
            }
            return G__5748__delegate.call(this, result, input, inputs);
          };
          G__5748.cljs$lang$maxFixedArity = 2;
          G__5748.cljs$lang$applyTo = function(arglist__5749) {
            var result = cljs.core.first(arglist__5749);
            arglist__5749 = cljs.core.next(arglist__5749);
            var input = cljs.core.first(arglist__5749);
            var inputs = cljs.core.rest(arglist__5749);
            return G__5748__delegate(result, input, inputs);
          };
          G__5748.cljs$core$IFn$_invoke$arity$variadic = G__5748__delegate;
          return G__5748;
        }();
        G__5747 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__5747__0.call(this);
            case 1:
              return G__5747__1.call(this, result);
            case 2:
              return G__5747__2.call(this, result, input);
            default:
              return G__5747__3.cljs$core$IFn$_invoke$arity$variadic(result, input, cljs.core.array_seq(arguments, 2));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__5747.cljs$lang$maxFixedArity = 2;
        G__5747.cljs$lang$applyTo = G__5747__3.cljs$lang$applyTo;
        G__5747.cljs$core$IFn$_invoke$arity$0 = G__5747__0;
        G__5747.cljs$core$IFn$_invoke$arity$1 = G__5747__1;
        G__5747.cljs$core$IFn$_invoke$arity$2 = G__5747__2;
        G__5747.cljs$core$IFn$_invoke$arity$variadic = G__5747__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__5747;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4533__auto___5750 = size;
          var i_5751 = 0;
          while (true) {
            if (i_5751 < n__4533__auto___5750) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_5751)));
              var G__5752 = i_5751 + 1;
              i_5751 = G__5752;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__5753__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__5746_SHARP_) {
          return cljs.core.apply.call(null, f, p1__5746_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__5753 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__5753__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__5753.cljs$lang$maxFixedArity = 4;
    G__5753.cljs$lang$applyTo = function(arglist__5754) {
      var f = cljs.core.first(arglist__5754);
      arglist__5754 = cljs.core.next(arglist__5754);
      var c1 = cljs.core.first(arglist__5754);
      arglist__5754 = cljs.core.next(arglist__5754);
      var c2 = cljs.core.first(arglist__5754);
      arglist__5754 = cljs.core.next(arglist__5754);
      var c3 = cljs.core.first(arglist__5754);
      var colls = cljs.core.rest(arglist__5754);
      return G__5753__delegate(f, c1, c2, c3, colls);
    };
    G__5753.cljs$core$IFn$_invoke$arity$variadic = G__5753__delegate;
    return G__5753;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_.call(null, n);
      return function(na) {
        return function() {
          var G__5755 = null;
          var G__5755__0 = function() {
            return rf.call(null);
          };
          var G__5755__1 = function(result) {
            return rf.call(null, result);
          };
          var G__5755__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            var nn = cljs.core._vreset_BANG_.call(null, na, cljs.core._deref.call(null, na) - 1);
            var result__$1 = n__$1 > 0 ? rf.call(null, result, input) : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced.call(null, result__$1);
            } else {
              return result__$1;
            }
          };
          G__5755 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__5755__0.call(this);
              case 1:
                return G__5755__1.call(this, result);
              case 2:
                return G__5755__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__5755.cljs$core$IFn$_invoke$arity$0 = G__5755__0;
          G__5755.cljs$core$IFn$_invoke$arity$1 = G__5755__1;
          G__5755.cljs$core$IFn$_invoke$arity$2 = G__5755__2;
          return G__5755;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_.call(null, n);
      return function(na) {
        return function() {
          var G__5756 = null;
          var G__5756__0 = function() {
            return rf.call(null);
          };
          var G__5756__1 = function(result) {
            return rf.call(null, result);
          };
          var G__5756__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            cljs.core._vreset_BANG_.call(null, na, cljs.core._deref.call(null, na) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              return rf.call(null, result, input);
            }
          };
          G__5756 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__5756__0.call(this);
              case 1:
                return G__5756__1.call(this, result);
              case 2:
                return G__5756__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__5756.cljs$core$IFn$_invoke$arity$0 = G__5756__0;
          G__5756.cljs$core$IFn$_invoke$arity$1 = G__5756__1;
          G__5756.cljs$core$IFn$_invoke$arity$2 = G__5756__2;
          return G__5756;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (n__$1 > 0 && s) {
          var G__5757 = n__$1 - 1;
          var G__5758 = cljs.core.rest.call(null, s);
          n__$1 = G__5757;
          coll__$1 = G__5758;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__5759 = cljs.core.next.call(null, s);
      var G__5760 = cljs.core.next.call(null, lead);
      s = G__5759;
      lead = G__5760;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_.call(null, true);
      return function(da) {
        return function() {
          var G__5761 = null;
          var G__5761__0 = function() {
            return rf.call(null);
          };
          var G__5761__1 = function(result) {
            return rf.call(null, result);
          };
          var G__5761__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref.call(null, da);
            if (cljs.core.truth_(function() {
              var and__3634__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3634__auto__)) {
                return pred.call(null, input);
              } else {
                return and__3634__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_.call(null, da, null);
              return rf.call(null, result, input);
            }
          };
          G__5761 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__5761__0.call(this);
              case 1:
                return G__5761__1.call(this, result);
              case 2:
                return G__5761__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__5761.cljs$core$IFn$_invoke$arity$0 = G__5761__0;
          G__5761.cljs$core$IFn$_invoke$arity$1 = G__5761__1;
          G__5761.cljs$core$IFn$_invoke$arity$2 = G__5761__2;
          return G__5761;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (cljs.core.truth_(function() {
          var and__3634__auto__ = s;
          if (and__3634__auto__) {
            return pred__$1.call(null, cljs.core.first.call(null, s));
          } else {
            return and__3634__auto__;
          }
        }())) {
          var G__5762 = pred__$1;
          var G__5763 = cljs.core.rest.call(null, s);
          pred__$1 = G__5762;
          coll__$1 = G__5763;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__5764__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__5764 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5764__delegate.call(this, c1, c2, colls);
    };
    G__5764.cljs$lang$maxFixedArity = 2;
    G__5764.cljs$lang$applyTo = function(arglist__5765) {
      var c1 = cljs.core.first(arglist__5765);
      arglist__5765 = cljs.core.next(arglist__5765);
      var c2 = cljs.core.first(arglist__5765);
      var colls = cljs.core.rest(arglist__5765);
      return G__5764__delegate(c1, c2, colls);
    };
    G__5764.cljs$core$IFn$_invoke$arity$variadic = G__5764__delegate;
    return G__5764;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.call(null, cljs.core.map.call(null, f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__5766__delegate = function(f, colls) {
      return cljs.core.apply.call(null, cljs.core.concat, cljs.core.apply.call(null, cljs.core.map, f, colls));
    };
    var G__5766 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__5766__delegate.call(this, f, colls);
    };
    G__5766.cljs$lang$maxFixedArity = 1;
    G__5766.cljs$lang$applyTo = function(arglist__5767) {
      var f = cljs.core.first(arglist__5767);
      var colls = cljs.core.rest(arglist__5767);
      return G__5766__delegate(f, colls);
    };
    G__5766.cljs$core$IFn$_invoke$arity$variadic = G__5766__delegate;
    return G__5766;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__5768 = null;
        var G__5768__0 = function() {
          return rf.call(null);
        };
        var G__5768__1 = function(result) {
          return rf.call(null, result);
        };
        var G__5768__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__5768 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__5768__0.call(this);
            case 1:
              return G__5768__1.call(this, result);
            case 2:
              return G__5768__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__5768.cljs$core$IFn$_invoke$arity$0 = G__5768__0;
        G__5768.cljs$core$IFn$_invoke$arity$1 = G__5768__1;
        G__5768.cljs$core$IFn$_invoke$arity$2 = G__5768__2;
        return G__5768;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4533__auto___5769 = size;
          var i_5770 = 0;
          while (true) {
            if (i_5770 < n__4533__auto___5769) {
              if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_5770)))) {
                cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_5770));
              } else {
              }
              var G__5771 = i_5770 + 1;
              i_5770 = G__5771;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
        } else {
          var f = cljs.core.first.call(null, s);
          var r = cljs.core.rest.call(null, s);
          if (cljs.core.truth_(pred.call(null, f))) {
            return cljs.core.cons.call(null, f, filter.call(null, pred, r));
          } else {
            return filter.call(null, pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__5772_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__5772_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__5775 = to;
        if (G__5775) {
          var bit__4320__auto__ = G__5775.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4320__auto__ || G__5775.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
      } else {
        return cljs.core.reduce.call(null, cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__5776 = to;
      if (G__5776) {
        var bit__4320__auto__ = G__5776.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4320__auto__ || G__5776.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.transduce.call(null, xform, cljs.core.conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
    } else {
      return cljs.core.transduce.call(null, xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__5777__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__5777 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__5777__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__5777.cljs$lang$maxFixedArity = 4;
    G__5777.cljs$lang$applyTo = function(arglist__5778) {
      var f = cljs.core.first(arglist__5778);
      arglist__5778 = cljs.core.next(arglist__5778);
      var c1 = cljs.core.first(arglist__5778);
      arglist__5778 = cljs.core.next(arglist__5778);
      var c2 = cljs.core.first(arglist__5778);
      arglist__5778 = cljs.core.next(arglist__5778);
      var c3 = cljs.core.first(arglist__5778);
      var colls = cljs.core.rest(arglist__5778);
      return G__5777__delegate(f, c1, c2, c3, colls);
    };
    G__5777.cljs$core$IFn$_invoke$arity$variadic = G__5777__delegate;
    return G__5777;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__5780 = m__$1;
          if (G__5780) {
            var bit__4327__auto__ = G__5780.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4327__auto__ || G__5780.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__5780.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__5780);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__5780);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__5781 = sentinel;
            var G__5782 = m__$2;
            var G__5783 = cljs.core.next.call(null, ks__$1);
            sentinel = G__5781;
            m__$1 = G__5782;
            ks__$1 = G__5783;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__5784, v) {
  var vec__5786 = p__5784;
  var k = cljs.core.nth.call(null, vec__5786, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__5786, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__5787, f) {
    var vec__5797 = p__5787;
    var k = cljs.core.nth.call(null, vec__5797, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__5797, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__5788, f, a) {
    var vec__5798 = p__5788;
    var k = cljs.core.nth.call(null, vec__5798, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__5798, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__5789, f, a, b) {
    var vec__5799 = p__5789;
    var k = cljs.core.nth.call(null, vec__5799, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__5799, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__5790, f, a, b, c) {
    var vec__5800 = p__5790;
    var k = cljs.core.nth.call(null, vec__5800, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__5800, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__5802__delegate = function(m, p__5791, f, a, b, c, args) {
      var vec__5801 = p__5791;
      var k = cljs.core.nth.call(null, vec__5801, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__5801, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__5802 = function(m, p__5791, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__5802__delegate.call(this, m, p__5791, f, a, b, c, args);
    };
    G__5802.cljs$lang$maxFixedArity = 6;
    G__5802.cljs$lang$applyTo = function(arglist__5803) {
      var m = cljs.core.first(arglist__5803);
      arglist__5803 = cljs.core.next(arglist__5803);
      var p__5791 = cljs.core.first(arglist__5803);
      arglist__5803 = cljs.core.next(arglist__5803);
      var f = cljs.core.first(arglist__5803);
      arglist__5803 = cljs.core.next(arglist__5803);
      var a = cljs.core.first(arglist__5803);
      arglist__5803 = cljs.core.next(arglist__5803);
      var b = cljs.core.first(arglist__5803);
      arglist__5803 = cljs.core.next(arglist__5803);
      var c = cljs.core.first(arglist__5803);
      var args = cljs.core.rest(arglist__5803);
      return G__5802__delegate(m, p__5791, f, a, b, c, args);
    };
    G__5802.cljs$core$IFn$_invoke$arity$variadic = G__5802__delegate;
    return G__5802;
  }();
  update_in = function(m, p__5791, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__5791, f);
      case 4:
        return update_in__4.call(this, m, p__5791, f, a);
      case 5:
        return update_in__5.call(this, m, p__5791, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__5791, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__5791, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x));
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x, y));
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x, y, z));
  };
  var update__7 = function() {
    var G__5804__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), x, y, z, more));
    };
    var G__5804 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__5804__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__5804.cljs$lang$maxFixedArity = 6;
    G__5804.cljs$lang$applyTo = function(arglist__5805) {
      var m = cljs.core.first(arglist__5805);
      arglist__5805 = cljs.core.next(arglist__5805);
      var k = cljs.core.first(arglist__5805);
      arglist__5805 = cljs.core.next(arglist__5805);
      var f = cljs.core.first(arglist__5805);
      arglist__5805 = cljs.core.next(arglist__5805);
      var x = cljs.core.first(arglist__5805);
      arglist__5805 = cljs.core.next(arglist__5805);
      var y = cljs.core.first(arglist__5805);
      arglist__5805 = cljs.core.next(arglist__5805);
      var z = cljs.core.first(arglist__5805);
      var more = cljs.core.rest(arglist__5805);
      return G__5804__delegate(m, k, f, x, y, z, more);
    };
    G__5804.cljs$core$IFn$_invoke$arity$variadic = G__5804__delegate;
    return G__5804;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__5806 = ll - 5;
      var G__5807 = r;
      ll = G__5806;
      ret = G__5807;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__5808 = cljs.core.pv_aget.call(null, node, 0);
      var G__5809 = level - 5;
      node = G__5808;
      level = G__5809;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__5810 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__5811 = level - 5;
        node = G__5810;
        level = G__5811;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for.call(null, self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count.call(null, v) ? cljs.core.unchecked_array_for.call(null, v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = f.call(null, init__$2, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
              return init__$3;
            } else {
              var G__5813 = j + 1;
              var G__5814 = init__$3;
              j = G__5813;
              init__$2 = G__5814;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__5815 = i + len;
        var G__5816 = init__$2;
        i = G__5815;
        init__$1 = G__5816;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator.call(null, this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count.call(null, other)) {
      var me_iter = cljs.core._iterator.call(null, coll__$1);
      var you_iter = cljs.core._iterator.call(null, other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.call(null, x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential.call(null, coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = f.call(null, init__$2, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
              return init__$3;
            } else {
              var G__5817 = j + 1;
              var G__5818 = init__$3;
              j = G__5817;
              init__$2 = G__5818;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__5819 = i + len;
        var G__5820 = init__$2;
        i = G__5819;
        init__$1 = G__5820;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4533__auto___5821 = len;
    var i_5822 = 0;
    while (true) {
      if (i_5822 < n__4533__auto___5821) {
        new_tail[i_5822] = self__.tail[i_5822];
        var G__5823 = i_5822 + 1;
        i_5822 = G__5823;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__5824 = null;
  var G__5824__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k);
  };
  var G__5824__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k, not_found);
  };
  G__5824 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5824__2.call(this, self__, k);
      case 3:
        return G__5824__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5824.cljs$core$IFn$_invoke$arity$2 = G__5824__2;
  G__5824.cljs$core$IFn$_invoke$arity$3 = G__5824__3;
  return G__5824;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args5812) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5812)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__5825 = i + 1;
        var G__5826 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__5825;
        out = G__5826;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__5827) {
    var args = cljs.core.seq(arglist__5827);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3963__auto__ = self__.end;
    var y__3964__auto__ = v_pos + 1;
    return x__3963__auto__ > y__3964__auto__ ? x__3963__auto__ : y__3964__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__5829 = null;
  var G__5829__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k);
  };
  var G__5829__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._nth.call(null, coll, k, not_found);
  };
  G__5829 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5829__2.call(this, self__, k);
      case 3:
        return G__5829__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5829.cljs$core$IFn$_invoke$arity$2 = G__5829__2;
  G__5829.cljs$core$IFn$_invoke$arity$3 = G__5829__3;
  return G__5829;
}();
cljs.core.Subvec.prototype.apply = function(self__, args5828) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5828)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._nth.call(null, coll, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__5830 = meta;
      var G__5831 = v.v;
      var G__5832 = v.start + start;
      var G__5833 = v.start + end;
      var G__5834 = __hash;
      meta = G__5830;
      v = G__5831;
      start = G__5832;
      end = G__5833;
      __hash = G__5834;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj5838 = {};
    return obj5838;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__5839 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__5840 = level - 5;
        node = G__5839;
        level = G__5840;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__5842 = null;
  var G__5842__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__5842__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__5842 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5842__2.call(this, self__, k);
      case 3:
        return G__5842__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5842.cljs$core$IFn$_invoke$arity$2 = G__5842__2;
  G__5842.cljs$core$IFn$_invoke$arity$3 = G__5842__3;
  return G__5842;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args5841) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5841)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3646__auto__ = self__.front;
    if (cljs.core.truth_(or__3646__auto__)) {
      return or__3646__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3646__auto__ = self__.rear;
      if (cljs.core.truth_(or__3646__auto__)) {
        return or__3646__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__5843 = i + incr;
        i = G__5843;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__5844 = i + 1;
      var G__5845 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__5844;
      out = G__5845;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj5849 = {};
    return obj5849;
  }();
  var l = ks.length;
  var i_5850 = 0;
  while (true) {
    if (i_5850 < l) {
      var k_5851 = ks[i_5850];
      new_obj[k_5851] = obj[k_5851];
      var G__5852 = i_5850 + 1;
      i_5850 = G__5852;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__5855 = cljs.core.rest.call(null, keys__$1);
        var G__5856 = init__$2;
        keys__$1 = G__5855;
        init__$1 = G__5856;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__5853_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__5853_SHARP_, self__.strobj[p1__5853_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__5857 = null;
  var G__5857__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__5857__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__5857 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5857__2.call(this, self__, k);
      case 3:
        return G__5857__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5857.cljs$core$IFn$_invoke$arity$2 = G__5857__2;
  G__5857.cljs$core$IFn$_invoke$arity$3 = G__5857__3;
  return G__5857;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args5854) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5854)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj5859 = {};
  return obj5859;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__5860 = cljs.core.first.call(null, self__.s);
    var k = cljs.core.nth.call(null, vec__5860, 0, null);
    var v = cljs.core.nth.call(null, vec__5860, 1, null);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__5861 = i + 2;
        i = G__5861;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__5862 = i + 2;
        i = G__5862;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__5863 = i + 2;
        i = G__5863;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__5864 = i + 2;
        i = G__5864;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        var G__5865 = i + 2;
        i = G__5865;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_5866 = 0;
  while (true) {
    if (i_5866 < l) {
      narr[i_5866] = arr[i_5866];
      var G__5867 = i_5866 + 1;
      i_5866 = G__5867;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__5869 = cljs.core.seq.call(null, coll);
  var chunk__5870 = null;
  var count__5871 = 0;
  var i__5872 = 0;
  while (true) {
    if (i__5872 < count__5871) {
      var vec__5873 = cljs.core._nth.call(null, chunk__5870, i__5872);
      var k = cljs.core.nth.call(null, vec__5873, 0, null);
      var v = cljs.core.nth.call(null, vec__5873, 1, null);
      f.call(null, v, k);
      var G__5879 = seq__5869;
      var G__5880 = chunk__5870;
      var G__5881 = count__5871;
      var G__5882 = i__5872 + 1;
      seq__5869 = G__5879;
      chunk__5870 = G__5880;
      count__5871 = G__5881;
      i__5872 = G__5882;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__5869);
      if (temp__4126__auto__) {
        var seq__5869__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5869__$1)) {
          var c__4433__auto__ = cljs.core.chunk_first.call(null, seq__5869__$1);
          var G__5883 = cljs.core.chunk_rest.call(null, seq__5869__$1);
          var G__5884 = c__4433__auto__;
          var G__5885 = cljs.core.count.call(null, c__4433__auto__);
          var G__5886 = 0;
          seq__5869 = G__5883;
          chunk__5870 = G__5884;
          count__5871 = G__5885;
          i__5872 = G__5886;
          continue;
        } else {
          var vec__5874 = cljs.core.first.call(null, seq__5869__$1);
          var k = cljs.core.nth.call(null, vec__5874, 0, null);
          var v = cljs.core.nth.call(null, vec__5874, 1, null);
          f.call(null, v, k);
          var G__5887 = cljs.core.next.call(null, seq__5869__$1);
          var G__5888 = null;
          var G__5889 = 0;
          var G__5890 = 0;
          seq__5869 = G__5887;
          chunk__5870 = G__5888;
          count__5871 = G__5889;
          i__5872 = G__5890;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__5891 = i + 2;
        var G__5892 = init__$2;
        i = G__5891;
        init__$1 = G__5892;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__5875 = other;
    if (G__5875) {
      var bit__4320__auto__ = G__5875.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4320__auto__ || G__5875.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === cljs.core._count.call(null, other__$1)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = cljs.core._lookup.call(null, other__$1, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.call(null, self__.arr[i + 1], v)) {
              var G__5893 = i + 2;
              i = G__5893;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map.call(null, coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj5877 = {};
    return obj5877;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__5894 = s + 2;
            var G__5895 = d;
            s = G__5894;
            d = G__5895;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__5896 = s + 2;
            var G__5897 = d + 2;
            s = G__5896;
            d = G__5897;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__5878 = cljs.core.aclone.call(null, self__.arr);
        G__5878[idx + 1] = v;
        return G__5878;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__5898 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__5899 = cljs.core.next.call(null, es);
          ret = G__5898;
          es = G__5899;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__5900 = null;
  var G__5900__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__5900__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__5900 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5900__2.call(this, self__, k);
      case 3:
        return G__5900__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5900.cljs$core$IFn$_invoke$arity$2 = G__5900__2;
  G__5900.cljs$core$IFn$_invoke$arity$3 = G__5900__3;
  return G__5900;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args5868) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5868)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__5901 = i + 2;
        var G__5902 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__5901;
        ret = G__5902;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__5903_5905 = self__.arr;
      G__5903_5905.pop();
      G__5903_5905.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__5904 = o;
      if (G__5904) {
        var bit__4327__auto__ = G__5904.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4327__auto__ || G__5904.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__5904.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__5904);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__5904);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__5906 = cljs.core.next.call(null, es);
          var G__5907 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__5906;
          tcoll__$2 = G__5907;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__5908 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__5909 = i + 2;
      out = G__5908;
      i = G__5909;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.call(null, key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__5912 = cljs.core.aclone.call(null, arr);
    G__5912[i] = a;
    return G__5912;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__5913 = cljs.core.aclone.call(null, arr);
    G__5913[i] = a;
    G__5913[j] = b;
    return G__5913;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__5914 = i + 2;
        var G__5915 = init__$2;
        i = G__5914;
        init__$1 = G__5915;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_5916 = 0;
        var j_5917 = 0;
        while (true) {
          if (i_5916 < 32) {
            if ((self__.bitmap >>> i_5916 & 1) === 0) {
              var G__5918 = i_5916 + 1;
              var G__5919 = j_5917;
              i_5916 = G__5918;
              j_5917 = G__5919;
              continue;
            } else {
              nodes[i_5916] = !(self__.arr[j_5917] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_5917]), self__.arr[j_5917], self__.arr[j_5917 + 1], added_leaf_QMARK_) : self__.arr[j_5917 + 1];
              var G__5920 = i_5916 + 1;
              var G__5921 = j_5917 + 2;
              i_5916 = G__5920;
              j_5917 = G__5921;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_5922 = 0;
      var j_5923 = 0;
      while (true) {
        if (i_5922 < 32) {
          if ((self__.bitmap >>> i_5922 & 1) === 0) {
            var G__5924 = i_5922 + 1;
            var G__5925 = j_5923;
            i_5922 = G__5924;
            j_5923 = G__5925;
            continue;
          } else {
            nodes[i_5922] = !(self__.arr[j_5923] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_5923]), self__.arr[j_5923], self__.arr[j_5923 + 1], added_leaf_QMARK_) : self__.arr[j_5923 + 1];
            var G__5926 = i_5922 + 1;
            var G__5927 = j_5923 + 2;
            i_5922 = G__5926;
            j_5923 = G__5927;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__5928 = i + 1;
        var G__5929 = j + 2;
        var G__5930 = bitmap | 1 << i;
        i = G__5928;
        j = G__5929;
        bitmap = G__5930;
        continue;
      } else {
        var G__5931 = i + 1;
        var G__5932 = j;
        var G__5933 = bitmap;
        i = G__5931;
        j = G__5932;
        bitmap = G__5933;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__5934 = i + 1;
          var G__5935 = init__$2;
          i = G__5934;
          init__$1 = G__5935;
          continue;
        }
      } else {
        var G__5936 = i + 1;
        var G__5937 = init__$1;
        i = G__5936;
        init__$1 = G__5937;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__5938 = i + 2;
        i = G__5938;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__5939 = j + 2;
                j = G__5939;
                continue;
              }
            } else {
              var G__5940 = j + 2;
              j = G__5940;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__5941 = j + 1;
              j = G__5941;
              continue;
            }
          } else {
            var G__5942 = j + 1;
            j = G__5942;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__5944 = cljs.core.seq.call(null, coll);
  var chunk__5945 = null;
  var count__5946 = 0;
  var i__5947 = 0;
  while (true) {
    if (i__5947 < count__5946) {
      var vec__5948 = cljs.core._nth.call(null, chunk__5945, i__5947);
      var k = cljs.core.nth.call(null, vec__5948, 0, null);
      var v = cljs.core.nth.call(null, vec__5948, 1, null);
      f.call(null, v, k);
      var G__5952 = seq__5944;
      var G__5953 = chunk__5945;
      var G__5954 = count__5946;
      var G__5955 = i__5947 + 1;
      seq__5944 = G__5952;
      chunk__5945 = G__5953;
      count__5946 = G__5954;
      i__5947 = G__5955;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__5944);
      if (temp__4126__auto__) {
        var seq__5944__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5944__$1)) {
          var c__4433__auto__ = cljs.core.chunk_first.call(null, seq__5944__$1);
          var G__5956 = cljs.core.chunk_rest.call(null, seq__5944__$1);
          var G__5957 = c__4433__auto__;
          var G__5958 = cljs.core.count.call(null, c__4433__auto__);
          var G__5959 = 0;
          seq__5944 = G__5956;
          chunk__5945 = G__5957;
          count__5946 = G__5958;
          i__5947 = G__5959;
          continue;
        } else {
          var vec__5949 = cljs.core.first.call(null, seq__5944__$1);
          var k = cljs.core.nth.call(null, vec__5949, 0, null);
          var v = cljs.core.nth.call(null, vec__5949, 1, null);
          f.call(null, v, k);
          var G__5960 = cljs.core.next.call(null, seq__5944__$1);
          var G__5961 = null;
          var G__5962 = 0;
          var G__5963 = 0;
          seq__5944 = G__5960;
          chunk__5945 = G__5961;
          count__5946 = G__5962;
          i__5947 = G__5963;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj5951 = {};
    return obj5951;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__5964 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__5965 = cljs.core.next.call(null, es);
          ret = G__5964;
          es = G__5965;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__5966 = null;
  var G__5966__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__5966__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__5966 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5966__2.call(this, self__, k);
      case 3:
        return G__5966__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5966.cljs$core$IFn$_invoke$arity$2 = G__5966__2;
  G__5966.cljs$core$IFn$_invoke$arity$3 = G__5966__3;
  return G__5966;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args5943) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5943)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__5967 = i + 1;
      var G__5968 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__5967;
      out = G__5968;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__5969 = o;
      if (G__5969) {
        var bit__4327__auto__ = G__5969.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4327__auto__ || G__5969.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__5969.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__5969);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__5969);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__5970 = cljs.core.next.call(null, es);
          var G__5971 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__5970;
          tcoll__$1 = G__5971;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__5972 = ascending_QMARK_ ? t.left : t.right;
      var G__5973 = cljs.core.conj.call(null, stack__$1, t);
      t = G__5972;
      stack__$1 = G__5973;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._assoc_n.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__5975 = null;
  var G__5975__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k);
  };
  var G__5975__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k, not_found);
  };
  G__5975 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5975__2.call(this, self__, k);
      case 3:
        return G__5975__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5975.cljs$core$IFn$_invoke$arity$2 = G__5975__2;
  G__5975.cljs$core$IFn$_invoke$arity$3 = G__5975__3;
  return G__5975;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args5974) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5974)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._assoc_n.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__5977 = null;
  var G__5977__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k);
  };
  var G__5977__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return cljs.core._lookup.call(null, node, k, not_found);
  };
  G__5977 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5977__2.call(this, self__, k);
      case 3:
        return G__5977__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5977.cljs$core$IFn$_invoke$arity$2 = G__5977__2;
  G__5977.cljs$core$IFn$_invoke$arity$3 = G__5977__3;
  return G__5977;
}();
cljs.core.RedNode.prototype.apply = function(self__, args5976) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5976)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return cljs.core._lookup.call(null, node, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove.call(null, comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__5979 = cljs.core.seq.call(null, coll);
  var chunk__5980 = null;
  var count__5981 = 0;
  var i__5982 = 0;
  while (true) {
    if (i__5982 < count__5981) {
      var vec__5983 = cljs.core._nth.call(null, chunk__5980, i__5982);
      var k = cljs.core.nth.call(null, vec__5983, 0, null);
      var v = cljs.core.nth.call(null, vec__5983, 1, null);
      f.call(null, v, k);
      var G__5985 = seq__5979;
      var G__5986 = chunk__5980;
      var G__5987 = count__5981;
      var G__5988 = i__5982 + 1;
      seq__5979 = G__5985;
      chunk__5980 = G__5986;
      count__5981 = G__5987;
      i__5982 = G__5988;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__5979);
      if (temp__4126__auto__) {
        var seq__5979__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5979__$1)) {
          var c__4433__auto__ = cljs.core.chunk_first.call(null, seq__5979__$1);
          var G__5989 = cljs.core.chunk_rest.call(null, seq__5979__$1);
          var G__5990 = c__4433__auto__;
          var G__5991 = cljs.core.count.call(null, c__4433__auto__);
          var G__5992 = 0;
          seq__5979 = G__5989;
          chunk__5980 = G__5990;
          count__5981 = G__5991;
          i__5982 = G__5992;
          continue;
        } else {
          var vec__5984 = cljs.core.first.call(null, seq__5979__$1);
          var k = cljs.core.nth.call(null, vec__5984, 0, null);
          var v = cljs.core.nth.call(null, vec__5984, 1, null);
          f.call(null, v, k);
          var G__5993 = cljs.core.next.call(null, seq__5979__$1);
          var G__5994 = null;
          var G__5995 = 0;
          var G__5996 = 0;
          seq__5979 = G__5993;
          chunk__5980 = G__5994;
          count__5981 = G__5995;
          i__5982 = G__5996;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__5997 = t.left;
          t = G__5997;
          continue;
        } else {
          var G__5998 = t.right;
          t = G__5998;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__5999 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__6000 = cljs.core.next.call(null, es);
          ret = G__5999;
          es = G__6000;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__6001 = null;
  var G__6001__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__6001__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__6001 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6001__2.call(this, self__, k);
      case 3:
        return G__6001__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6001.cljs$core$IFn$_invoke$arity$2 = G__6001__2;
  G__6001.cljs$core$IFn$_invoke$arity$3 = G__6001__3;
  return G__6001;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args5978) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5978)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__6002 = cljs.core.conj.call(null, stack, t);
              var G__6003 = t.left;
              stack = G__6002;
              t = G__6003;
              continue;
            } else {
              var G__6004 = stack;
              var G__6005 = t.right;
              stack = G__6004;
              t = G__6005;
              continue;
            }
          } else {
            if (c > 0) {
              var G__6006 = cljs.core.conj.call(null, stack, t);
              var G__6007 = t.right;
              stack = G__6006;
              t = G__6007;
              continue;
            } else {
              var G__6008 = stack;
              var G__6009 = t.left;
              stack = G__6008;
              t = G__6009;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__6010 = cljs.core.nnext.call(null, in$);
        var G__6011 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6010;
        out = G__6011;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__6012) {
    var keyvals = cljs.core.seq(arglist__6012);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.call(null, cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__6013) {
    var keyvals = cljs.core.seq(arglist__6013);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj6017 = {};
      return obj6017;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__6018 = cljs.core.nnext.call(null, kvs);
        kvs = G__6018;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__6019) {
    var keyvals = cljs.core.seq(arglist__6019);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__6020 = cljs.core.nnext.call(null, in$);
        var G__6021 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6020;
        out = G__6021;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__6022) {
    var keyvals = cljs.core.seq(arglist__6022);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__6023 = cljs.core.nnext.call(null, in$);
        var G__6024 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6023;
        out = G__6024;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__6025) {
    var comparator = cljs.core.first(arglist__6025);
    var keyvals = cljs.core.rest(arglist__6025);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6026 = self__.mseq;
    if (G__6026) {
      var bit__4327__auto__ = G__6026.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4327__auto__ || G__6026.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6026.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6026);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6026);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6027 = self__.mseq;
    if (G__6027) {
      var bit__4327__auto__ = G__6027.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4327__auto__ || G__6027.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6027.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6027);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6027);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6028 = self__.mseq;
    if (G__6028) {
      var bit__4327__auto__ = G__6028.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4327__auto__ || G__6028.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6028.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6028);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6028);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6029 = self__.mseq;
    if (G__6029) {
      var bit__4327__auto__ = G__6029.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4327__auto__ || G__6029.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6029.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6029);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6029);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__6030_SHARP_, p2__6031_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3646__auto__ = p1__6030_SHARP_;
          if (cljs.core.truth_(or__3646__auto__)) {
            return or__3646__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__6031_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__6032) {
    var maps = cljs.core.seq(arglist__6032);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3646__auto__ = m1;
            if (cljs.core.truth_(or__3646__auto__)) {
              return or__3646__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__6033) {
    var f = cljs.core.first(arglist__6033);
    var maps = cljs.core.rest(arglist__6033);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__6034 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__6035 = cljs.core.next.call(null, keys);
      ret = G__6034;
      keys = G__6035;
      continue;
    } else {
      return cljs.core.with_meta.call(null, ret, cljs.core.meta.call(null, map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__6038 = cljs.core.seq.call(null, coll);
  var chunk__6039 = null;
  var count__6040 = 0;
  var i__6041 = 0;
  while (true) {
    if (i__6041 < count__6040) {
      var vec__6042 = cljs.core._nth.call(null, chunk__6039, i__6041);
      var k = cljs.core.nth.call(null, vec__6042, 0, null);
      var v = cljs.core.nth.call(null, vec__6042, 1, null);
      f.call(null, v, k);
      var G__6044 = seq__6038;
      var G__6045 = chunk__6039;
      var G__6046 = count__6040;
      var G__6047 = i__6041 + 1;
      seq__6038 = G__6044;
      chunk__6039 = G__6045;
      count__6040 = G__6046;
      i__6041 = G__6047;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6038);
      if (temp__4126__auto__) {
        var seq__6038__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6038__$1)) {
          var c__4433__auto__ = cljs.core.chunk_first.call(null, seq__6038__$1);
          var G__6048 = cljs.core.chunk_rest.call(null, seq__6038__$1);
          var G__6049 = c__4433__auto__;
          var G__6050 = cljs.core.count.call(null, c__4433__auto__);
          var G__6051 = 0;
          seq__6038 = G__6048;
          chunk__6039 = G__6049;
          count__6040 = G__6050;
          i__6041 = G__6051;
          continue;
        } else {
          var vec__6043 = cljs.core.first.call(null, seq__6038__$1);
          var k = cljs.core.nth.call(null, vec__6043, 0, null);
          var v = cljs.core.nth.call(null, vec__6043, 1, null);
          f.call(null, v, k);
          var G__6052 = cljs.core.next.call(null, seq__6038__$1);
          var G__6053 = null;
          var G__6054 = 0;
          var G__6055 = 0;
          seq__6038 = G__6052;
          chunk__6039 = G__6053;
          count__6040 = G__6054;
          i__6041 = G__6055;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__6036_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__6036_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__6056 = null;
  var G__6056__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__6056__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__6056 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6056__2.call(this, self__, k);
      case 3:
        return G__6056__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6056.cljs$core$IFn$_invoke$arity$2 = G__6056__2;
  G__6056.cljs$core$IFn$_invoke$arity$3 = G__6056__3;
  return G__6056;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args6037) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6037)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__6057 = i + 1;
        var G__6058 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__6057;
        out = G__6058;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__6059 = i + 1;
        var G__6060 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__6059;
        out = G__6060;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__6062 = null;
  var G__6062__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__6062__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__6062 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6062__2.call(this, self__, k);
      case 3:
        return G__6062__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6062.cljs$core$IFn$_invoke$arity$2 = G__6062__2;
  G__6062.cljs$core$IFn$_invoke$arity$3 = G__6062__3;
  return G__6062;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args6061) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6061)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__6065 = cljs.core.seq.call(null, coll);
  var chunk__6066 = null;
  var count__6067 = 0;
  var i__6068 = 0;
  while (true) {
    if (i__6068 < count__6067) {
      var vec__6069 = cljs.core._nth.call(null, chunk__6066, i__6068);
      var k = cljs.core.nth.call(null, vec__6069, 0, null);
      var v = cljs.core.nth.call(null, vec__6069, 1, null);
      f.call(null, v, k);
      var G__6071 = seq__6065;
      var G__6072 = chunk__6066;
      var G__6073 = count__6067;
      var G__6074 = i__6068 + 1;
      seq__6065 = G__6071;
      chunk__6066 = G__6072;
      count__6067 = G__6073;
      i__6068 = G__6074;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6065);
      if (temp__4126__auto__) {
        var seq__6065__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6065__$1)) {
          var c__4433__auto__ = cljs.core.chunk_first.call(null, seq__6065__$1);
          var G__6075 = cljs.core.chunk_rest.call(null, seq__6065__$1);
          var G__6076 = c__4433__auto__;
          var G__6077 = cljs.core.count.call(null, c__4433__auto__);
          var G__6078 = 0;
          seq__6065 = G__6075;
          chunk__6066 = G__6076;
          count__6067 = G__6077;
          i__6068 = G__6078;
          continue;
        } else {
          var vec__6070 = cljs.core.first.call(null, seq__6065__$1);
          var k = cljs.core.nth.call(null, vec__6070, 0, null);
          var v = cljs.core.nth.call(null, vec__6070, 1, null);
          f.call(null, v, k);
          var G__6079 = cljs.core.next.call(null, seq__6065__$1);
          var G__6080 = null;
          var G__6081 = 0;
          var G__6082 = 0;
          seq__6065 = G__6079;
          chunk__6066 = G__6080;
          count__6067 = G__6081;
          i__6068 = G__6082;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__6063_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__6063_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty.call(null, self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__6083 = null;
  var G__6083__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__6083__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__6083 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6083__2.call(this, self__, k);
      case 3:
        return G__6083__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6083.cljs$core$IFn$_invoke$arity$2 = G__6083__2;
  G__6083.cljs$core$IFn$_invoke$arity$3 = G__6083__3;
  return G__6083;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args6064) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6064)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4527__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4527__auto__.length) {
        var G__6084 = i + 1;
        var G__6085 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__6084;
        res = G__6085;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__6086 = cljs.core._next.call(null, in$__$1);
          var G__6087 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
          in$__$1 = G__6086;
          out = G__6087;
          continue;
        } else {
          return cljs.core._persistent_BANG_.call(null, out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__6088__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__6088 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__6088__delegate.call(this, keys);
    };
    G__6088.cljs$lang$maxFixedArity = 0;
    G__6088.cljs$lang$applyTo = function(arglist__6089) {
      var keys = cljs.core.seq(arglist__6089);
      return G__6088__delegate(keys);
    };
    G__6088.cljs$core$IFn$_invoke$arity$variadic = G__6088__delegate;
    return G__6088;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__6090) {
    var keys = cljs.core.seq(arglist__6090);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__6091) {
    var comparator = cljs.core.first(arglist__6091);
    var keys = cljs.core.rest(arglist__6091);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.call(null, function(p1__6092_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__6092_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val.call(null, e);
      } else {
        return p1__6092_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_.call(null, coll)) {
      var n = cljs.core.count.call(null, coll);
      return cljs.core.reduce.call(null, function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
    } else {
      return cljs.core.map.call(null, function(p1__6093_SHARP_) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__6093_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second.call(null, e);
        } else {
          return p1__6093_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__6100, seen__$1) {
        while (true) {
          var vec__6101 = p__6100;
          var f = cljs.core.nth.call(null, vec__6101, 0, null);
          var xs__$1 = vec__6101;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__6102 = cljs.core.rest.call(null, s);
              var G__6103 = seen__$1;
              p__6100 = G__6102;
              seen__$1 = G__6103;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__6104 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__6105 = cljs.core.next.call(null, s__$1);
      ret = G__6104;
      s__$1 = G__6105;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__6107 = x;
    if (G__6107) {
      var bit__4320__auto__ = G__6107.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4320__auto__ || G__6107.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__6108 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__6109 = cljs.core.next.call(null, ks);
      var G__6110 = cljs.core.next.call(null, vs);
      map = G__6108;
      ks = G__6109;
      vs = G__6110;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__6113__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__6111_SHARP_, p2__6112_SHARP_) {
        return max_key.call(null, k, p1__6111_SHARP_, p2__6112_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__6113 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6113__delegate.call(this, k, x, y, more);
    };
    G__6113.cljs$lang$maxFixedArity = 3;
    G__6113.cljs$lang$applyTo = function(arglist__6114) {
      var k = cljs.core.first(arglist__6114);
      arglist__6114 = cljs.core.next(arglist__6114);
      var x = cljs.core.first(arglist__6114);
      arglist__6114 = cljs.core.next(arglist__6114);
      var y = cljs.core.first(arglist__6114);
      var more = cljs.core.rest(arglist__6114);
      return G__6113__delegate(k, x, y, more);
    };
    G__6113.cljs$core$IFn$_invoke$arity$variadic = G__6113__delegate;
    return G__6113;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__6117__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__6115_SHARP_, p2__6116_SHARP_) {
        return min_key.call(null, k, p1__6115_SHARP_, p2__6116_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__6117 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6117__delegate.call(this, k, x, y, more);
    };
    G__6117.cljs$lang$maxFixedArity = 3;
    G__6117.cljs$lang$applyTo = function(arglist__6118) {
      var k = cljs.core.first(arglist__6118);
      arglist__6118 = cljs.core.next(arglist__6118);
      var x = cljs.core.first(arglist__6118);
      arglist__6118 = cljs.core.next(arglist__6118);
      var y = cljs.core.first(arglist__6118);
      var more = cljs.core.rest(arglist__6118);
      return G__6117__delegate(k, x, y, more);
    };
    G__6117.cljs$core$IFn$_invoke$arity$variadic = G__6117__delegate;
    return G__6117;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list.call(null);
      return function(a) {
        return function() {
          var G__6119 = null;
          var G__6119__0 = function() {
            return rf.call(null);
          };
          var G__6119__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return cljs.core.unreduced.call(null, rf.call(null, result, v));
            }();
            return rf.call(null, result__$1);
          };
          var G__6119__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return rf.call(null, result, v);
            } else {
              return result;
            }
          };
          G__6119 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6119__0.call(this);
              case 1:
                return G__6119__1.call(this, result);
              case 2:
                return G__6119__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6119.cljs$core$IFn$_invoke$arity$0 = G__6119__0;
          G__6119.cljs$core$IFn$_invoke$arity$1 = G__6119__1;
          G__6119.cljs$core$IFn$_invoke$arity$2 = G__6119__2;
          return G__6119;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__6120 = null;
        var G__6120__0 = function() {
          return rf.call(null);
        };
        var G__6120__1 = function(result) {
          return rf.call(null, result);
        };
        var G__6120__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return rf.call(null, result, input);
          } else {
            return cljs.core.reduced.call(null, result);
          }
        };
        G__6120 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__6120__0.call(this);
            case 1:
              return G__6120__1.call(this, result);
            case 2:
              return G__6120__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__6120.cljs$core$IFn$_invoke$arity$0 = G__6120__0;
        G__6120.cljs$core$IFn$_invoke$arity$1 = G__6120__1;
        G__6120.cljs$core$IFn$_invoke$arity$2 = G__6120__2;
        return G__6120;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__6123 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__6123, 0, null);
        var s = vec__6123;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__6124 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__6124, 0, null);
      var s = vec__6124;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__6127 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__6127, 0, null);
        var s = vec__6127;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__6128 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__6128, 0, null);
      var s = vec__6128;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil.call(null, (self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_ordered_coll.call(null, rng__$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_.call(null, ret__$1)) {
        return cljs.core.deref.call(null, ret__$1);
      } else {
        var G__6129 = i + self__.step;
        var G__6130 = ret__$1;
        i = G__6129;
        ret = G__6130;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_.call(null, -1);
      return function(ia) {
        return function() {
          var G__6131 = null;
          var G__6131__0 = function() {
            return rf.call(null);
          };
          var G__6131__1 = function(result) {
            return rf.call(null, result);
          };
          var G__6131__2 = function(result, input) {
            var i = cljs.core._vreset_BANG_.call(null, ia, cljs.core._deref.call(null, ia) + 1);
            if (cljs.core.rem.call(null, i, n) === 0) {
              return rf.call(null, result, input);
            } else {
              return result;
            }
          };
          G__6131 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6131__0.call(this);
              case 1:
                return G__6131__1.call(this, result);
              case 2:
                return G__6131__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6131.cljs$core$IFn$_invoke$arity$0 = G__6131__0;
          G__6131.cljs$core$IFn$_invoke$arity$1 = G__6131__1;
          G__6131.cljs$core$IFn$_invoke$arity$2 = G__6131__2;
          return G__6131;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list.call(null);
      var pa = cljs.core.volatile_BANG_.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__6133 = null;
          var G__6133__0 = function() {
            return rf.call(null);
          };
          var G__6133__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return cljs.core.unreduced.call(null, rf.call(null, result, v));
            }();
            return rf.call(null, result__$1);
          };
          var G__6133__2 = function(result, input) {
            var pval = cljs.core.deref.call(null, pa);
            var val = f.call(null, input);
            cljs.core.vreset_BANG_.call(null, pa, val);
            if (cljs.core.keyword_identical_QMARK_.call(null, pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.call(null, val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              var ret = rf.call(null, result, v);
              if (cljs.core.reduced_QMARK_.call(null, ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__6133 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6133__0.call(this);
              case 1:
                return G__6133__1.call(this, result);
              case 2:
                return G__6133__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6133.cljs$core$IFn$_invoke$arity$0 = G__6133__0;
          G__6133.cljs$core$IFn$_invoke$arity$1 = G__6133__1;
          G__6133.cljs$core$IFn$_invoke$arity$2 = G__6133__2;
          return G__6133;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first.call(null, s);
        var fv = f.call(null, fst);
        var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
          return function(p1__6132_SHARP_) {
            return cljs.core._EQ_.call(null, fv, f.call(null, p1__6132_SHARP_));
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
        return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__6144 = null;
      var G__6144__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__6144__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__6144__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__6144__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__6144__4 = function() {
        var G__6145__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__6145 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6145__delegate.call(this, x, y, z, args);
        };
        G__6145.cljs$lang$maxFixedArity = 3;
        G__6145.cljs$lang$applyTo = function(arglist__6146) {
          var x = cljs.core.first(arglist__6146);
          arglist__6146 = cljs.core.next(arglist__6146);
          var y = cljs.core.first(arglist__6146);
          arglist__6146 = cljs.core.next(arglist__6146);
          var z = cljs.core.first(arglist__6146);
          var args = cljs.core.rest(arglist__6146);
          return G__6145__delegate(x, y, z, args);
        };
        G__6145.cljs$core$IFn$_invoke$arity$variadic = G__6145__delegate;
        return G__6145;
      }();
      G__6144 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6144__0.call(this);
          case 1:
            return G__6144__1.call(this, x);
          case 2:
            return G__6144__2.call(this, x, y);
          case 3:
            return G__6144__3.call(this, x, y, z);
          default:
            return G__6144__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6144.cljs$lang$maxFixedArity = 3;
      G__6144.cljs$lang$applyTo = G__6144__4.cljs$lang$applyTo;
      G__6144.cljs$core$IFn$_invoke$arity$0 = G__6144__0;
      G__6144.cljs$core$IFn$_invoke$arity$1 = G__6144__1;
      G__6144.cljs$core$IFn$_invoke$arity$2 = G__6144__2;
      G__6144.cljs$core$IFn$_invoke$arity$3 = G__6144__3;
      G__6144.cljs$core$IFn$_invoke$arity$variadic = G__6144__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6144;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__6147 = null;
      var G__6147__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__6147__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__6147__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__6147__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__6147__4 = function() {
        var G__6148__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__6148 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6148__delegate.call(this, x, y, z, args);
        };
        G__6148.cljs$lang$maxFixedArity = 3;
        G__6148.cljs$lang$applyTo = function(arglist__6149) {
          var x = cljs.core.first(arglist__6149);
          arglist__6149 = cljs.core.next(arglist__6149);
          var y = cljs.core.first(arglist__6149);
          arglist__6149 = cljs.core.next(arglist__6149);
          var z = cljs.core.first(arglist__6149);
          var args = cljs.core.rest(arglist__6149);
          return G__6148__delegate(x, y, z, args);
        };
        G__6148.cljs$core$IFn$_invoke$arity$variadic = G__6148__delegate;
        return G__6148;
      }();
      G__6147 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6147__0.call(this);
          case 1:
            return G__6147__1.call(this, x);
          case 2:
            return G__6147__2.call(this, x, y);
          case 3:
            return G__6147__3.call(this, x, y, z);
          default:
            return G__6147__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6147.cljs$lang$maxFixedArity = 3;
      G__6147.cljs$lang$applyTo = G__6147__4.cljs$lang$applyTo;
      G__6147.cljs$core$IFn$_invoke$arity$0 = G__6147__0;
      G__6147.cljs$core$IFn$_invoke$arity$1 = G__6147__1;
      G__6147.cljs$core$IFn$_invoke$arity$2 = G__6147__2;
      G__6147.cljs$core$IFn$_invoke$arity$3 = G__6147__3;
      G__6147.cljs$core$IFn$_invoke$arity$variadic = G__6147__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6147;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__6150 = null;
      var G__6150__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__6150__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__6150__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__6150__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__6150__4 = function() {
        var G__6151__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__6151 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6151__delegate.call(this, x, y, z, args);
        };
        G__6151.cljs$lang$maxFixedArity = 3;
        G__6151.cljs$lang$applyTo = function(arglist__6152) {
          var x = cljs.core.first(arglist__6152);
          arglist__6152 = cljs.core.next(arglist__6152);
          var y = cljs.core.first(arglist__6152);
          arglist__6152 = cljs.core.next(arglist__6152);
          var z = cljs.core.first(arglist__6152);
          var args = cljs.core.rest(arglist__6152);
          return G__6151__delegate(x, y, z, args);
        };
        G__6151.cljs$core$IFn$_invoke$arity$variadic = G__6151__delegate;
        return G__6151;
      }();
      G__6150 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6150__0.call(this);
          case 1:
            return G__6150__1.call(this, x);
          case 2:
            return G__6150__2.call(this, x, y);
          case 3:
            return G__6150__3.call(this, x, y, z);
          default:
            return G__6150__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6150.cljs$lang$maxFixedArity = 3;
      G__6150.cljs$lang$applyTo = G__6150__4.cljs$lang$applyTo;
      G__6150.cljs$core$IFn$_invoke$arity$0 = G__6150__0;
      G__6150.cljs$core$IFn$_invoke$arity$1 = G__6150__1;
      G__6150.cljs$core$IFn$_invoke$arity$2 = G__6150__2;
      G__6150.cljs$core$IFn$_invoke$arity$3 = G__6150__3;
      G__6150.cljs$core$IFn$_invoke$arity$variadic = G__6150__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6150;
    }();
  };
  var juxt__4 = function() {
    var G__6153__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__6154 = null;
          var G__6154__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__6134_SHARP_, p2__6135_SHARP_) {
                return cljs.core.conj.call(null, p1__6134_SHARP_, p2__6135_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__6154__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__6136_SHARP_, p2__6137_SHARP_) {
                return cljs.core.conj.call(null, p1__6136_SHARP_, p2__6137_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__6154__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__6138_SHARP_, p2__6139_SHARP_) {
                return cljs.core.conj.call(null, p1__6138_SHARP_, p2__6139_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__6154__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__6140_SHARP_, p2__6141_SHARP_) {
                return cljs.core.conj.call(null, p1__6140_SHARP_, p2__6141_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__6154__4 = function() {
            var G__6155__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__6142_SHARP_, p2__6143_SHARP_) {
                  return cljs.core.conj.call(null, p1__6142_SHARP_, cljs.core.apply.call(null, p2__6143_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__6155 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__6155__delegate.call(this, x, y, z, args);
            };
            G__6155.cljs$lang$maxFixedArity = 3;
            G__6155.cljs$lang$applyTo = function(arglist__6156) {
              var x = cljs.core.first(arglist__6156);
              arglist__6156 = cljs.core.next(arglist__6156);
              var y = cljs.core.first(arglist__6156);
              arglist__6156 = cljs.core.next(arglist__6156);
              var z = cljs.core.first(arglist__6156);
              var args = cljs.core.rest(arglist__6156);
              return G__6155__delegate(x, y, z, args);
            };
            G__6155.cljs$core$IFn$_invoke$arity$variadic = G__6155__delegate;
            return G__6155;
          }();
          G__6154 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__6154__0.call(this);
              case 1:
                return G__6154__1.call(this, x);
              case 2:
                return G__6154__2.call(this, x, y);
              case 3:
                return G__6154__3.call(this, x, y, z);
              default:
                return G__6154__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6154.cljs$lang$maxFixedArity = 3;
          G__6154.cljs$lang$applyTo = G__6154__4.cljs$lang$applyTo;
          G__6154.cljs$core$IFn$_invoke$arity$0 = G__6154__0;
          G__6154.cljs$core$IFn$_invoke$arity$1 = G__6154__1;
          G__6154.cljs$core$IFn$_invoke$arity$2 = G__6154__2;
          G__6154.cljs$core$IFn$_invoke$arity$3 = G__6154__3;
          G__6154.cljs$core$IFn$_invoke$arity$variadic = G__6154__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__6154;
        }();
      }(fs__$1);
    };
    var G__6153 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6153__delegate.call(this, f, g, h, fs);
    };
    G__6153.cljs$lang$maxFixedArity = 3;
    G__6153.cljs$lang$applyTo = function(arglist__6157) {
      var f = cljs.core.first(arglist__6157);
      arglist__6157 = cljs.core.next(arglist__6157);
      var g = cljs.core.first(arglist__6157);
      arglist__6157 = cljs.core.next(arglist__6157);
      var h = cljs.core.first(arglist__6157);
      var fs = cljs.core.rest(arglist__6157);
      return G__6153__delegate(f, g, h, fs);
    };
    G__6153.cljs$core$IFn$_invoke$arity$variadic = G__6153__delegate;
    return G__6153;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__6158 = cljs.core.next.call(null, coll);
        coll = G__6158;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__6159 = n - 1;
        var G__6160 = cljs.core.next.call(null, coll);
        n = G__6159;
        coll = G__6160;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__6162 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.call(null, vec__6162, 0, null);
    var flags = cljs.core.nth.call(null, vec__6162, 1, null);
    var pattern = cljs.core.nth.call(null, vec__6162, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_6164 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_6165__$1 = cljs.core.next.call(null, coll);
      var n_6166 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_6165__$1 && (n_6166 == null || !(n_6166 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_6165__$1), writer, opts);
          var G__6167 = cljs.core.next.call(null, coll_6165__$1);
          var G__6168 = n_6166 - 1;
          coll_6165__$1 = G__6167;
          n_6166 = G__6168;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_6165__$1) && n_6166 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_6164;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__6173 = cljs.core.seq.call(null, ss);
    var chunk__6174 = null;
    var count__6175 = 0;
    var i__6176 = 0;
    while (true) {
      if (i__6176 < count__6175) {
        var s = cljs.core._nth.call(null, chunk__6174, i__6176);
        cljs.core._write.call(null, writer, s);
        var G__6177 = seq__6173;
        var G__6178 = chunk__6174;
        var G__6179 = count__6175;
        var G__6180 = i__6176 + 1;
        seq__6173 = G__6177;
        chunk__6174 = G__6178;
        count__6175 = G__6179;
        i__6176 = G__6180;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__6173);
        if (temp__4126__auto__) {
          var seq__6173__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6173__$1)) {
            var c__4433__auto__ = cljs.core.chunk_first.call(null, seq__6173__$1);
            var G__6181 = cljs.core.chunk_rest.call(null, seq__6173__$1);
            var G__6182 = c__4433__auto__;
            var G__6183 = cljs.core.count.call(null, c__4433__auto__);
            var G__6184 = 0;
            seq__6173 = G__6181;
            chunk__6174 = G__6182;
            count__6175 = G__6183;
            i__6176 = G__6184;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__6173__$1);
            cljs.core._write.call(null, writer, s);
            var G__6185 = cljs.core.next.call(null, seq__6173__$1);
            var G__6186 = null;
            var G__6187 = 0;
            var G__6188 = 0;
            seq__6173 = G__6185;
            chunk__6174 = G__6186;
            count__6175 = G__6187;
            i__6176 = G__6188;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__6189) {
    var writer = cljs.core.first(arglist__6189);
    var ss = cljs.core.rest(arglist__6189);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj6191 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj6191;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3634__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3634__auto__)) {
          var and__3634__auto____$1 = function() {
            var G__6197 = obj;
            if (G__6197) {
              var bit__4327__auto__ = G__6197.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4327__auto__ || G__6197.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__6197.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__6197);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__6197);
            }
          }();
          if (and__3634__auto____$1) {
            return cljs.core.meta.call(null, obj);
          } else {
            return and__3634__auto____$1;
          }
        } else {
          return and__3634__auto__;
        }
      }())) {
        cljs.core._write.call(null, writer, "^");
        pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
        cljs.core._write.call(null, writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write.call(null, writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__6198 = obj;
            if (G__6198) {
              var bit__4320__auto__ = G__6198.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4320__auto__ || G__6198.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._pr_writer.call(null, obj, writer, opts);
          } else {
            if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
              return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_.call(null, obj)) {
                cljs.core._write.call(null, writer, "#js ");
                return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (goog.isString(obj)) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                    } else {
                      return cljs.core._write.call(null, writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count.call(null, ns) < len) {
                              var G__6200 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__6200;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                      } else {
                        if (cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                        } else {
                          if (function() {
                            var G__6199 = obj;
                            if (G__6199) {
                              var bit__4327__auto__ = G__6199.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4327__auto__ || G__6199.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__6199.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__6199);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__6199);
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts);
                          } else {
                            return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__6205 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__6206 = null;
  var count__6207 = 0;
  var i__6208 = 0;
  while (true) {
    if (i__6208 < count__6207) {
      var obj = cljs.core._nth.call(null, chunk__6206, i__6208);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__6209 = seq__6205;
      var G__6210 = chunk__6206;
      var G__6211 = count__6207;
      var G__6212 = i__6208 + 1;
      seq__6205 = G__6209;
      chunk__6206 = G__6210;
      count__6207 = G__6211;
      i__6208 = G__6212;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6205);
      if (temp__4126__auto__) {
        var seq__6205__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6205__$1)) {
          var c__4433__auto__ = cljs.core.chunk_first.call(null, seq__6205__$1);
          var G__6213 = cljs.core.chunk_rest.call(null, seq__6205__$1);
          var G__6214 = c__4433__auto__;
          var G__6215 = cljs.core.count.call(null, c__4433__auto__);
          var G__6216 = 0;
          seq__6205 = G__6213;
          chunk__6206 = G__6214;
          count__6207 = G__6215;
          i__6208 = G__6216;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__6205__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__6217 = cljs.core.next.call(null, seq__6205__$1);
          var G__6218 = null;
          var G__6219 = 0;
          var G__6220 = 0;
          seq__6205 = G__6217;
          chunk__6206 = G__6218;
          count__6207 = G__6219;
          i__6208 = G__6220;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__6221) {
    var objs = cljs.core.seq(arglist__6221);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__6222) {
    var objs = cljs.core.seq(arglist__6222);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__6223) {
    var objs = cljs.core.seq(arglist__6223);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__6224) {
    var objs = cljs.core.seq(arglist__6224);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__6225) {
    var objs = cljs.core.seq(arglist__6225);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__6226) {
    var objs = cljs.core.seq(arglist__6226);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__6227) {
    var objs = cljs.core.seq(arglist__6227);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__6228) {
    var objs = cljs.core.seq(arglist__6228);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cVolatile: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#'");
  return cljs.core.pr_writer.call(null, a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__6229) {
    var iref = cljs.core.first(arglist__6229);
    arglist__6229 = cljs.core.next(arglist__6229);
    var f = cljs.core.first(arglist__6229);
    var args = cljs.core.rest(arglist__6229);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not.call(null, self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__6230_SHARP_, p2__6231_SHARP_) {
    var ret = rf.call(null, p1__6230_SHARP_, p2__6231_SHARP_);
    if (cljs.core.reduced_QMARK_.call(null, ret)) {
      return cljs.core.reduced.call(null, ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced.call(null, rf);
  return function(rf1) {
    return function() {
      var G__6232 = null;
      var G__6232__0 = function() {
        return rf.call(null);
      };
      var G__6232__1 = function(result) {
        return rf.call(null, result);
      };
      var G__6232__2 = function(result, input) {
        return cljs.core.reduce.call(null, rf1, result, input);
      };
      G__6232 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__6232__0.call(this);
          case 1:
            return G__6232__1.call(this, result);
          case 2:
            return G__6232__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6232.cljs$core$IFn$_invoke$arity$0 = G__6232__0;
      G__6232.cljs$core$IFn$_invoke$arity$1 = G__6232__1;
      G__6232.cljs$core$IFn$_invoke$arity$2 = G__6232__2;
      return G__6232;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__6233 = null;
          var G__6233__0 = function() {
            return rf.call(null);
          };
          var G__6233__1 = function(result) {
            return rf.call(null, result);
          };
          var G__6233__2 = function(result, input) {
            var prior = cljs.core.deref.call(null, pa);
            cljs.core.vreset_BANG_.call(null, pa, input);
            if (cljs.core._EQ_.call(null, prior, input)) {
              return result;
            } else {
              return rf.call(null, result, input);
            }
          };
          G__6233 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6233__0.call(this);
              case 1:
                return G__6233__1.call(this, result);
              case 2:
                return G__6233__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6233.cljs$core$IFn$_invoke$arity$0 = G__6233__0;
          G__6233.cljs$core$IFn$_invoke$arity$1 = G__6233__1;
          G__6233.cljs$core$IFn$_invoke$arity$2 = G__6233__2;
          return G__6233;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.call(null, dedupe.call(null), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.call(null, self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, cljs.core.sequence.call(null, self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4624__auto__ = this;
  return cljs.core.es6_iterator.call(null, this__4624__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.call(null, function(p1__6235_SHARP_, p2__6234_SHARP_) {
    return proc.call(null, p2__6234_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj6237 = {};
  return obj6237;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3634__auto__ = x;
    if (and__3634__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4290__auto__ = x == null ? null : x;
    return function() {
      var or__3646__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3634__auto__ = x;
    if (and__3634__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4290__auto__ = x == null ? null : x;
    return function() {
      var or__3646__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__6239 = k;
    if (G__6239) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6239.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__6239.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__6239);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__6239);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__6253 = x;
      if (G__6253) {
        var bit__4327__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3646__auto__ = bit__4327__auto__;
          if (cljs.core.truth_(or__3646__auto__)) {
            return or__3646__auto__;
          } else {
            return G__6253.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__6253.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__6253);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__6253);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj6255 = {};
              return obj6255;
            }();
            var seq__6256_6266 = cljs.core.seq.call(null, x);
            var chunk__6257_6267 = null;
            var count__6258_6268 = 0;
            var i__6259_6269 = 0;
            while (true) {
              if (i__6259_6269 < count__6258_6268) {
                var vec__6260_6270 = cljs.core._nth.call(null, chunk__6257_6267, i__6259_6269);
                var k_6271 = cljs.core.nth.call(null, vec__6260_6270, 0, null);
                var v_6272 = cljs.core.nth.call(null, vec__6260_6270, 1, null);
                m[cljs.core.key__GT_js.call(null, k_6271)] = clj__GT_js.call(null, v_6272);
                var G__6273 = seq__6256_6266;
                var G__6274 = chunk__6257_6267;
                var G__6275 = count__6258_6268;
                var G__6276 = i__6259_6269 + 1;
                seq__6256_6266 = G__6273;
                chunk__6257_6267 = G__6274;
                count__6258_6268 = G__6275;
                i__6259_6269 = G__6276;
                continue;
              } else {
                var temp__4126__auto___6277 = cljs.core.seq.call(null, seq__6256_6266);
                if (temp__4126__auto___6277) {
                  var seq__6256_6278__$1 = temp__4126__auto___6277;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__6256_6278__$1)) {
                    var c__4433__auto___6279 = cljs.core.chunk_first.call(null, seq__6256_6278__$1);
                    var G__6280 = cljs.core.chunk_rest.call(null, seq__6256_6278__$1);
                    var G__6281 = c__4433__auto___6279;
                    var G__6282 = cljs.core.count.call(null, c__4433__auto___6279);
                    var G__6283 = 0;
                    seq__6256_6266 = G__6280;
                    chunk__6257_6267 = G__6281;
                    count__6258_6268 = G__6282;
                    i__6259_6269 = G__6283;
                    continue;
                  } else {
                    var vec__6261_6284 = cljs.core.first.call(null, seq__6256_6278__$1);
                    var k_6285 = cljs.core.nth.call(null, vec__6261_6284, 0, null);
                    var v_6286 = cljs.core.nth.call(null, vec__6261_6284, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_6285)] = clj__GT_js.call(null, v_6286);
                    var G__6287 = cljs.core.next.call(null, seq__6256_6278__$1);
                    var G__6288 = null;
                    var G__6289 = 0;
                    var G__6290 = 0;
                    seq__6256_6266 = G__6287;
                    chunk__6257_6267 = G__6288;
                    count__6258_6268 = G__6289;
                    i__6259_6269 = G__6290;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__6262_6291 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__6263_6292 = null;
              var count__6264_6293 = 0;
              var i__6265_6294 = 0;
              while (true) {
                if (i__6265_6294 < count__6264_6293) {
                  var x_6295__$1 = cljs.core._nth.call(null, chunk__6263_6292, i__6265_6294);
                  arr.push(x_6295__$1);
                  var G__6296 = seq__6262_6291;
                  var G__6297 = chunk__6263_6292;
                  var G__6298 = count__6264_6293;
                  var G__6299 = i__6265_6294 + 1;
                  seq__6262_6291 = G__6296;
                  chunk__6263_6292 = G__6297;
                  count__6264_6293 = G__6298;
                  i__6265_6294 = G__6299;
                  continue;
                } else {
                  var temp__4126__auto___6300 = cljs.core.seq.call(null, seq__6262_6291);
                  if (temp__4126__auto___6300) {
                    var seq__6262_6301__$1 = temp__4126__auto___6300;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__6262_6301__$1)) {
                      var c__4433__auto___6302 = cljs.core.chunk_first.call(null, seq__6262_6301__$1);
                      var G__6303 = cljs.core.chunk_rest.call(null, seq__6262_6301__$1);
                      var G__6304 = c__4433__auto___6302;
                      var G__6305 = cljs.core.count.call(null, c__4433__auto___6302);
                      var G__6306 = 0;
                      seq__6262_6291 = G__6303;
                      chunk__6263_6292 = G__6304;
                      count__6264_6293 = G__6305;
                      i__6265_6294 = G__6306;
                      continue;
                    } else {
                      var x_6307__$1 = cljs.core.first.call(null, seq__6262_6301__$1);
                      arr.push(x_6307__$1);
                      var G__6308 = cljs.core.next.call(null, seq__6262_6301__$1);
                      var G__6309 = null;
                      var G__6310 = 0;
                      var G__6311 = 0;
                      seq__6262_6291 = G__6308;
                      chunk__6263_6292 = G__6309;
                      count__6264_6293 = G__6310;
                      i__6265_6294 = G__6311;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj6313 = {};
  return obj6313;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3634__auto__ = x;
    if (and__3634__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4290__auto__ = x == null ? null : x;
    return function() {
      var or__3646__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__6336__delegate = function(x, opts) {
      var map__6325 = opts;
      var map__6325__$1 = cljs.core.seq_QMARK_.call(null, map__6325) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6325) : map__6325;
      var keywordize_keys = cljs.core.get.call(null, map__6325__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__6325, map__6325__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__6331 = x__$1;
            if (G__6331) {
              var bit__4327__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__3646__auto__ = bit__4327__auto__;
                if (cljs.core.truth_(or__3646__auto__)) {
                  return or__3646__auto__;
                } else {
                  return G__6331.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__6331.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__6331);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__6331);
            }
          }()) {
            return cljs.core._js__GT_clj.call(null, x__$1, cljs.core.apply.call(null, cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_.call(null, x__$1)) {
              return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (cljs.core.type.call(null, x__$1) === Object) {
                    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4402__auto__ = function(map__6325, map__6325__$1, keywordize_keys, keyfn) {
                        return function iter__6332(s__6333) {
                          return new cljs.core.LazySeq(null, function(map__6325, map__6325__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__6333__$1 = s__6333;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq.call(null, s__6333__$1);
                                if (temp__4126__auto__) {
                                  var s__6333__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_.call(null, s__6333__$2)) {
                                    var c__4400__auto__ = cljs.core.chunk_first.call(null, s__6333__$2);
                                    var size__4401__auto__ = cljs.core.count.call(null, c__4400__auto__);
                                    var b__6335 = cljs.core.chunk_buffer.call(null, size__4401__auto__);
                                    if (function() {
                                      var i__6334 = 0;
                                      while (true) {
                                        if (i__6334 < size__4401__auto__) {
                                          var k = cljs.core._nth.call(null, c__4400__auto__, i__6334);
                                          cljs.core.chunk_append.call(null, b__6335, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                          var G__6337 = i__6334 + 1;
                                          i__6334 = G__6337;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6335), iter__6332.call(null, cljs.core.chunk_rest.call(null, s__6333__$2)));
                                    } else {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6335), null);
                                    }
                                  } else {
                                    var k = cljs.core.first.call(null, s__6333__$2);
                                    return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__6332.call(null, cljs.core.rest.call(null, s__6333__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__6325, map__6325__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__6325, map__6325__$1, keywordize_keys, keyfn);
                      return iter__4402__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__6325, map__6325__$1, keywordize_keys, keyfn);
      return f.call(null, x);
    };
    var G__6336 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__6336__delegate.call(this, x, opts);
    };
    G__6336.cljs$lang$maxFixedArity = 1;
    G__6336.cljs$lang$applyTo = function(arglist__6338) {
      var x = cljs.core.first(arglist__6338);
      var opts = cljs.core.rest(arglist__6338);
      return G__6336__delegate(x, opts);
    };
    G__6336.cljs$core$IFn$_invoke$arity$variadic = G__6336__delegate;
    return G__6336;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__6339__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__6339 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__6339__delegate.call(this, args);
      };
      G__6339.cljs$lang$maxFixedArity = 0;
      G__6339.cljs$lang$applyTo = function(arglist__6340) {
        var args = cljs.core.seq(arglist__6340);
        return G__6339__delegate(args);
      };
      G__6339.cljs$core$IFn$_invoke$arity$variadic = G__6339__delegate;
      return G__6339;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__6341 = ret;
        f = G__6341;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__6342__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__6342 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__6342__delegate.call(this, f, args);
    };
    G__6342.cljs$lang$maxFixedArity = 1;
    G__6342.cljs$lang$applyTo = function(arglist__6343) {
      var f = cljs.core.first(arglist__6343);
      var args = cljs.core.rest(arglist__6343);
      return G__6342__delegate(f, args);
    };
    G__6342.cljs$core$IFn$_invoke$arity$variadic = G__6342__delegate;
    return G__6342;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc_BANG_.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__6344) {
    var f = cljs.core.first(arglist__6344);
    var args = cljs.core.rest(arglist__6344);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3646__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3646__auto__) {
      return or__3646__auto__;
    } else {
      var or__3646__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3646__auto____$1) {
        return or__3646__auto____$1;
      } else {
        var and__3634__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3634__auto__) {
          var and__3634__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3634__auto____$1) {
            var and__3634__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3634__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__6345 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__6346 = i + 1;
                  ret = G__6345;
                  i = G__6346;
                  continue;
                }
                break;
              }
            } else {
              return and__3634__auto____$2;
            }
          } else {
            return and__3634__auto____$1;
          }
        } else {
          return and__3634__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3646__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3646__auto__)) {
      return or__3646__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__6347_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__6347_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__6347_SHARP_), cljs.core.second.call(null, p1__6347_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__6348_SHARP_, p2__6349_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__6348_SHARP_, p2__6349_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3646__auto__ = cljs.core.truth_(function() {
    var and__3634__auto__ = xprefs;
    if (cljs.core.truth_(and__3634__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3634__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3646__auto__)) {
    return or__3646__auto__;
  } else {
    var or__3646__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__6350 = cljs.core.rest.call(null, ps);
          ps = G__6350;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3646__auto____$1)) {
      return or__3646__auto____$1;
    } else {
      var or__3646__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__6351 = cljs.core.rest.call(null, ps);
            ps = G__6351;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3646__auto____$2)) {
        return or__3646__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3646__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3646__auto__)) {
    return or__3646__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__6354) {
    var vec__6355 = p__6354;
    var k = cljs.core.nth.call(null, vec__6355, 0, null);
    var _ = cljs.core.nth.call(null, vec__6355, 1, null);
    var e = vec__6355;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3646__auto__ = be == null;
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj6357 = {};
  return obj6357;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3634__auto__ = mf;
    if (and__3634__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4290__auto__ = mf == null ? null : mf;
    return function() {
      var or__3646__auto__ = cljs.core._reset[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._reset["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3634__auto__ = mf;
    if (and__3634__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4290__auto__ = mf == null ? null : mf;
    return function() {
      var or__3646__auto__ = cljs.core._add_method[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._add_method["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3634__auto__ = mf;
    if (and__3634__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4290__auto__ = mf == null ? null : mf;
    return function() {
      var or__3646__auto__ = cljs.core._remove_method[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._remove_method["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3634__auto__ = mf;
    if (and__3634__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4290__auto__ = mf == null ? null : mf;
    return function() {
      var or__3646__auto__ = cljs.core._prefer_method[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3634__auto__ = mf;
    if (and__3634__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4290__auto__ = mf == null ? null : mf;
    return function() {
      var or__3646__auto__ = cljs.core._get_method[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._get_method["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3634__auto__ = mf;
    if (and__3634__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4290__auto__ = mf == null ? null : mf;
    return function() {
      var or__3646__auto__ = cljs.core._methods[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._methods["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3634__auto__ = mf;
    if (and__3634__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4290__auto__ = mf == null ? null : mf;
    return function() {
      var or__3646__auto__ = cljs.core._prefers[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core._prefers["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name.call(null, self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace.call(null, self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__6359 = null;
  var G__6359__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null);
  };
  var G__6359__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__6359__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__6359__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__6359__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__6359__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__6359__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__6359__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__6359__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__6359__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__6359__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__6359__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__6359__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__6359__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__6359__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__6359__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__6359__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__6359__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__6359__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__6359__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__6359__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__6359__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__6359 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__6359__1.call(this, self__);
      case 2:
        return G__6359__2.call(this, self__, a);
      case 3:
        return G__6359__3.call(this, self__, a, b);
      case 4:
        return G__6359__4.call(this, self__, a, b, c);
      case 5:
        return G__6359__5.call(this, self__, a, b, c, d);
      case 6:
        return G__6359__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__6359__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__6359__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__6359__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__6359__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__6359__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__6359__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__6359__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__6359__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__6359__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__6359__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__6359__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__6359__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__6359__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__6359__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__6359__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__6359__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6359.cljs$core$IFn$_invoke$arity$1 = G__6359__1;
  G__6359.cljs$core$IFn$_invoke$arity$2 = G__6359__2;
  G__6359.cljs$core$IFn$_invoke$arity$3 = G__6359__3;
  G__6359.cljs$core$IFn$_invoke$arity$4 = G__6359__4;
  G__6359.cljs$core$IFn$_invoke$arity$5 = G__6359__5;
  G__6359.cljs$core$IFn$_invoke$arity$6 = G__6359__6;
  G__6359.cljs$core$IFn$_invoke$arity$7 = G__6359__7;
  G__6359.cljs$core$IFn$_invoke$arity$8 = G__6359__8;
  G__6359.cljs$core$IFn$_invoke$arity$9 = G__6359__9;
  G__6359.cljs$core$IFn$_invoke$arity$10 = G__6359__10;
  G__6359.cljs$core$IFn$_invoke$arity$11 = G__6359__11;
  G__6359.cljs$core$IFn$_invoke$arity$12 = G__6359__12;
  G__6359.cljs$core$IFn$_invoke$arity$13 = G__6359__13;
  G__6359.cljs$core$IFn$_invoke$arity$14 = G__6359__14;
  G__6359.cljs$core$IFn$_invoke$arity$15 = G__6359__15;
  G__6359.cljs$core$IFn$_invoke$arity$16 = G__6359__16;
  G__6359.cljs$core$IFn$_invoke$arity$17 = G__6359__17;
  G__6359.cljs$core$IFn$_invoke$arity$18 = G__6359__18;
  G__6359.cljs$core$IFn$_invoke$arity$19 = G__6359__19;
  G__6359.cljs$core$IFn$_invoke$arity$20 = G__6359__20;
  G__6359.cljs$core$IFn$_invoke$arity$21 = G__6359__21;
  G__6359.cljs$core$IFn$_invoke$arity$22 = G__6359__22;
  return G__6359;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args6358) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6358)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var a = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__6090) {
    var opts__5275__auto__ = cljs.core.first(arglist__6090);
    var children__5276__auto__ = cljs.core.rest(arglist__6090);
    return a__delegate(opts__5275__auto__, children__5276__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var abbr = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__6091) {
    var opts__5275__auto__ = cljs.core.first(arglist__6091);
    var children__5276__auto__ = cljs.core.rest(arglist__6091);
    return abbr__delegate(opts__5275__auto__, children__5276__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var address = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__6092) {
    var opts__5275__auto__ = cljs.core.first(arglist__6092);
    var children__5276__auto__ = cljs.core.rest(arglist__6092);
    return address__delegate(opts__5275__auto__, children__5276__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var area = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__6093) {
    var opts__5275__auto__ = cljs.core.first(arglist__6093);
    var children__5276__auto__ = cljs.core.rest(arglist__6093);
    return area__delegate(opts__5275__auto__, children__5276__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var article = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__6094) {
    var opts__5275__auto__ = cljs.core.first(arglist__6094);
    var children__5276__auto__ = cljs.core.rest(arglist__6094);
    return article__delegate(opts__5275__auto__, children__5276__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var aside = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__6095) {
    var opts__5275__auto__ = cljs.core.first(arglist__6095);
    var children__5276__auto__ = cljs.core.rest(arglist__6095);
    return aside__delegate(opts__5275__auto__, children__5276__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var audio = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__6096) {
    var opts__5275__auto__ = cljs.core.first(arglist__6096);
    var children__5276__auto__ = cljs.core.rest(arglist__6096);
    return audio__delegate(opts__5275__auto__, children__5276__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var b = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__6097) {
    var opts__5275__auto__ = cljs.core.first(arglist__6097);
    var children__5276__auto__ = cljs.core.rest(arglist__6097);
    return b__delegate(opts__5275__auto__, children__5276__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var base = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__6098) {
    var opts__5275__auto__ = cljs.core.first(arglist__6098);
    var children__5276__auto__ = cljs.core.rest(arglist__6098);
    return base__delegate(opts__5275__auto__, children__5276__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var bdi = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__6099) {
    var opts__5275__auto__ = cljs.core.first(arglist__6099);
    var children__5276__auto__ = cljs.core.rest(arglist__6099);
    return bdi__delegate(opts__5275__auto__, children__5276__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var bdo = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__6100) {
    var opts__5275__auto__ = cljs.core.first(arglist__6100);
    var children__5276__auto__ = cljs.core.rest(arglist__6100);
    return bdo__delegate(opts__5275__auto__, children__5276__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var big = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__6101) {
    var opts__5275__auto__ = cljs.core.first(arglist__6101);
    var children__5276__auto__ = cljs.core.rest(arglist__6101);
    return big__delegate(opts__5275__auto__, children__5276__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var blockquote = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__6102) {
    var opts__5275__auto__ = cljs.core.first(arglist__6102);
    var children__5276__auto__ = cljs.core.rest(arglist__6102);
    return blockquote__delegate(opts__5275__auto__, children__5276__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var body = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__6103) {
    var opts__5275__auto__ = cljs.core.first(arglist__6103);
    var children__5276__auto__ = cljs.core.rest(arglist__6103);
    return body__delegate(opts__5275__auto__, children__5276__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var br = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__6104) {
    var opts__5275__auto__ = cljs.core.first(arglist__6104);
    var children__5276__auto__ = cljs.core.rest(arglist__6104);
    return br__delegate(opts__5275__auto__, children__5276__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var button = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__6105) {
    var opts__5275__auto__ = cljs.core.first(arglist__6105);
    var children__5276__auto__ = cljs.core.rest(arglist__6105);
    return button__delegate(opts__5275__auto__, children__5276__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var canvas = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__6106) {
    var opts__5275__auto__ = cljs.core.first(arglist__6106);
    var children__5276__auto__ = cljs.core.rest(arglist__6106);
    return canvas__delegate(opts__5275__auto__, children__5276__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var caption = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__6107) {
    var opts__5275__auto__ = cljs.core.first(arglist__6107);
    var children__5276__auto__ = cljs.core.rest(arglist__6107);
    return caption__delegate(opts__5275__auto__, children__5276__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var cite = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__6108) {
    var opts__5275__auto__ = cljs.core.first(arglist__6108);
    var children__5276__auto__ = cljs.core.rest(arglist__6108);
    return cite__delegate(opts__5275__auto__, children__5276__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var code = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__6109) {
    var opts__5275__auto__ = cljs.core.first(arglist__6109);
    var children__5276__auto__ = cljs.core.rest(arglist__6109);
    return code__delegate(opts__5275__auto__, children__5276__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var col = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__6110) {
    var opts__5275__auto__ = cljs.core.first(arglist__6110);
    var children__5276__auto__ = cljs.core.rest(arglist__6110);
    return col__delegate(opts__5275__auto__, children__5276__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var colgroup = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__6111) {
    var opts__5275__auto__ = cljs.core.first(arglist__6111);
    var children__5276__auto__ = cljs.core.rest(arglist__6111);
    return colgroup__delegate(opts__5275__auto__, children__5276__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var data = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__6112) {
    var opts__5275__auto__ = cljs.core.first(arglist__6112);
    var children__5276__auto__ = cljs.core.rest(arglist__6112);
    return data__delegate(opts__5275__auto__, children__5276__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var datalist = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__6113) {
    var opts__5275__auto__ = cljs.core.first(arglist__6113);
    var children__5276__auto__ = cljs.core.rest(arglist__6113);
    return datalist__delegate(opts__5275__auto__, children__5276__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var dd = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__6114) {
    var opts__5275__auto__ = cljs.core.first(arglist__6114);
    var children__5276__auto__ = cljs.core.rest(arglist__6114);
    return dd__delegate(opts__5275__auto__, children__5276__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var del = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__6115) {
    var opts__5275__auto__ = cljs.core.first(arglist__6115);
    var children__5276__auto__ = cljs.core.rest(arglist__6115);
    return del__delegate(opts__5275__auto__, children__5276__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var dfn = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__6116) {
    var opts__5275__auto__ = cljs.core.first(arglist__6116);
    var children__5276__auto__ = cljs.core.rest(arglist__6116);
    return dfn__delegate(opts__5275__auto__, children__5276__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var div = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__6117) {
    var opts__5275__auto__ = cljs.core.first(arglist__6117);
    var children__5276__auto__ = cljs.core.rest(arglist__6117);
    return div__delegate(opts__5275__auto__, children__5276__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var dl = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__6118) {
    var opts__5275__auto__ = cljs.core.first(arglist__6118);
    var children__5276__auto__ = cljs.core.rest(arglist__6118);
    return dl__delegate(opts__5275__auto__, children__5276__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var dt = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__6119) {
    var opts__5275__auto__ = cljs.core.first(arglist__6119);
    var children__5276__auto__ = cljs.core.rest(arglist__6119);
    return dt__delegate(opts__5275__auto__, children__5276__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var em = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__6120) {
    var opts__5275__auto__ = cljs.core.first(arglist__6120);
    var children__5276__auto__ = cljs.core.rest(arglist__6120);
    return em__delegate(opts__5275__auto__, children__5276__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var embed = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__6121) {
    var opts__5275__auto__ = cljs.core.first(arglist__6121);
    var children__5276__auto__ = cljs.core.rest(arglist__6121);
    return embed__delegate(opts__5275__auto__, children__5276__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var fieldset = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__6122) {
    var opts__5275__auto__ = cljs.core.first(arglist__6122);
    var children__5276__auto__ = cljs.core.rest(arglist__6122);
    return fieldset__delegate(opts__5275__auto__, children__5276__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var figcaption = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__6123) {
    var opts__5275__auto__ = cljs.core.first(arglist__6123);
    var children__5276__auto__ = cljs.core.rest(arglist__6123);
    return figcaption__delegate(opts__5275__auto__, children__5276__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var figure = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__6124) {
    var opts__5275__auto__ = cljs.core.first(arglist__6124);
    var children__5276__auto__ = cljs.core.rest(arglist__6124);
    return figure__delegate(opts__5275__auto__, children__5276__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var footer = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__6125) {
    var opts__5275__auto__ = cljs.core.first(arglist__6125);
    var children__5276__auto__ = cljs.core.rest(arglist__6125);
    return footer__delegate(opts__5275__auto__, children__5276__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var form = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__6126) {
    var opts__5275__auto__ = cljs.core.first(arglist__6126);
    var children__5276__auto__ = cljs.core.rest(arglist__6126);
    return form__delegate(opts__5275__auto__, children__5276__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var h1 = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__6127) {
    var opts__5275__auto__ = cljs.core.first(arglist__6127);
    var children__5276__auto__ = cljs.core.rest(arglist__6127);
    return h1__delegate(opts__5275__auto__, children__5276__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var h2 = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__6128) {
    var opts__5275__auto__ = cljs.core.first(arglist__6128);
    var children__5276__auto__ = cljs.core.rest(arglist__6128);
    return h2__delegate(opts__5275__auto__, children__5276__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var h3 = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__6129) {
    var opts__5275__auto__ = cljs.core.first(arglist__6129);
    var children__5276__auto__ = cljs.core.rest(arglist__6129);
    return h3__delegate(opts__5275__auto__, children__5276__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var h4 = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__6130) {
    var opts__5275__auto__ = cljs.core.first(arglist__6130);
    var children__5276__auto__ = cljs.core.rest(arglist__6130);
    return h4__delegate(opts__5275__auto__, children__5276__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var h5 = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__6131) {
    var opts__5275__auto__ = cljs.core.first(arglist__6131);
    var children__5276__auto__ = cljs.core.rest(arglist__6131);
    return h5__delegate(opts__5275__auto__, children__5276__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var h6 = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__6132) {
    var opts__5275__auto__ = cljs.core.first(arglist__6132);
    var children__5276__auto__ = cljs.core.rest(arglist__6132);
    return h6__delegate(opts__5275__auto__, children__5276__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var head = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__6133) {
    var opts__5275__auto__ = cljs.core.first(arglist__6133);
    var children__5276__auto__ = cljs.core.rest(arglist__6133);
    return head__delegate(opts__5275__auto__, children__5276__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var header = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__6134) {
    var opts__5275__auto__ = cljs.core.first(arglist__6134);
    var children__5276__auto__ = cljs.core.rest(arglist__6134);
    return header__delegate(opts__5275__auto__, children__5276__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var hr = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__6135) {
    var opts__5275__auto__ = cljs.core.first(arglist__6135);
    var children__5276__auto__ = cljs.core.rest(arglist__6135);
    return hr__delegate(opts__5275__auto__, children__5276__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var html = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__6136) {
    var opts__5275__auto__ = cljs.core.first(arglist__6136);
    var children__5276__auto__ = cljs.core.rest(arglist__6136);
    return html__delegate(opts__5275__auto__, children__5276__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var i = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__6137) {
    var opts__5275__auto__ = cljs.core.first(arglist__6137);
    var children__5276__auto__ = cljs.core.rest(arglist__6137);
    return i__delegate(opts__5275__auto__, children__5276__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var iframe = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__6138) {
    var opts__5275__auto__ = cljs.core.first(arglist__6138);
    var children__5276__auto__ = cljs.core.rest(arglist__6138);
    return iframe__delegate(opts__5275__auto__, children__5276__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var img = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__6139) {
    var opts__5275__auto__ = cljs.core.first(arglist__6139);
    var children__5276__auto__ = cljs.core.rest(arglist__6139);
    return img__delegate(opts__5275__auto__, children__5276__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var ins = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__6140) {
    var opts__5275__auto__ = cljs.core.first(arglist__6140);
    var children__5276__auto__ = cljs.core.rest(arglist__6140);
    return ins__delegate(opts__5275__auto__, children__5276__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var kbd = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__6141) {
    var opts__5275__auto__ = cljs.core.first(arglist__6141);
    var children__5276__auto__ = cljs.core.rest(arglist__6141);
    return kbd__delegate(opts__5275__auto__, children__5276__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var keygen = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__6142) {
    var opts__5275__auto__ = cljs.core.first(arglist__6142);
    var children__5276__auto__ = cljs.core.rest(arglist__6142);
    return keygen__delegate(opts__5275__auto__, children__5276__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var label = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__6143) {
    var opts__5275__auto__ = cljs.core.first(arglist__6143);
    var children__5276__auto__ = cljs.core.rest(arglist__6143);
    return label__delegate(opts__5275__auto__, children__5276__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var legend = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__6144) {
    var opts__5275__auto__ = cljs.core.first(arglist__6144);
    var children__5276__auto__ = cljs.core.rest(arglist__6144);
    return legend__delegate(opts__5275__auto__, children__5276__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var li = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__6145) {
    var opts__5275__auto__ = cljs.core.first(arglist__6145);
    var children__5276__auto__ = cljs.core.rest(arglist__6145);
    return li__delegate(opts__5275__auto__, children__5276__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var link = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__6146) {
    var opts__5275__auto__ = cljs.core.first(arglist__6146);
    var children__5276__auto__ = cljs.core.rest(arglist__6146);
    return link__delegate(opts__5275__auto__, children__5276__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var main = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__6147) {
    var opts__5275__auto__ = cljs.core.first(arglist__6147);
    var children__5276__auto__ = cljs.core.rest(arglist__6147);
    return main__delegate(opts__5275__auto__, children__5276__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var map = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__6148) {
    var opts__5275__auto__ = cljs.core.first(arglist__6148);
    var children__5276__auto__ = cljs.core.rest(arglist__6148);
    return map__delegate(opts__5275__auto__, children__5276__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var mark = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__6149) {
    var opts__5275__auto__ = cljs.core.first(arglist__6149);
    var children__5276__auto__ = cljs.core.rest(arglist__6149);
    return mark__delegate(opts__5275__auto__, children__5276__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.marquee = function() {
  var marquee__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.marquee.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var marquee = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return marquee__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  marquee.cljs$lang$maxFixedArity = 1;
  marquee.cljs$lang$applyTo = function(arglist__6150) {
    var opts__5275__auto__ = cljs.core.first(arglist__6150);
    var children__5276__auto__ = cljs.core.rest(arglist__6150);
    return marquee__delegate(opts__5275__auto__, children__5276__auto__);
  };
  marquee.cljs$core$IFn$_invoke$arity$variadic = marquee__delegate;
  return marquee;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var menu = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__6151) {
    var opts__5275__auto__ = cljs.core.first(arglist__6151);
    var children__5276__auto__ = cljs.core.rest(arglist__6151);
    return menu__delegate(opts__5275__auto__, children__5276__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var menuitem = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__6152) {
    var opts__5275__auto__ = cljs.core.first(arglist__6152);
    var children__5276__auto__ = cljs.core.rest(arglist__6152);
    return menuitem__delegate(opts__5275__auto__, children__5276__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var meta = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__6153) {
    var opts__5275__auto__ = cljs.core.first(arglist__6153);
    var children__5276__auto__ = cljs.core.rest(arglist__6153);
    return meta__delegate(opts__5275__auto__, children__5276__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var meter = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__6154) {
    var opts__5275__auto__ = cljs.core.first(arglist__6154);
    var children__5276__auto__ = cljs.core.rest(arglist__6154);
    return meter__delegate(opts__5275__auto__, children__5276__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var nav = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__6155) {
    var opts__5275__auto__ = cljs.core.first(arglist__6155);
    var children__5276__auto__ = cljs.core.rest(arglist__6155);
    return nav__delegate(opts__5275__auto__, children__5276__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var noscript = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__6156) {
    var opts__5275__auto__ = cljs.core.first(arglist__6156);
    var children__5276__auto__ = cljs.core.rest(arglist__6156);
    return noscript__delegate(opts__5275__auto__, children__5276__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var object = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__6157) {
    var opts__5275__auto__ = cljs.core.first(arglist__6157);
    var children__5276__auto__ = cljs.core.rest(arglist__6157);
    return object__delegate(opts__5275__auto__, children__5276__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var ol = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__6158) {
    var opts__5275__auto__ = cljs.core.first(arglist__6158);
    var children__5276__auto__ = cljs.core.rest(arglist__6158);
    return ol__delegate(opts__5275__auto__, children__5276__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var optgroup = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__6159) {
    var opts__5275__auto__ = cljs.core.first(arglist__6159);
    var children__5276__auto__ = cljs.core.rest(arglist__6159);
    return optgroup__delegate(opts__5275__auto__, children__5276__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var output = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__6160) {
    var opts__5275__auto__ = cljs.core.first(arglist__6160);
    var children__5276__auto__ = cljs.core.rest(arglist__6160);
    return output__delegate(opts__5275__auto__, children__5276__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var p = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__6161) {
    var opts__5275__auto__ = cljs.core.first(arglist__6161);
    var children__5276__auto__ = cljs.core.rest(arglist__6161);
    return p__delegate(opts__5275__auto__, children__5276__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var param = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__6162) {
    var opts__5275__auto__ = cljs.core.first(arglist__6162);
    var children__5276__auto__ = cljs.core.rest(arglist__6162);
    return param__delegate(opts__5275__auto__, children__5276__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var pre = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__6163) {
    var opts__5275__auto__ = cljs.core.first(arglist__6163);
    var children__5276__auto__ = cljs.core.rest(arglist__6163);
    return pre__delegate(opts__5275__auto__, children__5276__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var progress = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__6164) {
    var opts__5275__auto__ = cljs.core.first(arglist__6164);
    var children__5276__auto__ = cljs.core.rest(arglist__6164);
    return progress__delegate(opts__5275__auto__, children__5276__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var q = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__6165) {
    var opts__5275__auto__ = cljs.core.first(arglist__6165);
    var children__5276__auto__ = cljs.core.rest(arglist__6165);
    return q__delegate(opts__5275__auto__, children__5276__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var rp = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__6166) {
    var opts__5275__auto__ = cljs.core.first(arglist__6166);
    var children__5276__auto__ = cljs.core.rest(arglist__6166);
    return rp__delegate(opts__5275__auto__, children__5276__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var rt = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__6167) {
    var opts__5275__auto__ = cljs.core.first(arglist__6167);
    var children__5276__auto__ = cljs.core.rest(arglist__6167);
    return rt__delegate(opts__5275__auto__, children__5276__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var ruby = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__6168) {
    var opts__5275__auto__ = cljs.core.first(arglist__6168);
    var children__5276__auto__ = cljs.core.rest(arglist__6168);
    return ruby__delegate(opts__5275__auto__, children__5276__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var s = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__6169) {
    var opts__5275__auto__ = cljs.core.first(arglist__6169);
    var children__5276__auto__ = cljs.core.rest(arglist__6169);
    return s__delegate(opts__5275__auto__, children__5276__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var samp = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__6170) {
    var opts__5275__auto__ = cljs.core.first(arglist__6170);
    var children__5276__auto__ = cljs.core.rest(arglist__6170);
    return samp__delegate(opts__5275__auto__, children__5276__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var script = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__6171) {
    var opts__5275__auto__ = cljs.core.first(arglist__6171);
    var children__5276__auto__ = cljs.core.rest(arglist__6171);
    return script__delegate(opts__5275__auto__, children__5276__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var section = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__6172) {
    var opts__5275__auto__ = cljs.core.first(arglist__6172);
    var children__5276__auto__ = cljs.core.rest(arglist__6172);
    return section__delegate(opts__5275__auto__, children__5276__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var select = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__6173) {
    var opts__5275__auto__ = cljs.core.first(arglist__6173);
    var children__5276__auto__ = cljs.core.rest(arglist__6173);
    return select__delegate(opts__5275__auto__, children__5276__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var small = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__6174) {
    var opts__5275__auto__ = cljs.core.first(arglist__6174);
    var children__5276__auto__ = cljs.core.rest(arglist__6174);
    return small__delegate(opts__5275__auto__, children__5276__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var source = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__6175) {
    var opts__5275__auto__ = cljs.core.first(arglist__6175);
    var children__5276__auto__ = cljs.core.rest(arglist__6175);
    return source__delegate(opts__5275__auto__, children__5276__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var span = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__6176) {
    var opts__5275__auto__ = cljs.core.first(arglist__6176);
    var children__5276__auto__ = cljs.core.rest(arglist__6176);
    return span__delegate(opts__5275__auto__, children__5276__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var strong = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__6177) {
    var opts__5275__auto__ = cljs.core.first(arglist__6177);
    var children__5276__auto__ = cljs.core.rest(arglist__6177);
    return strong__delegate(opts__5275__auto__, children__5276__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var style = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__6178) {
    var opts__5275__auto__ = cljs.core.first(arglist__6178);
    var children__5276__auto__ = cljs.core.rest(arglist__6178);
    return style__delegate(opts__5275__auto__, children__5276__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var sub = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__6179) {
    var opts__5275__auto__ = cljs.core.first(arglist__6179);
    var children__5276__auto__ = cljs.core.rest(arglist__6179);
    return sub__delegate(opts__5275__auto__, children__5276__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var summary = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__6180) {
    var opts__5275__auto__ = cljs.core.first(arglist__6180);
    var children__5276__auto__ = cljs.core.rest(arglist__6180);
    return summary__delegate(opts__5275__auto__, children__5276__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var sup = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__6181) {
    var opts__5275__auto__ = cljs.core.first(arglist__6181);
    var children__5276__auto__ = cljs.core.rest(arglist__6181);
    return sup__delegate(opts__5275__auto__, children__5276__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var table = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__6182) {
    var opts__5275__auto__ = cljs.core.first(arglist__6182);
    var children__5276__auto__ = cljs.core.rest(arglist__6182);
    return table__delegate(opts__5275__auto__, children__5276__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var tbody = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__6183) {
    var opts__5275__auto__ = cljs.core.first(arglist__6183);
    var children__5276__auto__ = cljs.core.rest(arglist__6183);
    return tbody__delegate(opts__5275__auto__, children__5276__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var td = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__6184) {
    var opts__5275__auto__ = cljs.core.first(arglist__6184);
    var children__5276__auto__ = cljs.core.rest(arglist__6184);
    return td__delegate(opts__5275__auto__, children__5276__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var tfoot = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__6185) {
    var opts__5275__auto__ = cljs.core.first(arglist__6185);
    var children__5276__auto__ = cljs.core.rest(arglist__6185);
    return tfoot__delegate(opts__5275__auto__, children__5276__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var th = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__6186) {
    var opts__5275__auto__ = cljs.core.first(arglist__6186);
    var children__5276__auto__ = cljs.core.rest(arglist__6186);
    return th__delegate(opts__5275__auto__, children__5276__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var thead = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__6187) {
    var opts__5275__auto__ = cljs.core.first(arglist__6187);
    var children__5276__auto__ = cljs.core.rest(arglist__6187);
    return thead__delegate(opts__5275__auto__, children__5276__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var time = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__6188) {
    var opts__5275__auto__ = cljs.core.first(arglist__6188);
    var children__5276__auto__ = cljs.core.rest(arglist__6188);
    return time__delegate(opts__5275__auto__, children__5276__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var title = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__6189) {
    var opts__5275__auto__ = cljs.core.first(arglist__6189);
    var children__5276__auto__ = cljs.core.rest(arglist__6189);
    return title__delegate(opts__5275__auto__, children__5276__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var tr = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__6190) {
    var opts__5275__auto__ = cljs.core.first(arglist__6190);
    var children__5276__auto__ = cljs.core.rest(arglist__6190);
    return tr__delegate(opts__5275__auto__, children__5276__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var track = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__6191) {
    var opts__5275__auto__ = cljs.core.first(arglist__6191);
    var children__5276__auto__ = cljs.core.rest(arglist__6191);
    return track__delegate(opts__5275__auto__, children__5276__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var u = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__6192) {
    var opts__5275__auto__ = cljs.core.first(arglist__6192);
    var children__5276__auto__ = cljs.core.rest(arglist__6192);
    return u__delegate(opts__5275__auto__, children__5276__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var ul = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__6193) {
    var opts__5275__auto__ = cljs.core.first(arglist__6193);
    var children__5276__auto__ = cljs.core.rest(arglist__6193);
    return ul__delegate(opts__5275__auto__, children__5276__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var var$ = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__6194) {
    var opts__5275__auto__ = cljs.core.first(arglist__6194);
    var children__5276__auto__ = cljs.core.rest(arglist__6194);
    return var$__delegate(opts__5275__auto__, children__5276__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var video = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__6195) {
    var opts__5275__auto__ = cljs.core.first(arglist__6195);
    var children__5276__auto__ = cljs.core.rest(arglist__6195);
    return video__delegate(opts__5275__auto__, children__5276__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var wbr = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__6196) {
    var opts__5275__auto__ = cljs.core.first(arglist__6196);
    var children__5276__auto__ = cljs.core.rest(arglist__6196);
    return wbr__delegate(opts__5275__auto__, children__5276__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var circle = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__6197) {
    var opts__5275__auto__ = cljs.core.first(arglist__6197);
    var children__5276__auto__ = cljs.core.rest(arglist__6197);
    return circle__delegate(opts__5275__auto__, children__5276__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.ellipse = function() {
  var ellipse__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var ellipse = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ellipse__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  ellipse.cljs$lang$maxFixedArity = 1;
  ellipse.cljs$lang$applyTo = function(arglist__6198) {
    var opts__5275__auto__ = cljs.core.first(arglist__6198);
    var children__5276__auto__ = cljs.core.rest(arglist__6198);
    return ellipse__delegate(opts__5275__auto__, children__5276__auto__);
  };
  ellipse.cljs$core$IFn$_invoke$arity$variadic = ellipse__delegate;
  return ellipse;
}();
om.dom.g = function() {
  var g__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var g = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__6199) {
    var opts__5275__auto__ = cljs.core.first(arglist__6199);
    var children__5276__auto__ = cljs.core.rest(arglist__6199);
    return g__delegate(opts__5275__auto__, children__5276__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var line = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__6200) {
    var opts__5275__auto__ = cljs.core.first(arglist__6200);
    var children__5276__auto__ = cljs.core.rest(arglist__6200);
    return line__delegate(opts__5275__auto__, children__5276__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var path = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__6201) {
    var opts__5275__auto__ = cljs.core.first(arglist__6201);
    var children__5276__auto__ = cljs.core.rest(arglist__6201);
    return path__delegate(opts__5275__auto__, children__5276__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var polyline = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__6202) {
    var opts__5275__auto__ = cljs.core.first(arglist__6202);
    var children__5276__auto__ = cljs.core.rest(arglist__6202);
    return polyline__delegate(opts__5275__auto__, children__5276__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var rect = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__6203) {
    var opts__5275__auto__ = cljs.core.first(arglist__6203);
    var children__5276__auto__ = cljs.core.rest(arglist__6203);
    return rect__delegate(opts__5275__auto__, children__5276__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var svg = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__6204) {
    var opts__5275__auto__ = cljs.core.first(arglist__6204);
    var children__5276__auto__ = cljs.core.rest(arglist__6204);
    return svg__delegate(opts__5275__auto__, children__5276__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var text = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__6205) {
    var opts__5275__auto__ = cljs.core.first(arglist__6205);
    var children__5276__auto__ = cljs.core.rest(arglist__6205);
    return text__delegate(opts__5275__auto__, children__5276__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var defs = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return defs__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__6206) {
    var opts__5275__auto__ = cljs.core.first(arglist__6206);
    var children__5276__auto__ = cljs.core.rest(arglist__6206);
    return defs__delegate(opts__5275__auto__, children__5276__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var linearGradient = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return linearGradient__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__6207) {
    var opts__5275__auto__ = cljs.core.first(arglist__6207);
    var children__5276__auto__ = cljs.core.rest(arglist__6207);
    return linearGradient__delegate(opts__5275__auto__, children__5276__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var polygon = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polygon__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__6208) {
    var opts__5275__auto__ = cljs.core.first(arglist__6208);
    var children__5276__auto__ = cljs.core.rest(arglist__6208);
    return polygon__delegate(opts__5275__auto__, children__5276__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var radialGradient = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return radialGradient__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__6209) {
    var opts__5275__auto__ = cljs.core.first(arglist__6209);
    var children__5276__auto__ = cljs.core.rest(arglist__6209);
    return radialGradient__delegate(opts__5275__auto__, children__5276__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var stop = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return stop__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__6210) {
    var opts__5275__auto__ = cljs.core.first(arglist__6210);
    var children__5276__auto__ = cljs.core.rest(arglist__6210);
    return stop__delegate(opts__5275__auto__, children__5276__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.tspan = function() {
  var tspan__delegate = function(opts__5275__auto__, children__5276__auto__) {
    return React.DOM.tspan.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5275__auto__, children__5276__auto__)));
  };
  var tspan = function(opts__5275__auto__, var_args) {
    var children__5276__auto__ = null;
    if (arguments.length > 1) {
      children__5276__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tspan__delegate.call(this, opts__5275__auto__, children__5276__auto__);
  };
  tspan.cljs$lang$maxFixedArity = 1;
  tspan.cljs$lang$applyTo = function(arglist__6211) {
    var opts__5275__auto__ = cljs.core.first(arglist__6211);
    var children__5276__auto__ = cljs.core.rest(arglist__6211);
    return tspan__delegate(opts__5275__auto__, children__5276__auto__);
  };
  tspan.cljs$core$IFn$_invoke$arity$variadic = tspan__delegate;
  return tspan;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createFactory(React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }}));
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.render(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderToString(c);
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj13354 = {};
  return obj13354;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3634__auto__ = port;
    if (and__3634__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4290__auto__ = port == null ? null : port;
    return function() {
      var or__3646__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj13356 = {};
  return obj13356;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__3634__auto__ = port;
    if (and__3634__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4290__auto__ = port == null ? null : port;
    return function() {
      var or__3646__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj13358 = {};
  return obj13358;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3634__auto__ = chan;
    if (and__3634__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4290__auto__ = chan == null ? null : chan;
    return function() {
      var or__3646__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__3634__auto__ = chan;
    if (and__3634__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4290__auto__ = chan == null ? null : chan;
    return function() {
      var or__3646__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj13360 = {};
  return obj13360;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3634__auto__ = h;
    if (and__3634__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4290__auto__ = h == null ? null : h;
    return function() {
      var or__3646__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3634__auto__ = h;
    if (and__3634__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4290__auto__ = h == null ? null : h;
    return function() {
      var or__3646__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj13362 = {};
  return obj13362;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3634__auto__ = b;
    if (and__3634__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4290__auto__ = b == null ? null : b;
    return function() {
      var or__3646__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3634__auto__ = b;
    if (and__3634__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4290__auto__ = b == null ? null : b;
    return function() {
      var or__3646__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function add_BANG__STAR_(b, itm) {
  if (function() {
    var and__3634__auto__ = b;
    if (and__3634__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__4290__auto__ = b == null ? null : b;
    return function() {
      var or__3646__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function() {
  var add_BANG_ = null;
  var add_BANG___1 = function(b) {
    return b;
  };
  var add_BANG___2 = function(b, itm) {
    if (!(itm == null)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
    }
    return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
  };
  add_BANG_ = function(b, itm) {
    switch(arguments.length) {
      case 1:
        return add_BANG___1.call(this, b);
      case 2:
        return add_BANG___2.call(this, b, itm);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_BANG_.cljs$core$IFn$_invoke$arity$1 = add_BANG___1;
  add_BANG_.cljs$core$IFn$_invoke$arity$2 = add_BANG___2;
  return add_BANG_;
}();
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj13364 = {};
  return obj13364;
}();
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__13365 = cnt + 1;
      cnt = G__13365;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4533__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4533__auto__) {
      var v_13366 = this$.pop();
      if (keep_QMARK_.call(null, v_13366)) {
        this$.unshift(v_13366);
      } else {
      }
      var G__13367 = x + 1;
      x = G__13367;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.functions");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener) {
    Channel = function() {
      var iframe = document.createElement("iframe");
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (e.origin != origin && e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined") {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      head = head.next;
      var cb = head.cb;
      head.cb = null;
      cb();
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement("script")) {
    return function(cb) {
      var script = document.createElement("script");
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("goog.async.nextTick");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_13368 = 0;
  while (true) {
    var m_13369 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_13369 == null) {
    } else {
      m_13369.call(null);
      if (count_13368 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__13370 = count_13368 + 1;
        count_13368 = G__13370;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3634__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__3634__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3634__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t13374 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t13374 = function(val, box, meta13375) {
      this.val = val;
      this.box = box;
      this.meta13375 = meta13375;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t13374.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t13374.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13376) {
      var self__ = this;
      var _13376__$1 = this;
      return self__.meta13375;
    };
    cljs.core.async.impl.channels.t13374.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13376, meta13375__$1) {
      var self__ = this;
      var _13376__$1 = this;
      return new cljs.core.async.impl.channels.t13374(self__.val, self__.box, meta13375__$1);
    };
    cljs.core.async.impl.channels.t13374.cljs$lang$type = true;
    cljs.core.async.impl.channels.t13374.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t13374";
    cljs.core.async.impl.channels.t13374.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
      return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async.impl.channels/t13374");
    };
    cljs.core.async.impl.channels.__GT_t13374 = function __GT_t13374(val__$1, box__$1, meta13375) {
      return new cljs.core.async.impl.channels.t13374(val__$1, box__$1, meta13375);
    };
  }
  return new cljs.core.async.impl.channels.t13374(val, box, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 22, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 18, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 17, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/brabadu/projects/prom-stats/target/cljsbuild-compiler-0/cljs/core/async/impl/channels.cljs"], 
  null));
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
  var obj13378 = {};
  return obj13378;
}();
cljs.core.async.impl.channels.abort = function abort(this$) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.cljs$core$async$impl$channels$MMC$abort$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.impl.channels.abort["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__3634__auto__ = self__.buf;
      if (cljs.core.truth_(and__3634__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__3634__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_13379 = self__.takes.pop();
      if (taker_13379 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_13379)) {
          var take_cb_13380 = cljs.core.async.impl.protocols.commit.call(null, taker_13379);
          var val_13381 = cljs.core.truth_(function() {
            var and__3634__auto__ = self__.buf;
            if (cljs.core.truth_(and__3634__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__3634__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_13380, val_13381, taker_13379, this$__$1) {
            return function() {
              return take_cb_13380.call(null, val_13381);
            };
          }(take_cb_13380, val_13381, taker_13379, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_13382 = self__.puts.pop();
          if (putter_13382 == null) {
          } else {
            var put_handler_13383 = putter_13382.handler;
            var val_13384 = putter_13382.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_13383)) {
              var put_cb_13385 = cljs.core.async.impl.protocols.commit.call(null, put_handler_13383);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_13385, put_handler_13383, val_13384, putter_13382, _, retval, this$__$1) {
                return function() {
                  return put_cb_13385.call(null, true);
                };
              }(put_cb_13385, put_handler_13383, val_13384, putter_13382, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_13384))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__3634__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__3634__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__3634__auto__;
            }
          }())) {
            var has_val = function() {
              var and__3634__auto__ = self__.buf;
              if (cljs.core.truth_(and__3634__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__3634__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, "takes", 
            "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__3634__auto__ = self__.buf;
      if (cljs.core.truth_(and__3634__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__3634__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_13386 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_13386)) {
            var take_cb_13387 = cljs.core.async.impl.protocols.commit.call(null, taker_13386);
            var val_13388__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_13387, val_13388__$1, taker_13386, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_13387.call(null, val_13388__$1);
              };
            }(take_cb_13387, val_13388__$1, taker_13386, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_13389 = self__.puts.pop();
    if (putter_13389 == null) {
    } else {
      var put_handler_13390 = putter_13389.handler;
      var val_13391 = putter_13389.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_13390)) {
        var put_cb_13392 = cljs.core.async.impl.protocols.commit.call(null, put_handler_13390);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_13392, put_handler_13390, val_13391, putter_13389, this$__$1) {
          return function() {
            return put_cb_13392.call(null, true);
          };
        }(put_cb_13392, put_handler_13390, val_13391, putter_13389, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function handle(buf, exh, t) {
  var else$ = function() {
    var or__3646__auto__ = exh;
    if (cljs.core.truth_(or__3646__auto__)) {
      return or__3646__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function() {
  var chan = null;
  var chan__1 = function(buf) {
    return chan.call(null, buf, null);
  };
  var chan__2 = function(buf, xform) {
    return chan.call(null, buf, xform, null);
  };
  var chan__3 = function(buf, xform, exh) {
    return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
      var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
      return function(add_BANG_) {
        return function() {
          var G__13397 = null;
          var G__13397__1 = function(buf__$1) {
            try {
              return add_BANG_.call(null, buf__$1);
            } catch (e13395) {
              var t = e13395;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          var G__13397__2 = function(buf__$1, val) {
            try {
              return add_BANG_.call(null, buf__$1, val);
            } catch (e13396) {
              var t = e13396;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          G__13397 = function(buf__$1, val) {
            switch(arguments.length) {
              case 1:
                return G__13397__1.call(this, buf__$1);
              case 2:
                return G__13397__2.call(this, buf__$1, val);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13397.cljs$core$IFn$_invoke$arity$1 = G__13397__1;
          G__13397.cljs$core$IFn$_invoke$arity$2 = G__13397__2;
          return G__13397;
        }();
      }(add_BANG_);
    }());
  };
  chan = function(buf, xform, exh) {
    switch(arguments.length) {
      case 1:
        return chan__1.call(this, buf);
      case 2:
        return chan__2.call(this, buf, xform);
      case 3:
        return chan__3.call(this, buf, xform, exh);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t13314 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t13314 = function(f, fn_handler, meta13315) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta13315 = meta13315;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t13314.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t13314.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t13314.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t13314.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13316) {
      var self__ = this;
      var _13316__$1 = this;
      return self__.meta13315;
    };
    cljs.core.async.impl.ioc_helpers.t13314.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13316, meta13315__$1) {
      var self__ = this;
      var _13316__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t13314(self__.f, self__.fn_handler, meta13315__$1);
    };
    cljs.core.async.impl.ioc_helpers.t13314.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t13314.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t13314";
    cljs.core.async.impl.ioc_helpers.t13314.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
      return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async.impl.ioc-helpers/t13314");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t13314 = function __GT_t13314(f__$1, fn_handler__$1, meta13315) {
      return new cljs.core.async.impl.ioc_helpers.t13314(f__$1, fn_handler__$1, meta13315);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t13314(f, fn_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 19, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 30, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 27, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/brabadu/projects/prom-stats/target/cljsbuild-compiler-0/cljs/core/async/impl/ioc_helpers.cljs"], 
  null));
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e13318) {
    if (e13318 instanceof Object) {
      var ex = e13318;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e13318;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_13321_13323 = state;
    statearr_13321_13323[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_13321_13323[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_13322_13324 = state;
    statearr_13322_13324[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_13322_13324[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_13327_13329 = state;
    statearr_13327_13329[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_13327_13329[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_13328_13330 = state;
    statearr_13328_13330[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_13328_13330[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4249__auto__, k__4250__auto__) {
  var self__ = this;
  var this__4249__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4249__auto____$1, k__4250__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4251__auto__, k13332, else__4252__auto__) {
  var self__ = this;
  var this__4251__auto____$1 = this;
  var G__13334 = k13332 instanceof cljs.core.Keyword ? k13332.fqn : null;
  switch(G__13334) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k13332, else__4252__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4263__auto__, writer__4264__auto__, opts__4265__auto__) {
  var self__ = this;
  var this__4263__auto____$1 = this;
  var pr_pair__4266__auto__ = function(this__4263__auto____$1) {
    return function(keyval__4267__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4264__auto__, cljs.core.pr_writer, "", " ", "", opts__4265__auto__, keyval__4267__auto__);
    };
  }(this__4263__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4264__auto__, pr_pair__4266__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4265__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4247__auto__) {
  var self__ = this;
  var this__4247__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4253__auto__) {
  var self__ = this;
  var this__4253__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4244__auto__) {
  var self__ = this;
  var this__4244__auto____$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_imap.call(null, this__4244__auto____$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4245__auto__, other__4246__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3634__auto__ = other__4246__auto__;
    if (cljs.core.truth_(and__3634__auto__)) {
      return this__4245__auto____$1.constructor === other__4246__auto__.constructor && cljs.core.equiv_map.call(null, this__4245__auto____$1, other__4246__auto__);
    } else {
      return and__3634__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4258__auto__, k__4259__auto__) {
  var self__ = this;
  var this__4258__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4259__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4258__auto____$1), self__.__meta), k__4259__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4259__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4256__auto__, k__4257__auto__, G__13331) {
  var self__ = this;
  var this__4256__auto____$1 = this;
  var pred__13335 = cljs.core.keyword_identical_QMARK_;
  var expr__13336 = k__4257__auto__;
  if (cljs.core.truth_(pred__13335.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__13336))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__13331, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__13335.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__13336))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__13331, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__13335.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__13336))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__13331, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__13335.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__13336))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__13331, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__13335.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__13336))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__13331, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4257__auto__, G__13331), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4261__auto__) {
  var self__ = this;
  var this__4261__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4248__auto__, G__13331) {
  var self__ = this;
  var this__4248__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__13331, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4254__auto__, entry__4255__auto__) {
  var self__ = this;
  var this__4254__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4255__auto__)) {
    return cljs.core._assoc.call(null, this__4254__auto____$1, cljs.core._nth.call(null, entry__4255__auto__, 0), cljs.core._nth.call(null, entry__4255__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4254__auto____$1, entry__4255__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4283__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4283__auto__, writer__4284__auto__) {
  return cljs.core._write.call(null, writer__4284__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__13333) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__13333), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__13333), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__13333), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__13333), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__13333), null, cljs.core.dissoc.call(null, G__13333, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_13340 = state;
  statearr_13340[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_13340;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3634__auto__ = exception;
      if (cljs.core.truth_(and__3634__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3634__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3634__auto__ = exception;
        if (cljs.core.truth_(and__3634__auto__)) {
          var and__3634__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3634__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3634__auto____$1;
          }
        } else {
          return and__3634__auto__;
        }
      }())) {
        var statearr_13346 = state;
        statearr_13346[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_13346[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_13346[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_13346[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_13346;
      } else {
        if (cljs.core.truth_(function() {
          var and__3634__auto__ = exception;
          if (cljs.core.truth_(and__3634__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3634__auto__;
          }
        }())) {
          var statearr_13347_13351 = state;
          statearr_13347_13351[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__13352 = state;
          state = G__13352;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3634__auto__ = exception;
            if (cljs.core.truth_(and__3634__auto__)) {
              var and__3634__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3634__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3634__auto____$1;
              }
            } else {
              return and__3634__auto__;
            }
          }())) {
            var statearr_13348 = state;
            statearr_13348[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_13348[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_13348;
          } else {
            if (cljs.core.truth_(function() {
              var and__3634__auto__ = cljs.core.not.call(null, exception);
              if (and__3634__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3634__auto__;
              }
            }())) {
              var statearr_13349 = state;
              statearr_13349[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_13349[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_13349;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_13350 = state;
                statearr_13350[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_13350[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_13350;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__13287 = level + 1;
        level = G__13287;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_13288 = 0;
    while (true) {
      if (i_13288 < arr.length) {
        arr[i_13288] = null;
        var G__13289 = i_13288 + 1;
        i_13288 = G__13289;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__13290 = x_SINGLEQUOTE_;
                x__$1 = G__13290;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__13291 = x__$1;
        var G__13292 = k;
        var G__13293 = level - 1;
        var G__13294 = update;
        x = G__13291;
        k = G__13292;
        level = G__13293;
        update = G__13294;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_13295 = self__.level + 1;
      while (true) {
        if (i_13295 <= new_level + 1) {
          update[i_13295] = self__.header;
          var G__13296 = i_13295 + 1;
          i_13295 = G__13296;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_13297 = 0;
    while (true) {
      if (i_13297 <= self__.level) {
        var links_13298 = update[i_13297].forward;
        if (links_13298[i_13297] === x__$1) {
          links_13298[i_13297] = x__$1.forward[i_13297];
          var G__13299 = i_13297 + 1;
          i_13297 = G__13299;
          continue;
        } else {
          var G__13300 = i_13297 + 1;
          i_13297 = G__13300;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__13301 = x_SINGLEQUOTE_;
              x__$1 = G__13301;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__13302 = nx;
        var G__13303 = level__$1 - 1;
        x = G__13302;
        level__$1 = G__13303;
        continue;
      } else {
        var G__13304 = x;
        var G__13305 = level__$1 - 1;
        x = G__13304;
        level__$1 = G__13305;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__13306 = x_SINGLEQUOTE_;
              x__$1 = G__13306;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__13307 = nx;
        var G__13308 = level__$1 - 1;
        x = G__13307;
        level__$1 = G__13308;
        continue;
      } else {
        var G__13309 = x;
        var G__13310 = level__$1 - 1;
        x = G__13309;
        level__$1 = G__13310;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3646__auto__ = cljs.core.truth_(function() {
    var and__3634__auto__ = me;
    if (cljs.core.truth_(and__3634__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3634__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3646__auto__)) {
    return or__3646__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3646__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3646__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t10202 !== "undefined") {
  } else {
    cljs.core.async.t10202 = function(f, fn_handler, meta10203) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta10203 = meta10203;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10202.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t10202.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t10202.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t10202.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10204) {
      var self__ = this;
      var _10204__$1 = this;
      return self__.meta10203;
    };
    cljs.core.async.t10202.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10204, meta10203__$1) {
      var self__ = this;
      var _10204__$1 = this;
      return new cljs.core.async.t10202(self__.f, self__.fn_handler, meta10203__$1);
    };
    cljs.core.async.t10202.cljs$lang$type = true;
    cljs.core.async.t10202.cljs$lang$ctorStr = "cljs.core.async/t10202";
    cljs.core.async.t10202.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
      return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async/t10202");
    };
    cljs.core.async.__GT_t10202 = function __GT_t10202(f__$1, fn_handler__$1, meta10203) {
      return new cljs.core.async.t10202(f__$1, fn_handler__$1, meta10203);
    };
  }
  return new cljs.core.async.t10202(f, fn_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 20, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 16, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 13, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/brabadu/projects/prom-stats/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__10206 = buff;
  if (G__10206) {
    var bit__4327__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3646__auto__ = bit__4327__auto__;
      if (cljs.core.truth_(or__3646__auto__)) {
        return or__3646__auto__;
      } else {
        return G__10206.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__10206.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__10206);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__10206);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    return chan.call(null, buf_or_n, null, null);
  };
  var chan__2 = function(buf_or_n, xform) {
    return chan.call(null, buf_or_n, xform, null);
  };
  var chan__3 = function(buf_or_n, xform, ex_handler) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    if (cljs.core.truth_(xform)) {
      if (cljs.core.truth_(buf_or_n__$1)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
      }
    } else {
    }
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
  };
  chan = function(buf_or_n, xform, ex_handler) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
      case 2:
        return chan__2.call(this, buf_or_n, xform);
      case 3:
        return chan__3.call(this, buf_or_n, xform, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_10207 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_10207);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_10207, ret) {
          return function() {
            return fn1.call(null, val_10207);
          };
        }(val_10207, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4533__auto___10208 = n;
  var x_10209 = 0;
  while (true) {
    if (x_10209 < n__4533__auto___10208) {
      a[x_10209] = 0;
      var G__10210 = x_10209 + 1;
      x_10209 = G__10210;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__10211 = i + 1;
      i = G__10211;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t10215 !== "undefined") {
  } else {
    cljs.core.async.t10215 = function(flag, alt_flag, meta10216) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta10216 = meta10216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10215.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t10215.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t10215.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t10215.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_10217) {
        var self__ = this;
        var _10217__$1 = this;
        return self__.meta10216;
      };
    }(flag);
    cljs.core.async.t10215.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_10217, meta10216__$1) {
        var self__ = this;
        var _10217__$1 = this;
        return new cljs.core.async.t10215(self__.flag, self__.alt_flag, meta10216__$1);
      };
    }(flag);
    cljs.core.async.t10215.cljs$lang$type = true;
    cljs.core.async.t10215.cljs$lang$ctorStr = "cljs.core.async/t10215";
    cljs.core.async.t10215.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
        return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async/t10215");
      };
    }(flag);
    cljs.core.async.__GT_t10215 = function(flag) {
      return function __GT_t10215(flag__$1, alt_flag__$1, meta10216) {
        return new cljs.core.async.t10215(flag__$1, alt_flag__$1, meta10216);
      };
    }(flag);
  }
  return new cljs.core.async.t10215(flag, alt_flag, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 15, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 146, new cljs.core.Keyword(null, "column", "column", 2078222095), 5, new cljs.core.Keyword(null, "line", "line", 212345235), 141, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/brabadu/projects/prom-stats/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t10221 !== "undefined") {
  } else {
    cljs.core.async.t10221 = function(cb, flag, alt_handler, meta10222) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta10222 = meta10222;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10221.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t10221.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t10221.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t10221.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10223) {
      var self__ = this;
      var _10223__$1 = this;
      return self__.meta10222;
    };
    cljs.core.async.t10221.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10223, meta10222__$1) {
      var self__ = this;
      var _10223__$1 = this;
      return new cljs.core.async.t10221(self__.cb, self__.flag, self__.alt_handler, meta10222__$1);
    };
    cljs.core.async.t10221.cljs$lang$type = true;
    cljs.core.async.t10221.cljs$lang$ctorStr = "cljs.core.async/t10221";
    cljs.core.async.t10221.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
      return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async/t10221");
    };
    cljs.core.async.__GT_t10221 = function __GT_t10221(cb__$1, flag__$1, alt_handler__$1, meta10222) {
      return new cljs.core.async.t10221(cb__$1, flag__$1, alt_handler__$1, meta10222);
    };
  }
  return new cljs.core.async.t10221(cb, flag, alt_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 11, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 154, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 149, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/brabadu/projects/prom-stats/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__10224_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__10224_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__10225_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__10225_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3646__auto__ = wport;
            if (cljs.core.truth_(or__3646__auto__)) {
              return or__3646__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__10226 = i + 1;
          i = G__10226;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3646__auto__ = ret;
  if (cljs.core.truth_(or__3646__auto__)) {
    return or__3646__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3634__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3634__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3634__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__10227) {
    var map__10229 = p__10227;
    var map__10229__$1 = cljs.core.seq_QMARK_.call(null, map__10229) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10229) : map__10229;
    var opts = map__10229__$1;
    throw new Error("alts! used not in (go ...) block");
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__10227 = null;
    if (arguments.length > 1) {
      p__10227 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__10227);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__10230) {
    var ports = cljs.core.first(arglist__10230);
    var p__10227 = cljs.core.rest(arglist__10230);
    return alts_BANG___delegate(ports, p__10227);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6521__auto___10325 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6521__auto___10325) {
      return function() {
        var f__6522__auto__ = function() {
          var switch__6506__auto__ = function(c__6521__auto___10325) {
            return function(state_10301) {
              var state_val_10302 = state_10301[1];
              if (state_val_10302 === 7) {
                var inst_10297 = state_10301[2];
                var state_10301__$1 = state_10301;
                var statearr_10303_10326 = state_10301__$1;
                statearr_10303_10326[2] = inst_10297;
                statearr_10303_10326[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_10302 === 1) {
                  var state_10301__$1 = state_10301;
                  var statearr_10304_10327 = state_10301__$1;
                  statearr_10304_10327[2] = null;
                  statearr_10304_10327[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10302 === 4) {
                    var inst_10280 = state_10301[7];
                    var inst_10280__$1 = state_10301[2];
                    var inst_10281 = inst_10280__$1 == null;
                    var state_10301__$1 = function() {
                      var statearr_10305 = state_10301;
                      statearr_10305[7] = inst_10280__$1;
                      return statearr_10305;
                    }();
                    if (cljs.core.truth_(inst_10281)) {
                      var statearr_10306_10328 = state_10301__$1;
                      statearr_10306_10328[1] = 5;
                    } else {
                      var statearr_10307_10329 = state_10301__$1;
                      statearr_10307_10329[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_10302 === 13) {
                      var state_10301__$1 = state_10301;
                      var statearr_10308_10330 = state_10301__$1;
                      statearr_10308_10330[2] = null;
                      statearr_10308_10330[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_10302 === 6) {
                        var inst_10280 = state_10301[7];
                        var state_10301__$1 = state_10301;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10301__$1, 11, to, inst_10280);
                      } else {
                        if (state_val_10302 === 3) {
                          var inst_10299 = state_10301[2];
                          var state_10301__$1 = state_10301;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10301__$1, inst_10299);
                        } else {
                          if (state_val_10302 === 12) {
                            var state_10301__$1 = state_10301;
                            var statearr_10309_10331 = state_10301__$1;
                            statearr_10309_10331[2] = null;
                            statearr_10309_10331[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_10302 === 2) {
                              var state_10301__$1 = state_10301;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10301__$1, 4, from);
                            } else {
                              if (state_val_10302 === 11) {
                                var inst_10290 = state_10301[2];
                                var state_10301__$1 = state_10301;
                                if (cljs.core.truth_(inst_10290)) {
                                  var statearr_10310_10332 = state_10301__$1;
                                  statearr_10310_10332[1] = 12;
                                } else {
                                  var statearr_10311_10333 = state_10301__$1;
                                  statearr_10311_10333[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_10302 === 9) {
                                  var state_10301__$1 = state_10301;
                                  var statearr_10312_10334 = state_10301__$1;
                                  statearr_10312_10334[2] = null;
                                  statearr_10312_10334[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_10302 === 5) {
                                    var state_10301__$1 = state_10301;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_10313_10335 = state_10301__$1;
                                      statearr_10313_10335[1] = 8;
                                    } else {
                                      var statearr_10314_10336 = state_10301__$1;
                                      statearr_10314_10336[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_10302 === 14) {
                                      var inst_10295 = state_10301[2];
                                      var state_10301__$1 = state_10301;
                                      var statearr_10315_10337 = state_10301__$1;
                                      statearr_10315_10337[2] = inst_10295;
                                      statearr_10315_10337[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_10302 === 10) {
                                        var inst_10287 = state_10301[2];
                                        var state_10301__$1 = state_10301;
                                        var statearr_10316_10338 = state_10301__$1;
                                        statearr_10316_10338[2] = inst_10287;
                                        statearr_10316_10338[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_10302 === 8) {
                                          var inst_10284 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_10301__$1 = state_10301;
                                          var statearr_10317_10339 = state_10301__$1;
                                          statearr_10317_10339[2] = inst_10284;
                                          statearr_10317_10339[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6521__auto___10325);
          return function(switch__6506__auto__, c__6521__auto___10325) {
            return function() {
              var state_machine__6507__auto__ = null;
              var state_machine__6507__auto____0 = function() {
                var statearr_10321 = [null, null, null, null, null, null, null, null];
                statearr_10321[0] = state_machine__6507__auto__;
                statearr_10321[1] = 1;
                return statearr_10321;
              };
              var state_machine__6507__auto____1 = function(state_10301) {
                while (true) {
                  var ret_value__6508__auto__ = function() {
                    try {
                      while (true) {
                        var result__6509__auto__ = switch__6506__auto__.call(null, state_10301);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6509__auto__;
                        }
                        break;
                      }
                    } catch (e10322) {
                      if (e10322 instanceof Object) {
                        var ex__6510__auto__ = e10322;
                        var statearr_10323_10340 = state_10301;
                        statearr_10323_10340[5] = ex__6510__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10301);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e10322;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__10341 = state_10301;
                    state_10301 = G__10341;
                    continue;
                  } else {
                    return ret_value__6508__auto__;
                  }
                  break;
                }
              };
              state_machine__6507__auto__ = function(state_10301) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6507__auto____0.call(this);
                  case 1:
                    return state_machine__6507__auto____1.call(this, state_10301);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
              return state_machine__6507__auto__;
            }();
          }(switch__6506__auto__, c__6521__auto___10325);
        }();
        var state__6523__auto__ = function() {
          var statearr_10324 = f__6522__auto__.call(null);
          statearr_10324[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto___10325;
          return statearr_10324;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
      };
    }(c__6521__auto___10325));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.pipeline_STAR_ = function pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__10525) {
      var vec__10526 = p__10525;
      var v = cljs.core.nth.call(null, vec__10526, 0, null);
      var p = cljs.core.nth.call(null, vec__10526, 1, null);
      var job = vec__10526;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__6521__auto___10708 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__6521__auto___10708, res, vec__10526, v, p, job, jobs, results) {
          return function() {
            var f__6522__auto__ = function() {
              var switch__6506__auto__ = function(c__6521__auto___10708, res, vec__10526, v, p, job, jobs, results) {
                return function(state_10531) {
                  var state_val_10532 = state_10531[1];
                  if (state_val_10532 === 2) {
                    var inst_10528 = state_10531[2];
                    var inst_10529 = cljs.core.async.close_BANG_.call(null, res);
                    var state_10531__$1 = function() {
                      var statearr_10533 = state_10531;
                      statearr_10533[7] = inst_10528;
                      return statearr_10533;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10531__$1, inst_10529);
                  } else {
                    if (state_val_10532 === 1) {
                      var state_10531__$1 = state_10531;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10531__$1, 2, res, v);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__6521__auto___10708, res, vec__10526, v, p, job, jobs, results);
              return function(switch__6506__auto__, c__6521__auto___10708, res, vec__10526, v, p, job, jobs, results) {
                return function() {
                  var state_machine__6507__auto__ = null;
                  var state_machine__6507__auto____0 = function() {
                    var statearr_10537 = [null, null, null, null, null, null, null, null];
                    statearr_10537[0] = state_machine__6507__auto__;
                    statearr_10537[1] = 1;
                    return statearr_10537;
                  };
                  var state_machine__6507__auto____1 = function(state_10531) {
                    while (true) {
                      var ret_value__6508__auto__ = function() {
                        try {
                          while (true) {
                            var result__6509__auto__ = switch__6506__auto__.call(null, state_10531);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__6509__auto__;
                            }
                            break;
                          }
                        } catch (e10538) {
                          if (e10538 instanceof Object) {
                            var ex__6510__auto__ = e10538;
                            var statearr_10539_10709 = state_10531;
                            statearr_10539_10709[5] = ex__6510__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10531);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e10538;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__10710 = state_10531;
                        state_10531 = G__10710;
                        continue;
                      } else {
                        return ret_value__6508__auto__;
                      }
                      break;
                    }
                  };
                  state_machine__6507__auto__ = function(state_10531) {
                    switch(arguments.length) {
                      case 0:
                        return state_machine__6507__auto____0.call(this);
                      case 1:
                        return state_machine__6507__auto____1.call(this, state_10531);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
                  state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
                  return state_machine__6507__auto__;
                }();
              }(switch__6506__auto__, c__6521__auto___10708, res, vec__10526, v, p, job, jobs, results);
            }();
            var state__6523__auto__ = function() {
              var statearr_10540 = f__6522__auto__.call(null);
              statearr_10540[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto___10708;
              return statearr_10540;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
          };
        }(c__6521__auto___10708, res, vec__10526, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__10541) {
      var vec__10542 = p__10541;
      var v = cljs.core.nth.call(null, vec__10542, 0, null);
      var p = cljs.core.nth.call(null, vec__10542, 1, null);
      var job = vec__10542;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__4533__auto___10711 = n;
  var __10712 = 0;
  while (true) {
    if (__10712 < n__4533__auto___10711) {
      var G__10543_10713 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__10543_10713) {
        case "async":
          var c__6521__auto___10715 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__10712, c__6521__auto___10715, G__10543_10713, n__4533__auto___10711, jobs, results, process, async) {
            return function() {
              var f__6522__auto__ = function() {
                var switch__6506__auto__ = function(__10712, c__6521__auto___10715, G__10543_10713, n__4533__auto___10711, jobs, results, process, async) {
                  return function(state_10556) {
                    var state_val_10557 = state_10556[1];
                    if (state_val_10557 === 7) {
                      var inst_10552 = state_10556[2];
                      var state_10556__$1 = state_10556;
                      var statearr_10558_10716 = state_10556__$1;
                      statearr_10558_10716[2] = inst_10552;
                      statearr_10558_10716[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_10557 === 6) {
                        var state_10556__$1 = state_10556;
                        var statearr_10559_10717 = state_10556__$1;
                        statearr_10559_10717[2] = null;
                        statearr_10559_10717[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10557 === 5) {
                          var state_10556__$1 = state_10556;
                          var statearr_10560_10718 = state_10556__$1;
                          statearr_10560_10718[2] = null;
                          statearr_10560_10718[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_10557 === 4) {
                            var inst_10546 = state_10556[2];
                            var inst_10547 = async.call(null, inst_10546);
                            var state_10556__$1 = state_10556;
                            if (cljs.core.truth_(inst_10547)) {
                              var statearr_10561_10719 = state_10556__$1;
                              statearr_10561_10719[1] = 5;
                            } else {
                              var statearr_10562_10720 = state_10556__$1;
                              statearr_10562_10720[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_10557 === 3) {
                              var inst_10554 = state_10556[2];
                              var state_10556__$1 = state_10556;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10556__$1, inst_10554);
                            } else {
                              if (state_val_10557 === 2) {
                                var state_10556__$1 = state_10556;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10556__$1, 4, jobs);
                              } else {
                                if (state_val_10557 === 1) {
                                  var state_10556__$1 = state_10556;
                                  var statearr_10563_10721 = state_10556__$1;
                                  statearr_10563_10721[2] = null;
                                  statearr_10563_10721[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__10712, c__6521__auto___10715, G__10543_10713, n__4533__auto___10711, jobs, results, process, async);
                return function(__10712, switch__6506__auto__, c__6521__auto___10715, G__10543_10713, n__4533__auto___10711, jobs, results, process, async) {
                  return function() {
                    var state_machine__6507__auto__ = null;
                    var state_machine__6507__auto____0 = function() {
                      var statearr_10567 = [null, null, null, null, null, null, null];
                      statearr_10567[0] = state_machine__6507__auto__;
                      statearr_10567[1] = 1;
                      return statearr_10567;
                    };
                    var state_machine__6507__auto____1 = function(state_10556) {
                      while (true) {
                        var ret_value__6508__auto__ = function() {
                          try {
                            while (true) {
                              var result__6509__auto__ = switch__6506__auto__.call(null, state_10556);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6509__auto__;
                              }
                              break;
                            }
                          } catch (e10568) {
                            if (e10568 instanceof Object) {
                              var ex__6510__auto__ = e10568;
                              var statearr_10569_10722 = state_10556;
                              statearr_10569_10722[5] = ex__6510__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10556);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e10568;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__10723 = state_10556;
                          state_10556 = G__10723;
                          continue;
                        } else {
                          return ret_value__6508__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6507__auto__ = function(state_10556) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6507__auto____0.call(this);
                        case 1:
                          return state_machine__6507__auto____1.call(this, state_10556);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
                    state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
                    return state_machine__6507__auto__;
                  }();
                }(__10712, switch__6506__auto__, c__6521__auto___10715, G__10543_10713, n__4533__auto___10711, jobs, results, process, async);
              }();
              var state__6523__auto__ = function() {
                var statearr_10570 = f__6522__auto__.call(null);
                statearr_10570[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto___10715;
                return statearr_10570;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
            };
          }(__10712, c__6521__auto___10715, G__10543_10713, n__4533__auto___10711, jobs, results, process, async));
          break;
        case "compute":
          var c__6521__auto___10724 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__10712, c__6521__auto___10724, G__10543_10713, n__4533__auto___10711, jobs, results, process, async) {
            return function() {
              var f__6522__auto__ = function() {
                var switch__6506__auto__ = function(__10712, c__6521__auto___10724, G__10543_10713, n__4533__auto___10711, jobs, results, process, async) {
                  return function(state_10583) {
                    var state_val_10584 = state_10583[1];
                    if (state_val_10584 === 7) {
                      var inst_10579 = state_10583[2];
                      var state_10583__$1 = state_10583;
                      var statearr_10585_10725 = state_10583__$1;
                      statearr_10585_10725[2] = inst_10579;
                      statearr_10585_10725[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_10584 === 6) {
                        var state_10583__$1 = state_10583;
                        var statearr_10586_10726 = state_10583__$1;
                        statearr_10586_10726[2] = null;
                        statearr_10586_10726[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10584 === 5) {
                          var state_10583__$1 = state_10583;
                          var statearr_10587_10727 = state_10583__$1;
                          statearr_10587_10727[2] = null;
                          statearr_10587_10727[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_10584 === 4) {
                            var inst_10573 = state_10583[2];
                            var inst_10574 = process.call(null, inst_10573);
                            var state_10583__$1 = state_10583;
                            if (cljs.core.truth_(inst_10574)) {
                              var statearr_10588_10728 = state_10583__$1;
                              statearr_10588_10728[1] = 5;
                            } else {
                              var statearr_10589_10729 = state_10583__$1;
                              statearr_10589_10729[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_10584 === 3) {
                              var inst_10581 = state_10583[2];
                              var state_10583__$1 = state_10583;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10583__$1, inst_10581);
                            } else {
                              if (state_val_10584 === 2) {
                                var state_10583__$1 = state_10583;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10583__$1, 4, jobs);
                              } else {
                                if (state_val_10584 === 1) {
                                  var state_10583__$1 = state_10583;
                                  var statearr_10590_10730 = state_10583__$1;
                                  statearr_10590_10730[2] = null;
                                  statearr_10590_10730[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__10712, c__6521__auto___10724, G__10543_10713, n__4533__auto___10711, jobs, results, process, async);
                return function(__10712, switch__6506__auto__, c__6521__auto___10724, G__10543_10713, n__4533__auto___10711, jobs, results, process, async) {
                  return function() {
                    var state_machine__6507__auto__ = null;
                    var state_machine__6507__auto____0 = function() {
                      var statearr_10594 = [null, null, null, null, null, null, null];
                      statearr_10594[0] = state_machine__6507__auto__;
                      statearr_10594[1] = 1;
                      return statearr_10594;
                    };
                    var state_machine__6507__auto____1 = function(state_10583) {
                      while (true) {
                        var ret_value__6508__auto__ = function() {
                          try {
                            while (true) {
                              var result__6509__auto__ = switch__6506__auto__.call(null, state_10583);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6509__auto__;
                              }
                              break;
                            }
                          } catch (e10595) {
                            if (e10595 instanceof Object) {
                              var ex__6510__auto__ = e10595;
                              var statearr_10596_10731 = state_10583;
                              statearr_10596_10731[5] = ex__6510__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10583);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e10595;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__10732 = state_10583;
                          state_10583 = G__10732;
                          continue;
                        } else {
                          return ret_value__6508__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6507__auto__ = function(state_10583) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6507__auto____0.call(this);
                        case 1:
                          return state_machine__6507__auto____1.call(this, state_10583);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
                    state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
                    return state_machine__6507__auto__;
                  }();
                }(__10712, switch__6506__auto__, c__6521__auto___10724, G__10543_10713, n__4533__auto___10711, jobs, results, process, async);
              }();
              var state__6523__auto__ = function() {
                var statearr_10597 = f__6522__auto__.call(null);
                statearr_10597[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto___10724;
                return statearr_10597;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
            };
          }(__10712, c__6521__auto___10724, G__10543_10713, n__4533__auto___10711, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__10733 = __10712 + 1;
      __10712 = G__10733;
      continue;
    } else {
    }
    break;
  }
  var c__6521__auto___10734 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6521__auto___10734, jobs, results, process, async) {
    return function() {
      var f__6522__auto__ = function() {
        var switch__6506__auto__ = function(c__6521__auto___10734, jobs, results, process, async) {
          return function(state_10619) {
            var state_val_10620 = state_10619[1];
            if (state_val_10620 === 9) {
              var inst_10612 = state_10619[2];
              var state_10619__$1 = function() {
                var statearr_10621 = state_10619;
                statearr_10621[7] = inst_10612;
                return statearr_10621;
              }();
              var statearr_10622_10735 = state_10619__$1;
              statearr_10622_10735[2] = null;
              statearr_10622_10735[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_10620 === 8) {
                var inst_10605 = state_10619[8];
                var inst_10610 = state_10619[2];
                var state_10619__$1 = function() {
                  var statearr_10623 = state_10619;
                  statearr_10623[9] = inst_10610;
                  return statearr_10623;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10619__$1, 9, results, inst_10605);
              } else {
                if (state_val_10620 === 7) {
                  var inst_10615 = state_10619[2];
                  var state_10619__$1 = state_10619;
                  var statearr_10624_10736 = state_10619__$1;
                  statearr_10624_10736[2] = inst_10615;
                  statearr_10624_10736[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10620 === 6) {
                    var inst_10600 = state_10619[10];
                    var inst_10605 = state_10619[8];
                    var inst_10605__$1 = cljs.core.async.chan.call(null, 1);
                    var inst_10606 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_10607 = [inst_10600, inst_10605__$1];
                    var inst_10608 = new cljs.core.PersistentVector(null, 2, 5, inst_10606, inst_10607, null);
                    var state_10619__$1 = function() {
                      var statearr_10625 = state_10619;
                      statearr_10625[8] = inst_10605__$1;
                      return statearr_10625;
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10619__$1, 8, jobs, inst_10608);
                  } else {
                    if (state_val_10620 === 5) {
                      var inst_10603 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_10619__$1 = state_10619;
                      var statearr_10626_10737 = state_10619__$1;
                      statearr_10626_10737[2] = inst_10603;
                      statearr_10626_10737[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_10620 === 4) {
                        var inst_10600 = state_10619[10];
                        var inst_10600__$1 = state_10619[2];
                        var inst_10601 = inst_10600__$1 == null;
                        var state_10619__$1 = function() {
                          var statearr_10627 = state_10619;
                          statearr_10627[10] = inst_10600__$1;
                          return statearr_10627;
                        }();
                        if (cljs.core.truth_(inst_10601)) {
                          var statearr_10628_10738 = state_10619__$1;
                          statearr_10628_10738[1] = 5;
                        } else {
                          var statearr_10629_10739 = state_10619__$1;
                          statearr_10629_10739[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10620 === 3) {
                          var inst_10617 = state_10619[2];
                          var state_10619__$1 = state_10619;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10619__$1, inst_10617);
                        } else {
                          if (state_val_10620 === 2) {
                            var state_10619__$1 = state_10619;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10619__$1, 4, from);
                          } else {
                            if (state_val_10620 === 1) {
                              var state_10619__$1 = state_10619;
                              var statearr_10630_10740 = state_10619__$1;
                              statearr_10630_10740[2] = null;
                              statearr_10630_10740[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6521__auto___10734, jobs, results, process, async);
        return function(switch__6506__auto__, c__6521__auto___10734, jobs, results, process, async) {
          return function() {
            var state_machine__6507__auto__ = null;
            var state_machine__6507__auto____0 = function() {
              var statearr_10634 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_10634[0] = state_machine__6507__auto__;
              statearr_10634[1] = 1;
              return statearr_10634;
            };
            var state_machine__6507__auto____1 = function(state_10619) {
              while (true) {
                var ret_value__6508__auto__ = function() {
                  try {
                    while (true) {
                      var result__6509__auto__ = switch__6506__auto__.call(null, state_10619);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6509__auto__;
                      }
                      break;
                    }
                  } catch (e10635) {
                    if (e10635 instanceof Object) {
                      var ex__6510__auto__ = e10635;
                      var statearr_10636_10741 = state_10619;
                      statearr_10636_10741[5] = ex__6510__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10619);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e10635;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__10742 = state_10619;
                  state_10619 = G__10742;
                  continue;
                } else {
                  return ret_value__6508__auto__;
                }
                break;
              }
            };
            state_machine__6507__auto__ = function(state_10619) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6507__auto____0.call(this);
                case 1:
                  return state_machine__6507__auto____1.call(this, state_10619);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
            state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
            return state_machine__6507__auto__;
          }();
        }(switch__6506__auto__, c__6521__auto___10734, jobs, results, process, async);
      }();
      var state__6523__auto__ = function() {
        var statearr_10637 = f__6522__auto__.call(null);
        statearr_10637[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto___10734;
        return statearr_10637;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
    };
  }(c__6521__auto___10734, jobs, results, process, async));
  var c__6521__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6521__auto__, jobs, results, process, async) {
    return function() {
      var f__6522__auto__ = function() {
        var switch__6506__auto__ = function(c__6521__auto__, jobs, results, process, async) {
          return function(state_10675) {
            var state_val_10676 = state_10675[1];
            if (state_val_10676 === 7) {
              var inst_10671 = state_10675[2];
              var state_10675__$1 = state_10675;
              var statearr_10677_10743 = state_10675__$1;
              statearr_10677_10743[2] = inst_10671;
              statearr_10677_10743[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_10676 === 20) {
                var state_10675__$1 = state_10675;
                var statearr_10678_10744 = state_10675__$1;
                statearr_10678_10744[2] = null;
                statearr_10678_10744[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_10676 === 1) {
                  var state_10675__$1 = state_10675;
                  var statearr_10679_10745 = state_10675__$1;
                  statearr_10679_10745[2] = null;
                  statearr_10679_10745[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10676 === 4) {
                    var inst_10640 = state_10675[7];
                    var inst_10640__$1 = state_10675[2];
                    var inst_10641 = inst_10640__$1 == null;
                    var state_10675__$1 = function() {
                      var statearr_10680 = state_10675;
                      statearr_10680[7] = inst_10640__$1;
                      return statearr_10680;
                    }();
                    if (cljs.core.truth_(inst_10641)) {
                      var statearr_10681_10746 = state_10675__$1;
                      statearr_10681_10746[1] = 5;
                    } else {
                      var statearr_10682_10747 = state_10675__$1;
                      statearr_10682_10747[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_10676 === 15) {
                      var inst_10653 = state_10675[8];
                      var state_10675__$1 = state_10675;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10675__$1, 18, to, inst_10653);
                    } else {
                      if (state_val_10676 === 21) {
                        var inst_10666 = state_10675[2];
                        var state_10675__$1 = state_10675;
                        var statearr_10683_10748 = state_10675__$1;
                        statearr_10683_10748[2] = inst_10666;
                        statearr_10683_10748[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10676 === 13) {
                          var inst_10668 = state_10675[2];
                          var state_10675__$1 = function() {
                            var statearr_10684 = state_10675;
                            statearr_10684[9] = inst_10668;
                            return statearr_10684;
                          }();
                          var statearr_10685_10749 = state_10675__$1;
                          statearr_10685_10749[2] = null;
                          statearr_10685_10749[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_10676 === 6) {
                            var inst_10640 = state_10675[7];
                            var state_10675__$1 = state_10675;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10675__$1, 11, inst_10640);
                          } else {
                            if (state_val_10676 === 17) {
                              var inst_10661 = state_10675[2];
                              var state_10675__$1 = state_10675;
                              if (cljs.core.truth_(inst_10661)) {
                                var statearr_10686_10750 = state_10675__$1;
                                statearr_10686_10750[1] = 19;
                              } else {
                                var statearr_10687_10751 = state_10675__$1;
                                statearr_10687_10751[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_10676 === 3) {
                                var inst_10673 = state_10675[2];
                                var state_10675__$1 = state_10675;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10675__$1, inst_10673);
                              } else {
                                if (state_val_10676 === 12) {
                                  var inst_10650 = state_10675[10];
                                  var state_10675__$1 = state_10675;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10675__$1, 14, inst_10650);
                                } else {
                                  if (state_val_10676 === 2) {
                                    var state_10675__$1 = state_10675;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10675__$1, 4, results);
                                  } else {
                                    if (state_val_10676 === 19) {
                                      var state_10675__$1 = state_10675;
                                      var statearr_10688_10752 = state_10675__$1;
                                      statearr_10688_10752[2] = null;
                                      statearr_10688_10752[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_10676 === 11) {
                                        var inst_10650 = state_10675[2];
                                        var state_10675__$1 = function() {
                                          var statearr_10689 = state_10675;
                                          statearr_10689[10] = inst_10650;
                                          return statearr_10689;
                                        }();
                                        var statearr_10690_10753 = state_10675__$1;
                                        statearr_10690_10753[2] = null;
                                        statearr_10690_10753[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_10676 === 9) {
                                          var state_10675__$1 = state_10675;
                                          var statearr_10691_10754 = state_10675__$1;
                                          statearr_10691_10754[2] = null;
                                          statearr_10691_10754[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_10676 === 5) {
                                            var state_10675__$1 = state_10675;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_10692_10755 = state_10675__$1;
                                              statearr_10692_10755[1] = 8;
                                            } else {
                                              var statearr_10693_10756 = state_10675__$1;
                                              statearr_10693_10756[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_10676 === 14) {
                                              var inst_10655 = state_10675[11];
                                              var inst_10653 = state_10675[8];
                                              var inst_10653__$1 = state_10675[2];
                                              var inst_10654 = inst_10653__$1 == null;
                                              var inst_10655__$1 = cljs.core.not.call(null, inst_10654);
                                              var state_10675__$1 = function() {
                                                var statearr_10694 = state_10675;
                                                statearr_10694[11] = inst_10655__$1;
                                                statearr_10694[8] = inst_10653__$1;
                                                return statearr_10694;
                                              }();
                                              if (inst_10655__$1) {
                                                var statearr_10695_10757 = state_10675__$1;
                                                statearr_10695_10757[1] = 15;
                                              } else {
                                                var statearr_10696_10758 = state_10675__$1;
                                                statearr_10696_10758[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_10676 === 16) {
                                                var inst_10655 = state_10675[11];
                                                var state_10675__$1 = state_10675;
                                                var statearr_10697_10759 = state_10675__$1;
                                                statearr_10697_10759[2] = inst_10655;
                                                statearr_10697_10759[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_10676 === 10) {
                                                  var inst_10647 = state_10675[2];
                                                  var state_10675__$1 = state_10675;
                                                  var statearr_10698_10760 = state_10675__$1;
                                                  statearr_10698_10760[2] = inst_10647;
                                                  statearr_10698_10760[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_10676 === 18) {
                                                    var inst_10658 = state_10675[2];
                                                    var state_10675__$1 = state_10675;
                                                    var statearr_10699_10761 = state_10675__$1;
                                                    statearr_10699_10761[2] = inst_10658;
                                                    statearr_10699_10761[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_10676 === 8) {
                                                      var inst_10644 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_10675__$1 = state_10675;
                                                      var statearr_10700_10762 = state_10675__$1;
                                                      statearr_10700_10762[2] = inst_10644;
                                                      statearr_10700_10762[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6521__auto__, jobs, results, process, async);
        return function(switch__6506__auto__, c__6521__auto__, jobs, results, process, async) {
          return function() {
            var state_machine__6507__auto__ = null;
            var state_machine__6507__auto____0 = function() {
              var statearr_10704 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_10704[0] = state_machine__6507__auto__;
              statearr_10704[1] = 1;
              return statearr_10704;
            };
            var state_machine__6507__auto____1 = function(state_10675) {
              while (true) {
                var ret_value__6508__auto__ = function() {
                  try {
                    while (true) {
                      var result__6509__auto__ = switch__6506__auto__.call(null, state_10675);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6509__auto__;
                      }
                      break;
                    }
                  } catch (e10705) {
                    if (e10705 instanceof Object) {
                      var ex__6510__auto__ = e10705;
                      var statearr_10706_10763 = state_10675;
                      statearr_10706_10763[5] = ex__6510__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10675);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e10705;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__10764 = state_10675;
                  state_10675 = G__10764;
                  continue;
                } else {
                  return ret_value__6508__auto__;
                }
                break;
              }
            };
            state_machine__6507__auto__ = function(state_10675) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6507__auto____0.call(this);
                case 1:
                  return state_machine__6507__auto____1.call(this, state_10675);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
            state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
            return state_machine__6507__auto__;
          }();
        }(switch__6506__auto__, c__6521__auto__, jobs, results, process, async);
      }();
      var state__6523__auto__ = function() {
        var statearr_10707 = f__6522__auto__.call(null);
        statearr_10707[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto__;
        return statearr_10707;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
    };
  }(c__6521__auto__, jobs, results, process, async));
  return c__6521__auto__;
};
cljs.core.async.pipeline_async = function() {
  var pipeline_async = null;
  var pipeline_async__4 = function(n, to, af, from) {
    return pipeline_async.call(null, n, to, af, from, true);
  };
  var pipeline_async__5 = function(n, to, af, from, close_QMARK_) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
  };
  pipeline_async = function(n, to, af, from, close_QMARK_) {
    switch(arguments.length) {
      case 4:
        return pipeline_async__4.call(this, n, to, af, from);
      case 5:
        return pipeline_async__5.call(this, n, to, af, from, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline_async.cljs$core$IFn$_invoke$arity$4 = pipeline_async__4;
  pipeline_async.cljs$core$IFn$_invoke$arity$5 = pipeline_async__5;
  return pipeline_async;
}();
cljs.core.async.pipeline = function() {
  var pipeline = null;
  var pipeline__4 = function(n, to, xf, from) {
    return pipeline.call(null, n, to, xf, from, true);
  };
  var pipeline__5 = function(n, to, xf, from, close_QMARK_) {
    return pipeline.call(null, n, to, xf, from, close_QMARK_, null);
  };
  var pipeline__6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
  };
  pipeline = function(n, to, xf, from, close_QMARK_, ex_handler) {
    switch(arguments.length) {
      case 4:
        return pipeline__4.call(this, n, to, xf, from);
      case 5:
        return pipeline__5.call(this, n, to, xf, from, close_QMARK_);
      case 6:
        return pipeline__6.call(this, n, to, xf, from, close_QMARK_, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline.cljs$core$IFn$_invoke$arity$4 = pipeline__4;
  pipeline.cljs$core$IFn$_invoke$arity$5 = pipeline__5;
  pipeline.cljs$core$IFn$_invoke$arity$6 = pipeline__6;
  return pipeline;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6521__auto___10865 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6521__auto___10865, tc, fc) {
      return function() {
        var f__6522__auto__ = function() {
          var switch__6506__auto__ = function(c__6521__auto___10865, tc, fc) {
            return function(state_10840) {
              var state_val_10841 = state_10840[1];
              if (state_val_10841 === 7) {
                var inst_10836 = state_10840[2];
                var state_10840__$1 = state_10840;
                var statearr_10842_10866 = state_10840__$1;
                statearr_10842_10866[2] = inst_10836;
                statearr_10842_10866[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_10841 === 1) {
                  var state_10840__$1 = state_10840;
                  var statearr_10843_10867 = state_10840__$1;
                  statearr_10843_10867[2] = null;
                  statearr_10843_10867[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10841 === 4) {
                    var inst_10817 = state_10840[7];
                    var inst_10817__$1 = state_10840[2];
                    var inst_10818 = inst_10817__$1 == null;
                    var state_10840__$1 = function() {
                      var statearr_10844 = state_10840;
                      statearr_10844[7] = inst_10817__$1;
                      return statearr_10844;
                    }();
                    if (cljs.core.truth_(inst_10818)) {
                      var statearr_10845_10868 = state_10840__$1;
                      statearr_10845_10868[1] = 5;
                    } else {
                      var statearr_10846_10869 = state_10840__$1;
                      statearr_10846_10869[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_10841 === 13) {
                      var state_10840__$1 = state_10840;
                      var statearr_10847_10870 = state_10840__$1;
                      statearr_10847_10870[2] = null;
                      statearr_10847_10870[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_10841 === 6) {
                        var inst_10817 = state_10840[7];
                        var inst_10823 = p.call(null, inst_10817);
                        var state_10840__$1 = state_10840;
                        if (cljs.core.truth_(inst_10823)) {
                          var statearr_10848_10871 = state_10840__$1;
                          statearr_10848_10871[1] = 9;
                        } else {
                          var statearr_10849_10872 = state_10840__$1;
                          statearr_10849_10872[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10841 === 3) {
                          var inst_10838 = state_10840[2];
                          var state_10840__$1 = state_10840;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10840__$1, inst_10838);
                        } else {
                          if (state_val_10841 === 12) {
                            var state_10840__$1 = state_10840;
                            var statearr_10850_10873 = state_10840__$1;
                            statearr_10850_10873[2] = null;
                            statearr_10850_10873[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_10841 === 2) {
                              var state_10840__$1 = state_10840;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10840__$1, 4, ch);
                            } else {
                              if (state_val_10841 === 11) {
                                var inst_10817 = state_10840[7];
                                var inst_10827 = state_10840[2];
                                var state_10840__$1 = state_10840;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10840__$1, 8, inst_10827, inst_10817);
                              } else {
                                if (state_val_10841 === 9) {
                                  var state_10840__$1 = state_10840;
                                  var statearr_10851_10874 = state_10840__$1;
                                  statearr_10851_10874[2] = tc;
                                  statearr_10851_10874[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_10841 === 5) {
                                    var inst_10820 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_10821 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_10840__$1 = function() {
                                      var statearr_10852 = state_10840;
                                      statearr_10852[8] = inst_10820;
                                      return statearr_10852;
                                    }();
                                    var statearr_10853_10875 = state_10840__$1;
                                    statearr_10853_10875[2] = inst_10821;
                                    statearr_10853_10875[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_10841 === 14) {
                                      var inst_10834 = state_10840[2];
                                      var state_10840__$1 = state_10840;
                                      var statearr_10854_10876 = state_10840__$1;
                                      statearr_10854_10876[2] = inst_10834;
                                      statearr_10854_10876[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_10841 === 10) {
                                        var state_10840__$1 = state_10840;
                                        var statearr_10855_10877 = state_10840__$1;
                                        statearr_10855_10877[2] = fc;
                                        statearr_10855_10877[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_10841 === 8) {
                                          var inst_10829 = state_10840[2];
                                          var state_10840__$1 = state_10840;
                                          if (cljs.core.truth_(inst_10829)) {
                                            var statearr_10856_10878 = state_10840__$1;
                                            statearr_10856_10878[1] = 12;
                                          } else {
                                            var statearr_10857_10879 = state_10840__$1;
                                            statearr_10857_10879[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6521__auto___10865, tc, fc);
          return function(switch__6506__auto__, c__6521__auto___10865, tc, fc) {
            return function() {
              var state_machine__6507__auto__ = null;
              var state_machine__6507__auto____0 = function() {
                var statearr_10861 = [null, null, null, null, null, null, null, null, null];
                statearr_10861[0] = state_machine__6507__auto__;
                statearr_10861[1] = 1;
                return statearr_10861;
              };
              var state_machine__6507__auto____1 = function(state_10840) {
                while (true) {
                  var ret_value__6508__auto__ = function() {
                    try {
                      while (true) {
                        var result__6509__auto__ = switch__6506__auto__.call(null, state_10840);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6509__auto__;
                        }
                        break;
                      }
                    } catch (e10862) {
                      if (e10862 instanceof Object) {
                        var ex__6510__auto__ = e10862;
                        var statearr_10863_10880 = state_10840;
                        statearr_10863_10880[5] = ex__6510__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10840);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e10862;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__10881 = state_10840;
                    state_10840 = G__10881;
                    continue;
                  } else {
                    return ret_value__6508__auto__;
                  }
                  break;
                }
              };
              state_machine__6507__auto__ = function(state_10840) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6507__auto____0.call(this);
                  case 1:
                    return state_machine__6507__auto____1.call(this, state_10840);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
              return state_machine__6507__auto__;
            }();
          }(switch__6506__auto__, c__6521__auto___10865, tc, fc);
        }();
        var state__6523__auto__ = function() {
          var statearr_10864 = f__6522__auto__.call(null);
          statearr_10864[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto___10865;
          return statearr_10864;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
      };
    }(c__6521__auto___10865, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6521__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6521__auto__) {
    return function() {
      var f__6522__auto__ = function() {
        var switch__6506__auto__ = function(c__6521__auto__) {
          return function(state_10928) {
            var state_val_10929 = state_10928[1];
            if (state_val_10929 === 7) {
              var inst_10924 = state_10928[2];
              var state_10928__$1 = state_10928;
              var statearr_10930_10946 = state_10928__$1;
              statearr_10930_10946[2] = inst_10924;
              statearr_10930_10946[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_10929 === 6) {
                var inst_10917 = state_10928[7];
                var inst_10914 = state_10928[8];
                var inst_10921 = f.call(null, inst_10914, inst_10917);
                var inst_10914__$1 = inst_10921;
                var state_10928__$1 = function() {
                  var statearr_10931 = state_10928;
                  statearr_10931[8] = inst_10914__$1;
                  return statearr_10931;
                }();
                var statearr_10932_10947 = state_10928__$1;
                statearr_10932_10947[2] = null;
                statearr_10932_10947[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_10929 === 5) {
                  var inst_10914 = state_10928[8];
                  var state_10928__$1 = state_10928;
                  var statearr_10933_10948 = state_10928__$1;
                  statearr_10933_10948[2] = inst_10914;
                  statearr_10933_10948[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10929 === 4) {
                    var inst_10917 = state_10928[7];
                    var inst_10917__$1 = state_10928[2];
                    var inst_10918 = inst_10917__$1 == null;
                    var state_10928__$1 = function() {
                      var statearr_10934 = state_10928;
                      statearr_10934[7] = inst_10917__$1;
                      return statearr_10934;
                    }();
                    if (cljs.core.truth_(inst_10918)) {
                      var statearr_10935_10949 = state_10928__$1;
                      statearr_10935_10949[1] = 5;
                    } else {
                      var statearr_10936_10950 = state_10928__$1;
                      statearr_10936_10950[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_10929 === 3) {
                      var inst_10926 = state_10928[2];
                      var state_10928__$1 = state_10928;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10928__$1, inst_10926);
                    } else {
                      if (state_val_10929 === 2) {
                        var state_10928__$1 = state_10928;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10928__$1, 4, ch);
                      } else {
                        if (state_val_10929 === 1) {
                          var inst_10914 = init;
                          var state_10928__$1 = function() {
                            var statearr_10937 = state_10928;
                            statearr_10937[8] = inst_10914;
                            return statearr_10937;
                          }();
                          var statearr_10938_10951 = state_10928__$1;
                          statearr_10938_10951[2] = null;
                          statearr_10938_10951[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6521__auto__);
        return function(switch__6506__auto__, c__6521__auto__) {
          return function() {
            var state_machine__6507__auto__ = null;
            var state_machine__6507__auto____0 = function() {
              var statearr_10942 = [null, null, null, null, null, null, null, null, null];
              statearr_10942[0] = state_machine__6507__auto__;
              statearr_10942[1] = 1;
              return statearr_10942;
            };
            var state_machine__6507__auto____1 = function(state_10928) {
              while (true) {
                var ret_value__6508__auto__ = function() {
                  try {
                    while (true) {
                      var result__6509__auto__ = switch__6506__auto__.call(null, state_10928);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6509__auto__;
                      }
                      break;
                    }
                  } catch (e10943) {
                    if (e10943 instanceof Object) {
                      var ex__6510__auto__ = e10943;
                      var statearr_10944_10952 = state_10928;
                      statearr_10944_10952[5] = ex__6510__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10928);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e10943;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__10953 = state_10928;
                  state_10928 = G__10953;
                  continue;
                } else {
                  return ret_value__6508__auto__;
                }
                break;
              }
            };
            state_machine__6507__auto__ = function(state_10928) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6507__auto____0.call(this);
                case 1:
                  return state_machine__6507__auto____1.call(this, state_10928);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
            state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
            return state_machine__6507__auto__;
          }();
        }(switch__6506__auto__, c__6521__auto__);
      }();
      var state__6523__auto__ = function() {
        var statearr_10945 = f__6522__auto__.call(null);
        statearr_10945[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto__;
        return statearr_10945;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
    };
  }(c__6521__auto__));
  return c__6521__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6521__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6521__auto__) {
      return function() {
        var f__6522__auto__ = function() {
          var switch__6506__auto__ = function(c__6521__auto__) {
            return function(state_11027) {
              var state_val_11028 = state_11027[1];
              if (state_val_11028 === 7) {
                var inst_11009 = state_11027[2];
                var state_11027__$1 = state_11027;
                var statearr_11029_11052 = state_11027__$1;
                statearr_11029_11052[2] = inst_11009;
                statearr_11029_11052[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11028 === 1) {
                  var inst_11003 = cljs.core.seq.call(null, coll);
                  var inst_11004 = inst_11003;
                  var state_11027__$1 = function() {
                    var statearr_11030 = state_11027;
                    statearr_11030[7] = inst_11004;
                    return statearr_11030;
                  }();
                  var statearr_11031_11053 = state_11027__$1;
                  statearr_11031_11053[2] = null;
                  statearr_11031_11053[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11028 === 4) {
                    var inst_11004 = state_11027[7];
                    var inst_11007 = cljs.core.first.call(null, inst_11004);
                    var state_11027__$1 = state_11027;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11027__$1, 7, ch, inst_11007);
                  } else {
                    if (state_val_11028 === 13) {
                      var inst_11021 = state_11027[2];
                      var state_11027__$1 = state_11027;
                      var statearr_11032_11054 = state_11027__$1;
                      statearr_11032_11054[2] = inst_11021;
                      statearr_11032_11054[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11028 === 6) {
                        var inst_11012 = state_11027[2];
                        var state_11027__$1 = state_11027;
                        if (cljs.core.truth_(inst_11012)) {
                          var statearr_11033_11055 = state_11027__$1;
                          statearr_11033_11055[1] = 8;
                        } else {
                          var statearr_11034_11056 = state_11027__$1;
                          statearr_11034_11056[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11028 === 3) {
                          var inst_11025 = state_11027[2];
                          var state_11027__$1 = state_11027;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11027__$1, inst_11025);
                        } else {
                          if (state_val_11028 === 12) {
                            var state_11027__$1 = state_11027;
                            var statearr_11035_11057 = state_11027__$1;
                            statearr_11035_11057[2] = null;
                            statearr_11035_11057[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_11028 === 2) {
                              var inst_11004 = state_11027[7];
                              var state_11027__$1 = state_11027;
                              if (cljs.core.truth_(inst_11004)) {
                                var statearr_11036_11058 = state_11027__$1;
                                statearr_11036_11058[1] = 4;
                              } else {
                                var statearr_11037_11059 = state_11027__$1;
                                statearr_11037_11059[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_11028 === 11) {
                                var inst_11018 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_11027__$1 = state_11027;
                                var statearr_11038_11060 = state_11027__$1;
                                statearr_11038_11060[2] = inst_11018;
                                statearr_11038_11060[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_11028 === 9) {
                                  var state_11027__$1 = state_11027;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_11039_11061 = state_11027__$1;
                                    statearr_11039_11061[1] = 11;
                                  } else {
                                    var statearr_11040_11062 = state_11027__$1;
                                    statearr_11040_11062[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_11028 === 5) {
                                    var inst_11004 = state_11027[7];
                                    var state_11027__$1 = state_11027;
                                    var statearr_11041_11063 = state_11027__$1;
                                    statearr_11041_11063[2] = inst_11004;
                                    statearr_11041_11063[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_11028 === 10) {
                                      var inst_11023 = state_11027[2];
                                      var state_11027__$1 = state_11027;
                                      var statearr_11042_11064 = state_11027__$1;
                                      statearr_11042_11064[2] = inst_11023;
                                      statearr_11042_11064[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_11028 === 8) {
                                        var inst_11004 = state_11027[7];
                                        var inst_11014 = cljs.core.next.call(null, inst_11004);
                                        var inst_11004__$1 = inst_11014;
                                        var state_11027__$1 = function() {
                                          var statearr_11043 = state_11027;
                                          statearr_11043[7] = inst_11004__$1;
                                          return statearr_11043;
                                        }();
                                        var statearr_11044_11065 = state_11027__$1;
                                        statearr_11044_11065[2] = null;
                                        statearr_11044_11065[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6521__auto__);
          return function(switch__6506__auto__, c__6521__auto__) {
            return function() {
              var state_machine__6507__auto__ = null;
              var state_machine__6507__auto____0 = function() {
                var statearr_11048 = [null, null, null, null, null, null, null, null];
                statearr_11048[0] = state_machine__6507__auto__;
                statearr_11048[1] = 1;
                return statearr_11048;
              };
              var state_machine__6507__auto____1 = function(state_11027) {
                while (true) {
                  var ret_value__6508__auto__ = function() {
                    try {
                      while (true) {
                        var result__6509__auto__ = switch__6506__auto__.call(null, state_11027);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6509__auto__;
                        }
                        break;
                      }
                    } catch (e11049) {
                      if (e11049 instanceof Object) {
                        var ex__6510__auto__ = e11049;
                        var statearr_11050_11066 = state_11027;
                        statearr_11050_11066[5] = ex__6510__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11027);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e11049;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__11067 = state_11027;
                    state_11027 = G__11067;
                    continue;
                  } else {
                    return ret_value__6508__auto__;
                  }
                  break;
                }
              };
              state_machine__6507__auto__ = function(state_11027) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6507__auto____0.call(this);
                  case 1:
                    return state_machine__6507__auto____1.call(this, state_11027);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
              return state_machine__6507__auto__;
            }();
          }(switch__6506__auto__, c__6521__auto__);
        }();
        var state__6523__auto__ = function() {
          var statearr_11051 = f__6522__auto__.call(null);
          statearr_11051[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto__;
          return statearr_11051;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
      };
    }(c__6521__auto__));
    return c__6521__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj11069 = {};
  return obj11069;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3634__auto__ = _;
    if (and__3634__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4290__auto__ = _ == null ? null : _;
    return function() {
      var or__3646__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj11071 = {};
  return obj11071;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3634__auto__ = m;
    if (and__3634__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4290__auto__ = m == null ? null : m;
    return function() {
      var or__3646__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3634__auto__ = m;
    if (and__3634__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4290__auto__ = m == null ? null : m;
    return function() {
      var or__3646__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3634__auto__ = m;
    if (and__3634__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4290__auto__ = m == null ? null : m;
    return function() {
      var or__3646__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t11293 !== "undefined") {
    } else {
      cljs.core.async.t11293 = function(cs, ch, mult, meta11294) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta11294 = meta11294;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t11293.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t11293.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t11293.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t11293.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t11293.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t11293.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t11293.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_11295) {
          var self__ = this;
          var _11295__$1 = this;
          return self__.meta11294;
        };
      }(cs);
      cljs.core.async.t11293.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_11295, meta11294__$1) {
          var self__ = this;
          var _11295__$1 = this;
          return new cljs.core.async.t11293(self__.cs, self__.ch, self__.mult, meta11294__$1);
        };
      }(cs);
      cljs.core.async.t11293.cljs$lang$type = true;
      cljs.core.async.t11293.cljs$lang$ctorStr = "cljs.core.async/t11293";
      cljs.core.async.t11293.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
          return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async/t11293");
        };
      }(cs);
      cljs.core.async.__GT_t11293 = function(cs) {
        return function __GT_t11293(cs__$1, ch__$1, mult__$1, meta11294) {
          return new cljs.core.async.t11293(cs__$1, ch__$1, mult__$1, meta11294);
        };
      }(cs);
    }
    return new cljs.core.async.t11293(cs, ch, mult, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 48, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 397, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, "line", "line", 212345235), 390, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/brabadu/projects/prom-stats/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
    null));
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6521__auto___11514 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6521__auto___11514, cs, m, dchan, dctr, done) {
    return function() {
      var f__6522__auto__ = function() {
        var switch__6506__auto__ = function(c__6521__auto___11514, cs, m, dchan, dctr, done) {
          return function(state_11426) {
            var state_val_11427 = state_11426[1];
            if (state_val_11427 === 7) {
              var inst_11422 = state_11426[2];
              var state_11426__$1 = state_11426;
              var statearr_11428_11515 = state_11426__$1;
              statearr_11428_11515[2] = inst_11422;
              statearr_11428_11515[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11427 === 20) {
                var inst_11327 = state_11426[7];
                var inst_11337 = cljs.core.first.call(null, inst_11327);
                var inst_11338 = cljs.core.nth.call(null, inst_11337, 0, null);
                var inst_11339 = cljs.core.nth.call(null, inst_11337, 1, null);
                var state_11426__$1 = function() {
                  var statearr_11429 = state_11426;
                  statearr_11429[8] = inst_11338;
                  return statearr_11429;
                }();
                if (cljs.core.truth_(inst_11339)) {
                  var statearr_11430_11516 = state_11426__$1;
                  statearr_11430_11516[1] = 22;
                } else {
                  var statearr_11431_11517 = state_11426__$1;
                  statearr_11431_11517[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11427 === 27) {
                  var inst_11298 = state_11426[9];
                  var inst_11374 = state_11426[10];
                  var inst_11369 = state_11426[11];
                  var inst_11367 = state_11426[12];
                  var inst_11374__$1 = cljs.core._nth.call(null, inst_11367, inst_11369);
                  var inst_11375 = cljs.core.async.put_BANG_.call(null, inst_11374__$1, inst_11298, done);
                  var state_11426__$1 = function() {
                    var statearr_11432 = state_11426;
                    statearr_11432[10] = inst_11374__$1;
                    return statearr_11432;
                  }();
                  if (cljs.core.truth_(inst_11375)) {
                    var statearr_11433_11518 = state_11426__$1;
                    statearr_11433_11518[1] = 30;
                  } else {
                    var statearr_11434_11519 = state_11426__$1;
                    statearr_11434_11519[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11427 === 1) {
                    var state_11426__$1 = state_11426;
                    var statearr_11435_11520 = state_11426__$1;
                    statearr_11435_11520[2] = null;
                    statearr_11435_11520[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11427 === 24) {
                      var inst_11327 = state_11426[7];
                      var inst_11344 = state_11426[2];
                      var inst_11345 = cljs.core.next.call(null, inst_11327);
                      var inst_11307 = inst_11345;
                      var inst_11308 = null;
                      var inst_11309 = 0;
                      var inst_11310 = 0;
                      var state_11426__$1 = function() {
                        var statearr_11436 = state_11426;
                        statearr_11436[13] = inst_11307;
                        statearr_11436[14] = inst_11309;
                        statearr_11436[15] = inst_11344;
                        statearr_11436[16] = inst_11310;
                        statearr_11436[17] = inst_11308;
                        return statearr_11436;
                      }();
                      var statearr_11437_11521 = state_11426__$1;
                      statearr_11437_11521[2] = null;
                      statearr_11437_11521[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11427 === 39) {
                        var state_11426__$1 = state_11426;
                        var statearr_11441_11522 = state_11426__$1;
                        statearr_11441_11522[2] = null;
                        statearr_11441_11522[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11427 === 4) {
                          var inst_11298 = state_11426[9];
                          var inst_11298__$1 = state_11426[2];
                          var inst_11299 = inst_11298__$1 == null;
                          var state_11426__$1 = function() {
                            var statearr_11442 = state_11426;
                            statearr_11442[9] = inst_11298__$1;
                            return statearr_11442;
                          }();
                          if (cljs.core.truth_(inst_11299)) {
                            var statearr_11443_11523 = state_11426__$1;
                            statearr_11443_11523[1] = 5;
                          } else {
                            var statearr_11444_11524 = state_11426__$1;
                            statearr_11444_11524[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_11427 === 15) {
                            var inst_11307 = state_11426[13];
                            var inst_11309 = state_11426[14];
                            var inst_11310 = state_11426[16];
                            var inst_11308 = state_11426[17];
                            var inst_11323 = state_11426[2];
                            var inst_11324 = inst_11310 + 1;
                            var tmp11438 = inst_11307;
                            var tmp11439 = inst_11309;
                            var tmp11440 = inst_11308;
                            var inst_11307__$1 = tmp11438;
                            var inst_11308__$1 = tmp11440;
                            var inst_11309__$1 = tmp11439;
                            var inst_11310__$1 = inst_11324;
                            var state_11426__$1 = function() {
                              var statearr_11445 = state_11426;
                              statearr_11445[13] = inst_11307__$1;
                              statearr_11445[18] = inst_11323;
                              statearr_11445[14] = inst_11309__$1;
                              statearr_11445[16] = inst_11310__$1;
                              statearr_11445[17] = inst_11308__$1;
                              return statearr_11445;
                            }();
                            var statearr_11446_11525 = state_11426__$1;
                            statearr_11446_11525[2] = null;
                            statearr_11446_11525[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_11427 === 21) {
                              var inst_11348 = state_11426[2];
                              var state_11426__$1 = state_11426;
                              var statearr_11450_11526 = state_11426__$1;
                              statearr_11450_11526[2] = inst_11348;
                              statearr_11450_11526[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_11427 === 31) {
                                var inst_11374 = state_11426[10];
                                var inst_11378 = done.call(null, null);
                                var inst_11379 = cljs.core.async.untap_STAR_.call(null, m, inst_11374);
                                var state_11426__$1 = function() {
                                  var statearr_11451 = state_11426;
                                  statearr_11451[19] = inst_11378;
                                  return statearr_11451;
                                }();
                                var statearr_11452_11527 = state_11426__$1;
                                statearr_11452_11527[2] = inst_11379;
                                statearr_11452_11527[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_11427 === 32) {
                                  var inst_11368 = state_11426[20];
                                  var inst_11366 = state_11426[21];
                                  var inst_11369 = state_11426[11];
                                  var inst_11367 = state_11426[12];
                                  var inst_11381 = state_11426[2];
                                  var inst_11382 = inst_11369 + 1;
                                  var tmp11447 = inst_11368;
                                  var tmp11448 = inst_11366;
                                  var tmp11449 = inst_11367;
                                  var inst_11366__$1 = tmp11448;
                                  var inst_11367__$1 = tmp11449;
                                  var inst_11368__$1 = tmp11447;
                                  var inst_11369__$1 = inst_11382;
                                  var state_11426__$1 = function() {
                                    var statearr_11453 = state_11426;
                                    statearr_11453[20] = inst_11368__$1;
                                    statearr_11453[21] = inst_11366__$1;
                                    statearr_11453[11] = inst_11369__$1;
                                    statearr_11453[22] = inst_11381;
                                    statearr_11453[12] = inst_11367__$1;
                                    return statearr_11453;
                                  }();
                                  var statearr_11454_11528 = state_11426__$1;
                                  statearr_11454_11528[2] = null;
                                  statearr_11454_11528[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_11427 === 40) {
                                    var inst_11394 = state_11426[23];
                                    var inst_11398 = done.call(null, null);
                                    var inst_11399 = cljs.core.async.untap_STAR_.call(null, m, inst_11394);
                                    var state_11426__$1 = function() {
                                      var statearr_11455 = state_11426;
                                      statearr_11455[24] = inst_11398;
                                      return statearr_11455;
                                    }();
                                    var statearr_11456_11529 = state_11426__$1;
                                    statearr_11456_11529[2] = inst_11399;
                                    statearr_11456_11529[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_11427 === 33) {
                                      var inst_11385 = state_11426[25];
                                      var inst_11387 = cljs.core.chunked_seq_QMARK_.call(null, inst_11385);
                                      var state_11426__$1 = state_11426;
                                      if (inst_11387) {
                                        var statearr_11457_11530 = state_11426__$1;
                                        statearr_11457_11530[1] = 36;
                                      } else {
                                        var statearr_11458_11531 = state_11426__$1;
                                        statearr_11458_11531[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_11427 === 13) {
                                        var inst_11317 = state_11426[26];
                                        var inst_11320 = cljs.core.async.close_BANG_.call(null, inst_11317);
                                        var state_11426__$1 = state_11426;
                                        var statearr_11459_11532 = state_11426__$1;
                                        statearr_11459_11532[2] = inst_11320;
                                        statearr_11459_11532[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_11427 === 22) {
                                          var inst_11338 = state_11426[8];
                                          var inst_11341 = cljs.core.async.close_BANG_.call(null, inst_11338);
                                          var state_11426__$1 = state_11426;
                                          var statearr_11460_11533 = state_11426__$1;
                                          statearr_11460_11533[2] = inst_11341;
                                          statearr_11460_11533[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_11427 === 36) {
                                            var inst_11385 = state_11426[25];
                                            var inst_11389 = cljs.core.chunk_first.call(null, inst_11385);
                                            var inst_11390 = cljs.core.chunk_rest.call(null, inst_11385);
                                            var inst_11391 = cljs.core.count.call(null, inst_11389);
                                            var inst_11366 = inst_11390;
                                            var inst_11367 = inst_11389;
                                            var inst_11368 = inst_11391;
                                            var inst_11369 = 0;
                                            var state_11426__$1 = function() {
                                              var statearr_11461 = state_11426;
                                              statearr_11461[20] = inst_11368;
                                              statearr_11461[21] = inst_11366;
                                              statearr_11461[11] = inst_11369;
                                              statearr_11461[12] = inst_11367;
                                              return statearr_11461;
                                            }();
                                            var statearr_11462_11534 = state_11426__$1;
                                            statearr_11462_11534[2] = null;
                                            statearr_11462_11534[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_11427 === 41) {
                                              var inst_11385 = state_11426[25];
                                              var inst_11401 = state_11426[2];
                                              var inst_11402 = cljs.core.next.call(null, inst_11385);
                                              var inst_11366 = inst_11402;
                                              var inst_11367 = null;
                                              var inst_11368 = 0;
                                              var inst_11369 = 0;
                                              var state_11426__$1 = function() {
                                                var statearr_11463 = state_11426;
                                                statearr_11463[20] = inst_11368;
                                                statearr_11463[27] = inst_11401;
                                                statearr_11463[21] = inst_11366;
                                                statearr_11463[11] = inst_11369;
                                                statearr_11463[12] = inst_11367;
                                                return statearr_11463;
                                              }();
                                              var statearr_11464_11535 = state_11426__$1;
                                              statearr_11464_11535[2] = null;
                                              statearr_11464_11535[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_11427 === 43) {
                                                var state_11426__$1 = state_11426;
                                                var statearr_11465_11536 = state_11426__$1;
                                                statearr_11465_11536[2] = null;
                                                statearr_11465_11536[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_11427 === 29) {
                                                  var inst_11410 = state_11426[2];
                                                  var state_11426__$1 = state_11426;
                                                  var statearr_11466_11537 = state_11426__$1;
                                                  statearr_11466_11537[2] = inst_11410;
                                                  statearr_11466_11537[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_11427 === 44) {
                                                    var inst_11419 = state_11426[2];
                                                    var state_11426__$1 = function() {
                                                      var statearr_11467 = state_11426;
                                                      statearr_11467[28] = inst_11419;
                                                      return statearr_11467;
                                                    }();
                                                    var statearr_11468_11538 = state_11426__$1;
                                                    statearr_11468_11538[2] = null;
                                                    statearr_11468_11538[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_11427 === 6) {
                                                      var inst_11358 = state_11426[29];
                                                      var inst_11357 = cljs.core.deref.call(null, cs);
                                                      var inst_11358__$1 = cljs.core.keys.call(null, inst_11357);
                                                      var inst_11359 = cljs.core.count.call(null, inst_11358__$1);
                                                      var inst_11360 = cljs.core.reset_BANG_.call(null, dctr, inst_11359);
                                                      var inst_11365 = cljs.core.seq.call(null, inst_11358__$1);
                                                      var inst_11366 = inst_11365;
                                                      var inst_11367 = null;
                                                      var inst_11368 = 0;
                                                      var inst_11369 = 0;
                                                      var state_11426__$1 = function() {
                                                        var statearr_11469 = state_11426;
                                                        statearr_11469[20] = inst_11368;
                                                        statearr_11469[29] = inst_11358__$1;
                                                        statearr_11469[21] = inst_11366;
                                                        statearr_11469[11] = inst_11369;
                                                        statearr_11469[30] = inst_11360;
                                                        statearr_11469[12] = inst_11367;
                                                        return statearr_11469;
                                                      }();
                                                      var statearr_11470_11539 = state_11426__$1;
                                                      statearr_11470_11539[2] = null;
                                                      statearr_11470_11539[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_11427 === 28) {
                                                        var inst_11385 = state_11426[25];
                                                        var inst_11366 = state_11426[21];
                                                        var inst_11385__$1 = cljs.core.seq.call(null, inst_11366);
                                                        var state_11426__$1 = function() {
                                                          var statearr_11471 = state_11426;
                                                          statearr_11471[25] = inst_11385__$1;
                                                          return statearr_11471;
                                                        }();
                                                        if (inst_11385__$1) {
                                                          var statearr_11472_11540 = state_11426__$1;
                                                          statearr_11472_11540[1] = 33;
                                                        } else {
                                                          var statearr_11473_11541 = state_11426__$1;
                                                          statearr_11473_11541[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_11427 === 25) {
                                                          var inst_11368 = state_11426[20];
                                                          var inst_11369 = state_11426[11];
                                                          var inst_11371 = inst_11369 < inst_11368;
                                                          var inst_11372 = inst_11371;
                                                          var state_11426__$1 = state_11426;
                                                          if (cljs.core.truth_(inst_11372)) {
                                                            var statearr_11474_11542 = state_11426__$1;
                                                            statearr_11474_11542[1] = 27;
                                                          } else {
                                                            var statearr_11475_11543 = state_11426__$1;
                                                            statearr_11475_11543[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_11427 === 34) {
                                                            var state_11426__$1 = state_11426;
                                                            var statearr_11476_11544 = state_11426__$1;
                                                            statearr_11476_11544[2] = null;
                                                            statearr_11476_11544[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_11427 === 17) {
                                                              var state_11426__$1 = state_11426;
                                                              var statearr_11477_11545 = state_11426__$1;
                                                              statearr_11477_11545[2] = null;
                                                              statearr_11477_11545[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_11427 === 3) {
                                                                var inst_11424 = state_11426[2];
                                                                var state_11426__$1 = state_11426;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11426__$1, inst_11424);
                                                              } else {
                                                                if (state_val_11427 === 12) {
                                                                  var inst_11353 = state_11426[2];
                                                                  var state_11426__$1 = state_11426;
                                                                  var statearr_11478_11546 = state_11426__$1;
                                                                  statearr_11478_11546[2] = inst_11353;
                                                                  statearr_11478_11546[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_11427 === 2) {
                                                                    var state_11426__$1 = state_11426;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11426__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_11427 === 23) {
                                                                      var state_11426__$1 = state_11426;
                                                                      var statearr_11479_11547 = state_11426__$1;
                                                                      statearr_11479_11547[2] = null;
                                                                      statearr_11479_11547[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_11427 === 35) {
                                                                        var inst_11408 = state_11426[2];
                                                                        var state_11426__$1 = state_11426;
                                                                        var statearr_11480_11548 = state_11426__$1;
                                                                        statearr_11480_11548[2] = inst_11408;
                                                                        statearr_11480_11548[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_11427 === 19) {
                                                                          var inst_11327 = state_11426[7];
                                                                          var inst_11331 = cljs.core.chunk_first.call(null, inst_11327);
                                                                          var inst_11332 = cljs.core.chunk_rest.call(null, inst_11327);
                                                                          var inst_11333 = cljs.core.count.call(null, inst_11331);
                                                                          var inst_11307 = inst_11332;
                                                                          var inst_11308 = inst_11331;
                                                                          var inst_11309 = inst_11333;
                                                                          var inst_11310 = 0;
                                                                          var state_11426__$1 = function() {
                                                                            var statearr_11481 = state_11426;
                                                                            statearr_11481[13] = inst_11307;
                                                                            statearr_11481[14] = inst_11309;
                                                                            statearr_11481[16] = inst_11310;
                                                                            statearr_11481[17] = inst_11308;
                                                                            return statearr_11481;
                                                                          }();
                                                                          var statearr_11482_11549 = state_11426__$1;
                                                                          statearr_11482_11549[2] = null;
                                                                          statearr_11482_11549[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_11427 === 11) {
                                                                            var inst_11307 = state_11426[13];
                                                                            var inst_11327 = state_11426[7];
                                                                            var inst_11327__$1 = cljs.core.seq.call(null, inst_11307);
                                                                            var state_11426__$1 = function() {
                                                                              var statearr_11483 = state_11426;
                                                                              statearr_11483[7] = inst_11327__$1;
                                                                              return statearr_11483;
                                                                            }();
                                                                            if (inst_11327__$1) {
                                                                              var statearr_11484_11550 = state_11426__$1;
                                                                              statearr_11484_11550[1] = 16;
                                                                            } else {
                                                                              var statearr_11485_11551 = state_11426__$1;
                                                                              statearr_11485_11551[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_11427 === 9) {
                                                                              var inst_11355 = state_11426[2];
                                                                              var state_11426__$1 = state_11426;
                                                                              var statearr_11486_11552 = state_11426__$1;
                                                                              statearr_11486_11552[2] = inst_11355;
                                                                              statearr_11486_11552[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_11427 === 5) {
                                                                                var inst_11305 = cljs.core.deref.call(null, cs);
                                                                                var inst_11306 = cljs.core.seq.call(null, inst_11305);
                                                                                var inst_11307 = inst_11306;
                                                                                var inst_11308 = null;
                                                                                var inst_11309 = 0;
                                                                                var inst_11310 = 0;
                                                                                var state_11426__$1 = function() {
                                                                                  var statearr_11487 = state_11426;
                                                                                  statearr_11487[13] = inst_11307;
                                                                                  statearr_11487[14] = inst_11309;
                                                                                  statearr_11487[16] = inst_11310;
                                                                                  statearr_11487[17] = inst_11308;
                                                                                  return statearr_11487;
                                                                                }();
                                                                                var statearr_11488_11553 = state_11426__$1;
                                                                                statearr_11488_11553[2] = null;
                                                                                statearr_11488_11553[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_11427 === 14) {
                                                                                  var state_11426__$1 = state_11426;
                                                                                  var statearr_11489_11554 = state_11426__$1;
                                                                                  statearr_11489_11554[2] = null;
                                                                                  statearr_11489_11554[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_11427 === 45) {
                                                                                    var inst_11416 = state_11426[2];
                                                                                    var state_11426__$1 = state_11426;
                                                                                    var statearr_11490_11555 = state_11426__$1;
                                                                                    statearr_11490_11555[2] = inst_11416;
                                                                                    statearr_11490_11555[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_11427 === 26) {
                                                                                      var inst_11358 = state_11426[29];
                                                                                      var inst_11412 = state_11426[2];
                                                                                      var inst_11413 = cljs.core.seq.call(null, inst_11358);
                                                                                      var state_11426__$1 = function() {
                                                                                        var statearr_11491 = state_11426;
                                                                                        statearr_11491[31] = inst_11412;
                                                                                        return statearr_11491;
                                                                                      }();
                                                                                      if (inst_11413) {
                                                                                        var statearr_11492_11556 = state_11426__$1;
                                                                                        statearr_11492_11556[1] = 42;
                                                                                      } else {
                                                                                        var statearr_11493_11557 = state_11426__$1;
                                                                                        statearr_11493_11557[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_11427 === 16) {
                                                                                        var inst_11327 = state_11426[7];
                                                                                        var inst_11329 = cljs.core.chunked_seq_QMARK_.call(null, inst_11327);
                                                                                        var state_11426__$1 = state_11426;
                                                                                        if (inst_11329) {
                                                                                          var statearr_11494_11558 = state_11426__$1;
                                                                                          statearr_11494_11558[1] = 19;
                                                                                        } else {
                                                                                          var statearr_11495_11559 = state_11426__$1;
                                                                                          statearr_11495_11559[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_11427 === 38) {
                                                                                          var inst_11405 = state_11426[2];
                                                                                          var state_11426__$1 = state_11426;
                                                                                          var statearr_11496_11560 = state_11426__$1;
                                                                                          statearr_11496_11560[2] = inst_11405;
                                                                                          statearr_11496_11560[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_11427 === 30) {
                                                                                            var state_11426__$1 = state_11426;
                                                                                            var statearr_11497_11561 = state_11426__$1;
                                                                                            statearr_11497_11561[2] = null;
                                                                                            statearr_11497_11561[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_11427 === 10) {
                                                                                              var inst_11310 = state_11426[16];
                                                                                              var inst_11308 = state_11426[17];
                                                                                              var inst_11316 = cljs.core._nth.call(null, inst_11308, inst_11310);
                                                                                              var inst_11317 = cljs.core.nth.call(null, inst_11316, 0, null);
                                                                                              var inst_11318 = cljs.core.nth.call(null, inst_11316, 1, null);
                                                                                              var state_11426__$1 = function() {
                                                                                                var statearr_11498 = state_11426;
                                                                                                statearr_11498[26] = inst_11317;
                                                                                                return statearr_11498;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_11318)) {
                                                                                                var statearr_11499_11562 = state_11426__$1;
                                                                                                statearr_11499_11562[1] = 13;
                                                                                              } else {
                                                                                                var statearr_11500_11563 = state_11426__$1;
                                                                                                statearr_11500_11563[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_11427 === 18) {
                                                                                                var inst_11351 = state_11426[2];
                                                                                                var state_11426__$1 = state_11426;
                                                                                                var statearr_11501_11564 = state_11426__$1;
                                                                                                statearr_11501_11564[2] = inst_11351;
                                                                                                statearr_11501_11564[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_11427 === 42) {
                                                                                                  var state_11426__$1 = state_11426;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11426__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_11427 === 37) {
                                                                                                    var inst_11298 = state_11426[9];
                                                                                                    var inst_11385 = state_11426[25];
                                                                                                    var inst_11394 = state_11426[23];
                                                                                                    var inst_11394__$1 = cljs.core.first.call(null, inst_11385);
                                                                                                    var inst_11395 = cljs.core.async.put_BANG_.call(null, inst_11394__$1, inst_11298, done);
                                                                                                    var state_11426__$1 = function() {
                                                                                                      var statearr_11502 = state_11426;
                                                                                                      statearr_11502[23] = inst_11394__$1;
                                                                                                      return statearr_11502;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_11395)) {
                                                                                                      var statearr_11503_11565 = state_11426__$1;
                                                                                                      statearr_11503_11565[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_11504_11566 = state_11426__$1;
                                                                                                      statearr_11504_11566[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_11427 === 8) {
                                                                                                      var inst_11309 = state_11426[14];
                                                                                                      var inst_11310 = state_11426[16];
                                                                                                      var inst_11312 = inst_11310 < inst_11309;
                                                                                                      var inst_11313 = inst_11312;
                                                                                                      var state_11426__$1 = state_11426;
                                                                                                      if (cljs.core.truth_(inst_11313)) {
                                                                                                        var statearr_11505_11567 = state_11426__$1;
                                                                                                        statearr_11505_11567[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_11506_11568 = state_11426__$1;
                                                                                                        statearr_11506_11568[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6521__auto___11514, cs, m, dchan, dctr, done);
        return function(switch__6506__auto__, c__6521__auto___11514, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__6507__auto__ = null;
            var state_machine__6507__auto____0 = function() {
              var statearr_11510 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_11510[0] = state_machine__6507__auto__;
              statearr_11510[1] = 1;
              return statearr_11510;
            };
            var state_machine__6507__auto____1 = function(state_11426) {
              while (true) {
                var ret_value__6508__auto__ = function() {
                  try {
                    while (true) {
                      var result__6509__auto__ = switch__6506__auto__.call(null, state_11426);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6509__auto__;
                      }
                      break;
                    }
                  } catch (e11511) {
                    if (e11511 instanceof Object) {
                      var ex__6510__auto__ = e11511;
                      var statearr_11512_11569 = state_11426;
                      statearr_11512_11569[5] = ex__6510__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11426);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11511;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11570 = state_11426;
                  state_11426 = G__11570;
                  continue;
                } else {
                  return ret_value__6508__auto__;
                }
                break;
              }
            };
            state_machine__6507__auto__ = function(state_11426) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6507__auto____0.call(this);
                case 1:
                  return state_machine__6507__auto____1.call(this, state_11426);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
            state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
            return state_machine__6507__auto__;
          }();
        }(switch__6506__auto__, c__6521__auto___11514, cs, m, dchan, dctr, done);
      }();
      var state__6523__auto__ = function() {
        var statearr_11513 = f__6522__auto__.call(null);
        statearr_11513[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto___11514;
        return statearr_11513;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
    };
  }(c__6521__auto___11514, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj11572 = {};
  return obj11572;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3634__auto__ = m;
    if (and__3634__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4290__auto__ = m == null ? null : m;
    return function() {
      var or__3646__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3634__auto__ = m;
    if (and__3634__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4290__auto__ = m == null ? null : m;
    return function() {
      var or__3646__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3634__auto__ = m;
    if (and__3634__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4290__auto__ = m == null ? null : m;
    return function() {
      var or__3646__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3634__auto__ = m;
    if (and__3634__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4290__auto__ = m == null ? null : m;
    return function() {
      var or__3646__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3634__auto__ = m;
    if (and__3634__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4290__auto__ = m == null ? null : m;
    return function() {
      var or__3646__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__11573) {
    var map__11578 = p__11573;
    var map__11578__$1 = cljs.core.seq_QMARK_.call(null, map__11578) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11578) : map__11578;
    var opts = map__11578__$1;
    var statearr_11579_11582 = state;
    statearr_11579_11582[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__11578, map__11578__$1, opts) {
      return function(val) {
        var statearr_11580_11583 = state;
        statearr_11580_11583[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__11578, map__11578__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_11581_11584 = state;
      statearr_11581_11584[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__11573 = null;
    if (arguments.length > 3) {
      p__11573 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__11573);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__11585) {
    var state = cljs.core.first(arglist__11585);
    arglist__11585 = cljs.core.next(arglist__11585);
    var cont_block = cljs.core.first(arglist__11585);
    arglist__11585 = cljs.core.next(arglist__11585);
    var ports = cljs.core.first(arglist__11585);
    var p__11573 = cljs.core.rest(arglist__11585);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__11573);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t11705 !== "undefined") {
    } else {
      cljs.core.async.t11705 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta11706) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta11706 = meta11706;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t11705.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t11705.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11705.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11705.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11705.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11705.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11705.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t11705.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11705.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_11707) {
          var self__ = this;
          var _11707__$1 = this;
          return self__.meta11706;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11705.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_11707, meta11706__$1) {
          var self__ = this;
          var _11707__$1 = this;
          return new cljs.core.async.t11705(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta11706__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11705.cljs$lang$type = true;
      cljs.core.async.t11705.cljs$lang$ctorStr = "cljs.core.async/t11705";
      cljs.core.async.t11705.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
          return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async/t11705");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t11705 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t11705(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta11706) {
          return new cljs.core.async.t11705(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta11706);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t11705(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 25, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 510, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, "line", "line", 212345235), 499, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/brabadu/projects/prom-stats/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
    null));
  }();
  var c__6521__auto___11824 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6521__auto___11824, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__6522__auto__ = function() {
        var switch__6506__auto__ = function(c__6521__auto___11824, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_11777) {
            var state_val_11778 = state_11777[1];
            if (state_val_11778 === 7) {
              var inst_11721 = state_11777[7];
              var inst_11726 = cljs.core.apply.call(null, cljs.core.hash_map, inst_11721);
              var state_11777__$1 = state_11777;
              var statearr_11779_11825 = state_11777__$1;
              statearr_11779_11825[2] = inst_11726;
              statearr_11779_11825[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11778 === 20) {
                var inst_11736 = state_11777[8];
                var state_11777__$1 = state_11777;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11777__$1, 23, out, inst_11736);
              } else {
                if (state_val_11778 === 1) {
                  var inst_11711 = state_11777[9];
                  var inst_11711__$1 = calc_state.call(null);
                  var inst_11712 = cljs.core.seq_QMARK_.call(null, inst_11711__$1);
                  var state_11777__$1 = function() {
                    var statearr_11780 = state_11777;
                    statearr_11780[9] = inst_11711__$1;
                    return statearr_11780;
                  }();
                  if (inst_11712) {
                    var statearr_11781_11826 = state_11777__$1;
                    statearr_11781_11826[1] = 2;
                  } else {
                    var statearr_11782_11827 = state_11777__$1;
                    statearr_11782_11827[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11778 === 24) {
                    var inst_11729 = state_11777[10];
                    var inst_11721 = inst_11729;
                    var state_11777__$1 = function() {
                      var statearr_11783 = state_11777;
                      statearr_11783[7] = inst_11721;
                      return statearr_11783;
                    }();
                    var statearr_11784_11828 = state_11777__$1;
                    statearr_11784_11828[2] = null;
                    statearr_11784_11828[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11778 === 4) {
                      var inst_11711 = state_11777[9];
                      var inst_11717 = state_11777[2];
                      var inst_11718 = cljs.core.get.call(null, inst_11717, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_11719 = cljs.core.get.call(null, inst_11717, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_11720 = cljs.core.get.call(null, inst_11717, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_11721 = inst_11711;
                      var state_11777__$1 = function() {
                        var statearr_11785 = state_11777;
                        statearr_11785[11] = inst_11718;
                        statearr_11785[7] = inst_11721;
                        statearr_11785[12] = inst_11719;
                        statearr_11785[13] = inst_11720;
                        return statearr_11785;
                      }();
                      var statearr_11786_11829 = state_11777__$1;
                      statearr_11786_11829[2] = null;
                      statearr_11786_11829[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11778 === 15) {
                        var state_11777__$1 = state_11777;
                        var statearr_11787_11830 = state_11777__$1;
                        statearr_11787_11830[2] = null;
                        statearr_11787_11830[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11778 === 21) {
                          var inst_11729 = state_11777[10];
                          var inst_11721 = inst_11729;
                          var state_11777__$1 = function() {
                            var statearr_11788 = state_11777;
                            statearr_11788[7] = inst_11721;
                            return statearr_11788;
                          }();
                          var statearr_11789_11831 = state_11777__$1;
                          statearr_11789_11831[2] = null;
                          statearr_11789_11831[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_11778 === 13) {
                            var inst_11773 = state_11777[2];
                            var state_11777__$1 = state_11777;
                            var statearr_11790_11832 = state_11777__$1;
                            statearr_11790_11832[2] = inst_11773;
                            statearr_11790_11832[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_11778 === 22) {
                              var inst_11771 = state_11777[2];
                              var state_11777__$1 = state_11777;
                              var statearr_11791_11833 = state_11777__$1;
                              statearr_11791_11833[2] = inst_11771;
                              statearr_11791_11833[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_11778 === 6) {
                                var inst_11775 = state_11777[2];
                                var state_11777__$1 = state_11777;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11777__$1, inst_11775);
                              } else {
                                if (state_val_11778 === 25) {
                                  var state_11777__$1 = state_11777;
                                  var statearr_11792_11834 = state_11777__$1;
                                  statearr_11792_11834[2] = null;
                                  statearr_11792_11834[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_11778 === 17) {
                                    var inst_11751 = state_11777[14];
                                    var state_11777__$1 = state_11777;
                                    var statearr_11793_11835 = state_11777__$1;
                                    statearr_11793_11835[2] = inst_11751;
                                    statearr_11793_11835[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_11778 === 3) {
                                      var inst_11711 = state_11777[9];
                                      var state_11777__$1 = state_11777;
                                      var statearr_11794_11836 = state_11777__$1;
                                      statearr_11794_11836[2] = inst_11711;
                                      statearr_11794_11836[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_11778 === 12) {
                                        var inst_11737 = state_11777[15];
                                        var inst_11732 = state_11777[16];
                                        var inst_11751 = state_11777[14];
                                        var inst_11751__$1 = inst_11732.call(null, inst_11737);
                                        var state_11777__$1 = function() {
                                          var statearr_11795 = state_11777;
                                          statearr_11795[14] = inst_11751__$1;
                                          return statearr_11795;
                                        }();
                                        if (cljs.core.truth_(inst_11751__$1)) {
                                          var statearr_11796_11837 = state_11777__$1;
                                          statearr_11796_11837[1] = 17;
                                        } else {
                                          var statearr_11797_11838 = state_11777__$1;
                                          statearr_11797_11838[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_11778 === 2) {
                                          var inst_11711 = state_11777[9];
                                          var inst_11714 = cljs.core.apply.call(null, cljs.core.hash_map, inst_11711);
                                          var state_11777__$1 = state_11777;
                                          var statearr_11798_11839 = state_11777__$1;
                                          statearr_11798_11839[2] = inst_11714;
                                          statearr_11798_11839[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_11778 === 23) {
                                            var inst_11762 = state_11777[2];
                                            var state_11777__$1 = state_11777;
                                            if (cljs.core.truth_(inst_11762)) {
                                              var statearr_11799_11840 = state_11777__$1;
                                              statearr_11799_11840[1] = 24;
                                            } else {
                                              var statearr_11800_11841 = state_11777__$1;
                                              statearr_11800_11841[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_11778 === 19) {
                                              var inst_11759 = state_11777[2];
                                              var state_11777__$1 = state_11777;
                                              if (cljs.core.truth_(inst_11759)) {
                                                var statearr_11801_11842 = state_11777__$1;
                                                statearr_11801_11842[1] = 20;
                                              } else {
                                                var statearr_11802_11843 = state_11777__$1;
                                                statearr_11802_11843[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_11778 === 11) {
                                                var inst_11736 = state_11777[8];
                                                var inst_11742 = inst_11736 == null;
                                                var state_11777__$1 = state_11777;
                                                if (cljs.core.truth_(inst_11742)) {
                                                  var statearr_11803_11844 = state_11777__$1;
                                                  statearr_11803_11844[1] = 14;
                                                } else {
                                                  var statearr_11804_11845 = state_11777__$1;
                                                  statearr_11804_11845[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_11778 === 9) {
                                                  var inst_11729 = state_11777[10];
                                                  var inst_11729__$1 = state_11777[2];
                                                  var inst_11730 = cljs.core.get.call(null, inst_11729__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_11731 = cljs.core.get.call(null, inst_11729__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_11732 = cljs.core.get.call(null, inst_11729__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_11777__$1 = function() {
                                                    var statearr_11805 = state_11777;
                                                    statearr_11805[16] = inst_11732;
                                                    statearr_11805[10] = inst_11729__$1;
                                                    statearr_11805[17] = inst_11731;
                                                    return statearr_11805;
                                                  }();
                                                  return cljs.core.async.ioc_alts_BANG_.call(null, state_11777__$1, 10, inst_11730);
                                                } else {
                                                  if (state_val_11778 === 5) {
                                                    var inst_11721 = state_11777[7];
                                                    var inst_11724 = cljs.core.seq_QMARK_.call(null, inst_11721);
                                                    var state_11777__$1 = state_11777;
                                                    if (inst_11724) {
                                                      var statearr_11806_11846 = state_11777__$1;
                                                      statearr_11806_11846[1] = 7;
                                                    } else {
                                                      var statearr_11807_11847 = state_11777__$1;
                                                      statearr_11807_11847[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_11778 === 14) {
                                                      var inst_11737 = state_11777[15];
                                                      var inst_11744 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_11737);
                                                      var state_11777__$1 = state_11777;
                                                      var statearr_11808_11848 = state_11777__$1;
                                                      statearr_11808_11848[2] = inst_11744;
                                                      statearr_11808_11848[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_11778 === 26) {
                                                        var inst_11767 = state_11777[2];
                                                        var state_11777__$1 = state_11777;
                                                        var statearr_11809_11849 = state_11777__$1;
                                                        statearr_11809_11849[2] = inst_11767;
                                                        statearr_11809_11849[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_11778 === 16) {
                                                          var inst_11747 = state_11777[2];
                                                          var inst_11748 = calc_state.call(null);
                                                          var inst_11721 = inst_11748;
                                                          var state_11777__$1 = function() {
                                                            var statearr_11810 = state_11777;
                                                            statearr_11810[7] = inst_11721;
                                                            statearr_11810[18] = inst_11747;
                                                            return statearr_11810;
                                                          }();
                                                          var statearr_11811_11850 = state_11777__$1;
                                                          statearr_11811_11850[2] = null;
                                                          statearr_11811_11850[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_11778 === 10) {
                                                            var inst_11737 = state_11777[15];
                                                            var inst_11736 = state_11777[8];
                                                            var inst_11735 = state_11777[2];
                                                            var inst_11736__$1 = cljs.core.nth.call(null, inst_11735, 0, null);
                                                            var inst_11737__$1 = cljs.core.nth.call(null, inst_11735, 1, null);
                                                            var inst_11738 = inst_11736__$1 == null;
                                                            var inst_11739 = cljs.core._EQ_.call(null, inst_11737__$1, change);
                                                            var inst_11740 = inst_11738 || inst_11739;
                                                            var state_11777__$1 = function() {
                                                              var statearr_11812 = state_11777;
                                                              statearr_11812[15] = inst_11737__$1;
                                                              statearr_11812[8] = inst_11736__$1;
                                                              return statearr_11812;
                                                            }();
                                                            if (cljs.core.truth_(inst_11740)) {
                                                              var statearr_11813_11851 = state_11777__$1;
                                                              statearr_11813_11851[1] = 11;
                                                            } else {
                                                              var statearr_11814_11852 = state_11777__$1;
                                                              statearr_11814_11852[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_11778 === 18) {
                                                              var inst_11737 = state_11777[15];
                                                              var inst_11732 = state_11777[16];
                                                              var inst_11731 = state_11777[17];
                                                              var inst_11754 = cljs.core.empty_QMARK_.call(null, inst_11732);
                                                              var inst_11755 = inst_11731.call(null, inst_11737);
                                                              var inst_11756 = cljs.core.not.call(null, inst_11755);
                                                              var inst_11757 = inst_11754 && inst_11756;
                                                              var state_11777__$1 = state_11777;
                                                              var statearr_11815_11853 = state_11777__$1;
                                                              statearr_11815_11853[2] = inst_11757;
                                                              statearr_11815_11853[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_11778 === 8) {
                                                                var inst_11721 = state_11777[7];
                                                                var state_11777__$1 = state_11777;
                                                                var statearr_11816_11854 = state_11777__$1;
                                                                statearr_11816_11854[2] = inst_11721;
                                                                statearr_11816_11854[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6521__auto___11824, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6506__auto__, c__6521__auto___11824, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__6507__auto__ = null;
            var state_machine__6507__auto____0 = function() {
              var statearr_11820 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_11820[0] = state_machine__6507__auto__;
              statearr_11820[1] = 1;
              return statearr_11820;
            };
            var state_machine__6507__auto____1 = function(state_11777) {
              while (true) {
                var ret_value__6508__auto__ = function() {
                  try {
                    while (true) {
                      var result__6509__auto__ = switch__6506__auto__.call(null, state_11777);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6509__auto__;
                      }
                      break;
                    }
                  } catch (e11821) {
                    if (e11821 instanceof Object) {
                      var ex__6510__auto__ = e11821;
                      var statearr_11822_11855 = state_11777;
                      statearr_11822_11855[5] = ex__6510__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11777);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11821;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11856 = state_11777;
                  state_11777 = G__11856;
                  continue;
                } else {
                  return ret_value__6508__auto__;
                }
                break;
              }
            };
            state_machine__6507__auto__ = function(state_11777) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6507__auto____0.call(this);
                case 1:
                  return state_machine__6507__auto____1.call(this, state_11777);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
            state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
            return state_machine__6507__auto__;
          }();
        }(switch__6506__auto__, c__6521__auto___11824, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__6523__auto__ = function() {
        var statearr_11823 = f__6522__auto__.call(null);
        statearr_11823[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto___11824;
        return statearr_11823;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
    };
  }(c__6521__auto___11824, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj11858 = {};
  return obj11858;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3634__auto__ = p;
    if (and__3634__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4290__auto__ = p == null ? null : p;
    return function() {
      var or__3646__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3634__auto__ = p;
    if (and__3634__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4290__auto__ = p == null ? null : p;
    return function() {
      var or__3646__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3634__auto__ = p;
      if (and__3634__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4290__auto__ = p == null ? null : p;
      return function() {
        var or__3646__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3634__auto__ = p;
      if (and__3634__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4290__auto__ = p == null ? null : p;
      return function() {
        var or__3646__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3646__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3646__auto__, mults) {
            return function(p1__11859_SHARP_) {
              if (cljs.core.truth_(p1__11859_SHARP_.call(null, topic))) {
                return p1__11859_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__11859_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3646__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t11982 !== "undefined") {
      } else {
        cljs.core.async.t11982 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta11983) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta11983 = meta11983;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t11982.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t11982.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t11982.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$1);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t11982.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t11982.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t11982.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t11982.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t11982.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_11984) {
            var self__ = this;
            var _11984__$1 = this;
            return self__.meta11983;
          };
        }(mults, ensure_mult);
        cljs.core.async.t11982.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_11984, meta11983__$1) {
            var self__ = this;
            var _11984__$1 = this;
            return new cljs.core.async.t11982(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta11983__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.t11982.cljs$lang$type = true;
        cljs.core.async.t11982.cljs$lang$ctorStr = "cljs.core.async/t11982";
        cljs.core.async.t11982.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
            return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async/t11982");
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t11982 = function(mults, ensure_mult) {
          return function __GT_t11982(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta11983) {
            return new cljs.core.async.t11982(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta11983);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t11982(ensure_mult, mults, buf_fn, topic_fn, ch, pub, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 65, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 603, new cljs.core.Keyword(null, "column", "column", 2078222095), 14, new cljs.core.Keyword(null, "line", "line", 212345235), 591, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/brabadu/projects/prom-stats/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
      null));
    }();
    var c__6521__auto___12104 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6521__auto___12104, mults, ensure_mult, p) {
      return function() {
        var f__6522__auto__ = function() {
          var switch__6506__auto__ = function(c__6521__auto___12104, mults, ensure_mult, p) {
            return function(state_12056) {
              var state_val_12057 = state_12056[1];
              if (state_val_12057 === 7) {
                var inst_12052 = state_12056[2];
                var state_12056__$1 = state_12056;
                var statearr_12058_12105 = state_12056__$1;
                statearr_12058_12105[2] = inst_12052;
                statearr_12058_12105[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12057 === 20) {
                  var state_12056__$1 = state_12056;
                  var statearr_12059_12106 = state_12056__$1;
                  statearr_12059_12106[2] = null;
                  statearr_12059_12106[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12057 === 1) {
                    var state_12056__$1 = state_12056;
                    var statearr_12060_12107 = state_12056__$1;
                    statearr_12060_12107[2] = null;
                    statearr_12060_12107[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12057 === 24) {
                      var inst_12035 = state_12056[7];
                      var inst_12044 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_12035);
                      var state_12056__$1 = state_12056;
                      var statearr_12061_12108 = state_12056__$1;
                      statearr_12061_12108[2] = inst_12044;
                      statearr_12061_12108[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12057 === 4) {
                        var inst_11987 = state_12056[8];
                        var inst_11987__$1 = state_12056[2];
                        var inst_11988 = inst_11987__$1 == null;
                        var state_12056__$1 = function() {
                          var statearr_12062 = state_12056;
                          statearr_12062[8] = inst_11987__$1;
                          return statearr_12062;
                        }();
                        if (cljs.core.truth_(inst_11988)) {
                          var statearr_12063_12109 = state_12056__$1;
                          statearr_12063_12109[1] = 5;
                        } else {
                          var statearr_12064_12110 = state_12056__$1;
                          statearr_12064_12110[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12057 === 15) {
                          var inst_12029 = state_12056[2];
                          var state_12056__$1 = state_12056;
                          var statearr_12065_12111 = state_12056__$1;
                          statearr_12065_12111[2] = inst_12029;
                          statearr_12065_12111[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12057 === 21) {
                            var inst_12049 = state_12056[2];
                            var state_12056__$1 = function() {
                              var statearr_12066 = state_12056;
                              statearr_12066[9] = inst_12049;
                              return statearr_12066;
                            }();
                            var statearr_12067_12112 = state_12056__$1;
                            statearr_12067_12112[2] = null;
                            statearr_12067_12112[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12057 === 13) {
                              var inst_12011 = state_12056[10];
                              var inst_12013 = cljs.core.chunked_seq_QMARK_.call(null, inst_12011);
                              var state_12056__$1 = state_12056;
                              if (inst_12013) {
                                var statearr_12068_12113 = state_12056__$1;
                                statearr_12068_12113[1] = 16;
                              } else {
                                var statearr_12069_12114 = state_12056__$1;
                                statearr_12069_12114[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12057 === 22) {
                                var inst_12041 = state_12056[2];
                                var state_12056__$1 = state_12056;
                                if (cljs.core.truth_(inst_12041)) {
                                  var statearr_12070_12115 = state_12056__$1;
                                  statearr_12070_12115[1] = 23;
                                } else {
                                  var statearr_12071_12116 = state_12056__$1;
                                  statearr_12071_12116[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12057 === 6) {
                                  var inst_12035 = state_12056[7];
                                  var inst_11987 = state_12056[8];
                                  var inst_12037 = state_12056[11];
                                  var inst_12035__$1 = topic_fn.call(null, inst_11987);
                                  var inst_12036 = cljs.core.deref.call(null, mults);
                                  var inst_12037__$1 = cljs.core.get.call(null, inst_12036, inst_12035__$1);
                                  var state_12056__$1 = function() {
                                    var statearr_12072 = state_12056;
                                    statearr_12072[7] = inst_12035__$1;
                                    statearr_12072[11] = inst_12037__$1;
                                    return statearr_12072;
                                  }();
                                  if (cljs.core.truth_(inst_12037__$1)) {
                                    var statearr_12073_12117 = state_12056__$1;
                                    statearr_12073_12117[1] = 19;
                                  } else {
                                    var statearr_12074_12118 = state_12056__$1;
                                    statearr_12074_12118[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12057 === 25) {
                                    var inst_12046 = state_12056[2];
                                    var state_12056__$1 = state_12056;
                                    var statearr_12075_12119 = state_12056__$1;
                                    statearr_12075_12119[2] = inst_12046;
                                    statearr_12075_12119[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_12057 === 17) {
                                      var inst_12011 = state_12056[10];
                                      var inst_12020 = cljs.core.first.call(null, inst_12011);
                                      var inst_12021 = cljs.core.async.muxch_STAR_.call(null, inst_12020);
                                      var inst_12022 = cljs.core.async.close_BANG_.call(null, inst_12021);
                                      var inst_12023 = cljs.core.next.call(null, inst_12011);
                                      var inst_11997 = inst_12023;
                                      var inst_11998 = null;
                                      var inst_11999 = 0;
                                      var inst_12000 = 0;
                                      var state_12056__$1 = function() {
                                        var statearr_12076 = state_12056;
                                        statearr_12076[12] = inst_11998;
                                        statearr_12076[13] = inst_11997;
                                        statearr_12076[14] = inst_11999;
                                        statearr_12076[15] = inst_12022;
                                        statearr_12076[16] = inst_12000;
                                        return statearr_12076;
                                      }();
                                      var statearr_12077_12120 = state_12056__$1;
                                      statearr_12077_12120[2] = null;
                                      statearr_12077_12120[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_12057 === 3) {
                                        var inst_12054 = state_12056[2];
                                        var state_12056__$1 = state_12056;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12056__$1, inst_12054);
                                      } else {
                                        if (state_val_12057 === 12) {
                                          var inst_12031 = state_12056[2];
                                          var state_12056__$1 = state_12056;
                                          var statearr_12078_12121 = state_12056__$1;
                                          statearr_12078_12121[2] = inst_12031;
                                          statearr_12078_12121[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_12057 === 2) {
                                            var state_12056__$1 = state_12056;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12056__$1, 4, ch);
                                          } else {
                                            if (state_val_12057 === 23) {
                                              var state_12056__$1 = state_12056;
                                              var statearr_12079_12122 = state_12056__$1;
                                              statearr_12079_12122[2] = null;
                                              statearr_12079_12122[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_12057 === 19) {
                                                var inst_11987 = state_12056[8];
                                                var inst_12037 = state_12056[11];
                                                var inst_12039 = cljs.core.async.muxch_STAR_.call(null, inst_12037);
                                                var state_12056__$1 = state_12056;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12056__$1, 22, inst_12039, inst_11987);
                                              } else {
                                                if (state_val_12057 === 11) {
                                                  var inst_12011 = state_12056[10];
                                                  var inst_11997 = state_12056[13];
                                                  var inst_12011__$1 = cljs.core.seq.call(null, inst_11997);
                                                  var state_12056__$1 = function() {
                                                    var statearr_12080 = state_12056;
                                                    statearr_12080[10] = inst_12011__$1;
                                                    return statearr_12080;
                                                  }();
                                                  if (inst_12011__$1) {
                                                    var statearr_12081_12123 = state_12056__$1;
                                                    statearr_12081_12123[1] = 13;
                                                  } else {
                                                    var statearr_12082_12124 = state_12056__$1;
                                                    statearr_12082_12124[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_12057 === 9) {
                                                    var inst_12033 = state_12056[2];
                                                    var state_12056__$1 = state_12056;
                                                    var statearr_12083_12125 = state_12056__$1;
                                                    statearr_12083_12125[2] = inst_12033;
                                                    statearr_12083_12125[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_12057 === 5) {
                                                      var inst_11994 = cljs.core.deref.call(null, mults);
                                                      var inst_11995 = cljs.core.vals.call(null, inst_11994);
                                                      var inst_11996 = cljs.core.seq.call(null, inst_11995);
                                                      var inst_11997 = inst_11996;
                                                      var inst_11998 = null;
                                                      var inst_11999 = 0;
                                                      var inst_12000 = 0;
                                                      var state_12056__$1 = function() {
                                                        var statearr_12084 = state_12056;
                                                        statearr_12084[12] = inst_11998;
                                                        statearr_12084[13] = inst_11997;
                                                        statearr_12084[14] = inst_11999;
                                                        statearr_12084[16] = inst_12000;
                                                        return statearr_12084;
                                                      }();
                                                      var statearr_12085_12126 = state_12056__$1;
                                                      statearr_12085_12126[2] = null;
                                                      statearr_12085_12126[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_12057 === 14) {
                                                        var state_12056__$1 = state_12056;
                                                        var statearr_12089_12127 = state_12056__$1;
                                                        statearr_12089_12127[2] = null;
                                                        statearr_12089_12127[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_12057 === 16) {
                                                          var inst_12011 = state_12056[10];
                                                          var inst_12015 = cljs.core.chunk_first.call(null, inst_12011);
                                                          var inst_12016 = cljs.core.chunk_rest.call(null, inst_12011);
                                                          var inst_12017 = cljs.core.count.call(null, inst_12015);
                                                          var inst_11997 = inst_12016;
                                                          var inst_11998 = inst_12015;
                                                          var inst_11999 = inst_12017;
                                                          var inst_12000 = 0;
                                                          var state_12056__$1 = function() {
                                                            var statearr_12090 = state_12056;
                                                            statearr_12090[12] = inst_11998;
                                                            statearr_12090[13] = inst_11997;
                                                            statearr_12090[14] = inst_11999;
                                                            statearr_12090[16] = inst_12000;
                                                            return statearr_12090;
                                                          }();
                                                          var statearr_12091_12128 = state_12056__$1;
                                                          statearr_12091_12128[2] = null;
                                                          statearr_12091_12128[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_12057 === 10) {
                                                            var inst_11998 = state_12056[12];
                                                            var inst_11997 = state_12056[13];
                                                            var inst_11999 = state_12056[14];
                                                            var inst_12000 = state_12056[16];
                                                            var inst_12005 = cljs.core._nth.call(null, inst_11998, inst_12000);
                                                            var inst_12006 = cljs.core.async.muxch_STAR_.call(null, inst_12005);
                                                            var inst_12007 = cljs.core.async.close_BANG_.call(null, inst_12006);
                                                            var inst_12008 = inst_12000 + 1;
                                                            var tmp12086 = inst_11998;
                                                            var tmp12087 = inst_11997;
                                                            var tmp12088 = inst_11999;
                                                            var inst_11997__$1 = tmp12087;
                                                            var inst_11998__$1 = tmp12086;
                                                            var inst_11999__$1 = tmp12088;
                                                            var inst_12000__$1 = inst_12008;
                                                            var state_12056__$1 = function() {
                                                              var statearr_12092 = state_12056;
                                                              statearr_12092[12] = inst_11998__$1;
                                                              statearr_12092[13] = inst_11997__$1;
                                                              statearr_12092[14] = inst_11999__$1;
                                                              statearr_12092[17] = inst_12007;
                                                              statearr_12092[16] = inst_12000__$1;
                                                              return statearr_12092;
                                                            }();
                                                            var statearr_12093_12129 = state_12056__$1;
                                                            statearr_12093_12129[2] = null;
                                                            statearr_12093_12129[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_12057 === 18) {
                                                              var inst_12026 = state_12056[2];
                                                              var state_12056__$1 = state_12056;
                                                              var statearr_12094_12130 = state_12056__$1;
                                                              statearr_12094_12130[2] = inst_12026;
                                                              statearr_12094_12130[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_12057 === 8) {
                                                                var inst_11999 = state_12056[14];
                                                                var inst_12000 = state_12056[16];
                                                                var inst_12002 = inst_12000 < inst_11999;
                                                                var inst_12003 = inst_12002;
                                                                var state_12056__$1 = state_12056;
                                                                if (cljs.core.truth_(inst_12003)) {
                                                                  var statearr_12095_12131 = state_12056__$1;
                                                                  statearr_12095_12131[1] = 10;
                                                                } else {
                                                                  var statearr_12096_12132 = state_12056__$1;
                                                                  statearr_12096_12132[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6521__auto___12104, mults, ensure_mult, p);
          return function(switch__6506__auto__, c__6521__auto___12104, mults, ensure_mult, p) {
            return function() {
              var state_machine__6507__auto__ = null;
              var state_machine__6507__auto____0 = function() {
                var statearr_12100 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_12100[0] = state_machine__6507__auto__;
                statearr_12100[1] = 1;
                return statearr_12100;
              };
              var state_machine__6507__auto____1 = function(state_12056) {
                while (true) {
                  var ret_value__6508__auto__ = function() {
                    try {
                      while (true) {
                        var result__6509__auto__ = switch__6506__auto__.call(null, state_12056);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6509__auto__;
                        }
                        break;
                      }
                    } catch (e12101) {
                      if (e12101 instanceof Object) {
                        var ex__6510__auto__ = e12101;
                        var statearr_12102_12133 = state_12056;
                        statearr_12102_12133[5] = ex__6510__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12056);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12101;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12134 = state_12056;
                    state_12056 = G__12134;
                    continue;
                  } else {
                    return ret_value__6508__auto__;
                  }
                  break;
                }
              };
              state_machine__6507__auto__ = function(state_12056) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6507__auto____0.call(this);
                  case 1:
                    return state_machine__6507__auto____1.call(this, state_12056);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
              return state_machine__6507__auto__;
            }();
          }(switch__6506__auto__, c__6521__auto___12104, mults, ensure_mult, p);
        }();
        var state__6523__auto__ = function() {
          var statearr_12103 = f__6522__auto__.call(null);
          statearr_12103[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto___12104;
          return statearr_12103;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
      };
    }(c__6521__auto___12104, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6521__auto___12271 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6521__auto___12271, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__6522__auto__ = function() {
          var switch__6506__auto__ = function(c__6521__auto___12271, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_12241) {
              var state_val_12242 = state_12241[1];
              if (state_val_12242 === 7) {
                var state_12241__$1 = state_12241;
                var statearr_12243_12272 = state_12241__$1;
                statearr_12243_12272[2] = null;
                statearr_12243_12272[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12242 === 1) {
                  var state_12241__$1 = state_12241;
                  var statearr_12244_12273 = state_12241__$1;
                  statearr_12244_12273[2] = null;
                  statearr_12244_12273[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12242 === 4) {
                    var inst_12205 = state_12241[7];
                    var inst_12207 = inst_12205 < cnt;
                    var state_12241__$1 = state_12241;
                    if (cljs.core.truth_(inst_12207)) {
                      var statearr_12245_12274 = state_12241__$1;
                      statearr_12245_12274[1] = 6;
                    } else {
                      var statearr_12246_12275 = state_12241__$1;
                      statearr_12246_12275[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12242 === 15) {
                      var inst_12237 = state_12241[2];
                      var state_12241__$1 = state_12241;
                      var statearr_12247_12276 = state_12241__$1;
                      statearr_12247_12276[2] = inst_12237;
                      statearr_12247_12276[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12242 === 13) {
                        var inst_12230 = cljs.core.async.close_BANG_.call(null, out);
                        var state_12241__$1 = state_12241;
                        var statearr_12248_12277 = state_12241__$1;
                        statearr_12248_12277[2] = inst_12230;
                        statearr_12248_12277[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12242 === 6) {
                          var state_12241__$1 = state_12241;
                          var statearr_12249_12278 = state_12241__$1;
                          statearr_12249_12278[2] = null;
                          statearr_12249_12278[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12242 === 3) {
                            var inst_12239 = state_12241[2];
                            var state_12241__$1 = state_12241;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12241__$1, inst_12239);
                          } else {
                            if (state_val_12242 === 12) {
                              var inst_12227 = state_12241[8];
                              var inst_12227__$1 = state_12241[2];
                              var inst_12228 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_12227__$1);
                              var state_12241__$1 = function() {
                                var statearr_12250 = state_12241;
                                statearr_12250[8] = inst_12227__$1;
                                return statearr_12250;
                              }();
                              if (cljs.core.truth_(inst_12228)) {
                                var statearr_12251_12279 = state_12241__$1;
                                statearr_12251_12279[1] = 13;
                              } else {
                                var statearr_12252_12280 = state_12241__$1;
                                statearr_12252_12280[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12242 === 2) {
                                var inst_12204 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_12205 = 0;
                                var state_12241__$1 = function() {
                                  var statearr_12253 = state_12241;
                                  statearr_12253[9] = inst_12204;
                                  statearr_12253[7] = inst_12205;
                                  return statearr_12253;
                                }();
                                var statearr_12254_12281 = state_12241__$1;
                                statearr_12254_12281[2] = null;
                                statearr_12254_12281[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12242 === 11) {
                                  var inst_12205 = state_12241[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_12241, 10, Object, null, 9);
                                  var inst_12214 = chs__$1.call(null, inst_12205);
                                  var inst_12215 = done.call(null, inst_12205);
                                  var inst_12216 = cljs.core.async.take_BANG_.call(null, inst_12214, inst_12215);
                                  var state_12241__$1 = state_12241;
                                  var statearr_12255_12282 = state_12241__$1;
                                  statearr_12255_12282[2] = inst_12216;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12241__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12242 === 9) {
                                    var inst_12205 = state_12241[7];
                                    var inst_12218 = state_12241[2];
                                    var inst_12219 = inst_12205 + 1;
                                    var inst_12205__$1 = inst_12219;
                                    var state_12241__$1 = function() {
                                      var statearr_12256 = state_12241;
                                      statearr_12256[10] = inst_12218;
                                      statearr_12256[7] = inst_12205__$1;
                                      return statearr_12256;
                                    }();
                                    var statearr_12257_12283 = state_12241__$1;
                                    statearr_12257_12283[2] = null;
                                    statearr_12257_12283[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_12242 === 5) {
                                      var inst_12225 = state_12241[2];
                                      var state_12241__$1 = function() {
                                        var statearr_12258 = state_12241;
                                        statearr_12258[11] = inst_12225;
                                        return statearr_12258;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12241__$1, 12, dchan);
                                    } else {
                                      if (state_val_12242 === 14) {
                                        var inst_12227 = state_12241[8];
                                        var inst_12232 = cljs.core.apply.call(null, f, inst_12227);
                                        var state_12241__$1 = state_12241;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12241__$1, 16, out, inst_12232);
                                      } else {
                                        if (state_val_12242 === 16) {
                                          var inst_12234 = state_12241[2];
                                          var state_12241__$1 = function() {
                                            var statearr_12259 = state_12241;
                                            statearr_12259[12] = inst_12234;
                                            return statearr_12259;
                                          }();
                                          var statearr_12260_12284 = state_12241__$1;
                                          statearr_12260_12284[2] = null;
                                          statearr_12260_12284[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_12242 === 10) {
                                            var inst_12209 = state_12241[2];
                                            var inst_12210 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_12241__$1 = function() {
                                              var statearr_12261 = state_12241;
                                              statearr_12261[13] = inst_12209;
                                              return statearr_12261;
                                            }();
                                            var statearr_12262_12285 = state_12241__$1;
                                            statearr_12262_12285[2] = inst_12210;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12241__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_12242 === 8) {
                                              var inst_12223 = state_12241[2];
                                              var state_12241__$1 = state_12241;
                                              var statearr_12263_12286 = state_12241__$1;
                                              statearr_12263_12286[2] = inst_12223;
                                              statearr_12263_12286[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6521__auto___12271, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6506__auto__, c__6521__auto___12271, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__6507__auto__ = null;
              var state_machine__6507__auto____0 = function() {
                var statearr_12267 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_12267[0] = state_machine__6507__auto__;
                statearr_12267[1] = 1;
                return statearr_12267;
              };
              var state_machine__6507__auto____1 = function(state_12241) {
                while (true) {
                  var ret_value__6508__auto__ = function() {
                    try {
                      while (true) {
                        var result__6509__auto__ = switch__6506__auto__.call(null, state_12241);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6509__auto__;
                        }
                        break;
                      }
                    } catch (e12268) {
                      if (e12268 instanceof Object) {
                        var ex__6510__auto__ = e12268;
                        var statearr_12269_12287 = state_12241;
                        statearr_12269_12287[5] = ex__6510__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12241);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12268;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12288 = state_12241;
                    state_12241 = G__12288;
                    continue;
                  } else {
                    return ret_value__6508__auto__;
                  }
                  break;
                }
              };
              state_machine__6507__auto__ = function(state_12241) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6507__auto____0.call(this);
                  case 1:
                    return state_machine__6507__auto____1.call(this, state_12241);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
              return state_machine__6507__auto__;
            }();
          }(switch__6506__auto__, c__6521__auto___12271, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__6523__auto__ = function() {
          var statearr_12270 = f__6522__auto__.call(null);
          statearr_12270[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto___12271;
          return statearr_12270;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
      };
    }(c__6521__auto___12271, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6521__auto___12396 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6521__auto___12396, out) {
      return function() {
        var f__6522__auto__ = function() {
          var switch__6506__auto__ = function(c__6521__auto___12396, out) {
            return function(state_12372) {
              var state_val_12373 = state_12372[1];
              if (state_val_12373 === 7) {
                var inst_12352 = state_12372[7];
                var inst_12351 = state_12372[8];
                var inst_12351__$1 = state_12372[2];
                var inst_12352__$1 = cljs.core.nth.call(null, inst_12351__$1, 0, null);
                var inst_12353 = cljs.core.nth.call(null, inst_12351__$1, 1, null);
                var inst_12354 = inst_12352__$1 == null;
                var state_12372__$1 = function() {
                  var statearr_12374 = state_12372;
                  statearr_12374[7] = inst_12352__$1;
                  statearr_12374[8] = inst_12351__$1;
                  statearr_12374[9] = inst_12353;
                  return statearr_12374;
                }();
                if (cljs.core.truth_(inst_12354)) {
                  var statearr_12375_12397 = state_12372__$1;
                  statearr_12375_12397[1] = 8;
                } else {
                  var statearr_12376_12398 = state_12372__$1;
                  statearr_12376_12398[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12373 === 1) {
                  var inst_12343 = cljs.core.vec.call(null, chs);
                  var inst_12344 = inst_12343;
                  var state_12372__$1 = function() {
                    var statearr_12377 = state_12372;
                    statearr_12377[10] = inst_12344;
                    return statearr_12377;
                  }();
                  var statearr_12378_12399 = state_12372__$1;
                  statearr_12378_12399[2] = null;
                  statearr_12378_12399[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12373 === 4) {
                    var inst_12344 = state_12372[10];
                    var state_12372__$1 = state_12372;
                    return cljs.core.async.ioc_alts_BANG_.call(null, state_12372__$1, 7, inst_12344);
                  } else {
                    if (state_val_12373 === 6) {
                      var inst_12368 = state_12372[2];
                      var state_12372__$1 = state_12372;
                      var statearr_12379_12400 = state_12372__$1;
                      statearr_12379_12400[2] = inst_12368;
                      statearr_12379_12400[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12373 === 3) {
                        var inst_12370 = state_12372[2];
                        var state_12372__$1 = state_12372;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12372__$1, inst_12370);
                      } else {
                        if (state_val_12373 === 2) {
                          var inst_12344 = state_12372[10];
                          var inst_12346 = cljs.core.count.call(null, inst_12344);
                          var inst_12347 = inst_12346 > 0;
                          var state_12372__$1 = state_12372;
                          if (cljs.core.truth_(inst_12347)) {
                            var statearr_12381_12401 = state_12372__$1;
                            statearr_12381_12401[1] = 4;
                          } else {
                            var statearr_12382_12402 = state_12372__$1;
                            statearr_12382_12402[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12373 === 11) {
                            var inst_12344 = state_12372[10];
                            var inst_12361 = state_12372[2];
                            var tmp12380 = inst_12344;
                            var inst_12344__$1 = tmp12380;
                            var state_12372__$1 = function() {
                              var statearr_12383 = state_12372;
                              statearr_12383[11] = inst_12361;
                              statearr_12383[10] = inst_12344__$1;
                              return statearr_12383;
                            }();
                            var statearr_12384_12403 = state_12372__$1;
                            statearr_12384_12403[2] = null;
                            statearr_12384_12403[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12373 === 9) {
                              var inst_12352 = state_12372[7];
                              var state_12372__$1 = state_12372;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12372__$1, 11, out, inst_12352);
                            } else {
                              if (state_val_12373 === 5) {
                                var inst_12366 = cljs.core.async.close_BANG_.call(null, out);
                                var state_12372__$1 = state_12372;
                                var statearr_12385_12404 = state_12372__$1;
                                statearr_12385_12404[2] = inst_12366;
                                statearr_12385_12404[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12373 === 10) {
                                  var inst_12364 = state_12372[2];
                                  var state_12372__$1 = state_12372;
                                  var statearr_12386_12405 = state_12372__$1;
                                  statearr_12386_12405[2] = inst_12364;
                                  statearr_12386_12405[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12373 === 8) {
                                    var inst_12352 = state_12372[7];
                                    var inst_12351 = state_12372[8];
                                    var inst_12353 = state_12372[9];
                                    var inst_12344 = state_12372[10];
                                    var inst_12356 = function() {
                                      var c = inst_12353;
                                      var v = inst_12352;
                                      var vec__12349 = inst_12351;
                                      var cs = inst_12344;
                                      return function(c, v, vec__12349, cs, inst_12352, inst_12351, inst_12353, inst_12344, state_val_12373, c__6521__auto___12396, out) {
                                        return function(p1__12289_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__12289_SHARP_);
                                        };
                                      }(c, v, vec__12349, cs, inst_12352, inst_12351, inst_12353, inst_12344, state_val_12373, c__6521__auto___12396, out);
                                    }();
                                    var inst_12357 = cljs.core.filterv.call(null, inst_12356, inst_12344);
                                    var inst_12344__$1 = inst_12357;
                                    var state_12372__$1 = function() {
                                      var statearr_12387 = state_12372;
                                      statearr_12387[10] = inst_12344__$1;
                                      return statearr_12387;
                                    }();
                                    var statearr_12388_12406 = state_12372__$1;
                                    statearr_12388_12406[2] = null;
                                    statearr_12388_12406[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6521__auto___12396, out);
          return function(switch__6506__auto__, c__6521__auto___12396, out) {
            return function() {
              var state_machine__6507__auto__ = null;
              var state_machine__6507__auto____0 = function() {
                var statearr_12392 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_12392[0] = state_machine__6507__auto__;
                statearr_12392[1] = 1;
                return statearr_12392;
              };
              var state_machine__6507__auto____1 = function(state_12372) {
                while (true) {
                  var ret_value__6508__auto__ = function() {
                    try {
                      while (true) {
                        var result__6509__auto__ = switch__6506__auto__.call(null, state_12372);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6509__auto__;
                        }
                        break;
                      }
                    } catch (e12393) {
                      if (e12393 instanceof Object) {
                        var ex__6510__auto__ = e12393;
                        var statearr_12394_12407 = state_12372;
                        statearr_12394_12407[5] = ex__6510__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12372);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12393;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12408 = state_12372;
                    state_12372 = G__12408;
                    continue;
                  } else {
                    return ret_value__6508__auto__;
                  }
                  break;
                }
              };
              state_machine__6507__auto__ = function(state_12372) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6507__auto____0.call(this);
                  case 1:
                    return state_machine__6507__auto____1.call(this, state_12372);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
              return state_machine__6507__auto__;
            }();
          }(switch__6506__auto__, c__6521__auto___12396, out);
        }();
        var state__6523__auto__ = function() {
          var statearr_12395 = f__6522__auto__.call(null);
          statearr_12395[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto___12396;
          return statearr_12395;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
      };
    }(c__6521__auto___12396, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6521__auto___12501 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6521__auto___12501, out) {
      return function() {
        var f__6522__auto__ = function() {
          var switch__6506__auto__ = function(c__6521__auto___12501, out) {
            return function(state_12478) {
              var state_val_12479 = state_12478[1];
              if (state_val_12479 === 7) {
                var inst_12460 = state_12478[7];
                var inst_12460__$1 = state_12478[2];
                var inst_12461 = inst_12460__$1 == null;
                var inst_12462 = cljs.core.not.call(null, inst_12461);
                var state_12478__$1 = function() {
                  var statearr_12480 = state_12478;
                  statearr_12480[7] = inst_12460__$1;
                  return statearr_12480;
                }();
                if (inst_12462) {
                  var statearr_12481_12502 = state_12478__$1;
                  statearr_12481_12502[1] = 8;
                } else {
                  var statearr_12482_12503 = state_12478__$1;
                  statearr_12482_12503[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12479 === 1) {
                  var inst_12455 = 0;
                  var state_12478__$1 = function() {
                    var statearr_12483 = state_12478;
                    statearr_12483[8] = inst_12455;
                    return statearr_12483;
                  }();
                  var statearr_12484_12504 = state_12478__$1;
                  statearr_12484_12504[2] = null;
                  statearr_12484_12504[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12479 === 4) {
                    var state_12478__$1 = state_12478;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12478__$1, 7, ch);
                  } else {
                    if (state_val_12479 === 6) {
                      var inst_12473 = state_12478[2];
                      var state_12478__$1 = state_12478;
                      var statearr_12485_12505 = state_12478__$1;
                      statearr_12485_12505[2] = inst_12473;
                      statearr_12485_12505[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12479 === 3) {
                        var inst_12475 = state_12478[2];
                        var inst_12476 = cljs.core.async.close_BANG_.call(null, out);
                        var state_12478__$1 = function() {
                          var statearr_12486 = state_12478;
                          statearr_12486[9] = inst_12475;
                          return statearr_12486;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12478__$1, inst_12476);
                      } else {
                        if (state_val_12479 === 2) {
                          var inst_12455 = state_12478[8];
                          var inst_12457 = inst_12455 < n;
                          var state_12478__$1 = state_12478;
                          if (cljs.core.truth_(inst_12457)) {
                            var statearr_12487_12506 = state_12478__$1;
                            statearr_12487_12506[1] = 4;
                          } else {
                            var statearr_12488_12507 = state_12478__$1;
                            statearr_12488_12507[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12479 === 11) {
                            var inst_12455 = state_12478[8];
                            var inst_12465 = state_12478[2];
                            var inst_12466 = inst_12455 + 1;
                            var inst_12455__$1 = inst_12466;
                            var state_12478__$1 = function() {
                              var statearr_12489 = state_12478;
                              statearr_12489[8] = inst_12455__$1;
                              statearr_12489[10] = inst_12465;
                              return statearr_12489;
                            }();
                            var statearr_12490_12508 = state_12478__$1;
                            statearr_12490_12508[2] = null;
                            statearr_12490_12508[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12479 === 9) {
                              var state_12478__$1 = state_12478;
                              var statearr_12491_12509 = state_12478__$1;
                              statearr_12491_12509[2] = null;
                              statearr_12491_12509[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12479 === 5) {
                                var state_12478__$1 = state_12478;
                                var statearr_12492_12510 = state_12478__$1;
                                statearr_12492_12510[2] = null;
                                statearr_12492_12510[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12479 === 10) {
                                  var inst_12470 = state_12478[2];
                                  var state_12478__$1 = state_12478;
                                  var statearr_12493_12511 = state_12478__$1;
                                  statearr_12493_12511[2] = inst_12470;
                                  statearr_12493_12511[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12479 === 8) {
                                    var inst_12460 = state_12478[7];
                                    var state_12478__$1 = state_12478;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12478__$1, 11, out, inst_12460);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6521__auto___12501, out);
          return function(switch__6506__auto__, c__6521__auto___12501, out) {
            return function() {
              var state_machine__6507__auto__ = null;
              var state_machine__6507__auto____0 = function() {
                var statearr_12497 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_12497[0] = state_machine__6507__auto__;
                statearr_12497[1] = 1;
                return statearr_12497;
              };
              var state_machine__6507__auto____1 = function(state_12478) {
                while (true) {
                  var ret_value__6508__auto__ = function() {
                    try {
                      while (true) {
                        var result__6509__auto__ = switch__6506__auto__.call(null, state_12478);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6509__auto__;
                        }
                        break;
                      }
                    } catch (e12498) {
                      if (e12498 instanceof Object) {
                        var ex__6510__auto__ = e12498;
                        var statearr_12499_12512 = state_12478;
                        statearr_12499_12512[5] = ex__6510__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12478);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12498;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12513 = state_12478;
                    state_12478 = G__12513;
                    continue;
                  } else {
                    return ret_value__6508__auto__;
                  }
                  break;
                }
              };
              state_machine__6507__auto__ = function(state_12478) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6507__auto____0.call(this);
                  case 1:
                    return state_machine__6507__auto____1.call(this, state_12478);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
              return state_machine__6507__auto__;
            }();
          }(switch__6506__auto__, c__6521__auto___12501, out);
        }();
        var state__6523__auto__ = function() {
          var statearr_12500 = f__6522__auto__.call(null);
          statearr_12500[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto___12501;
          return statearr_12500;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
      };
    }(c__6521__auto___12501, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t12521 !== "undefined") {
  } else {
    cljs.core.async.t12521 = function(ch, f, map_LT_, meta12522) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta12522 = meta12522;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t12521.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t12521.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t12521.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t12521.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t12524 !== "undefined") {
        } else {
          cljs.core.async.t12524 = function(fn1, _, meta12522, map_LT_, f, ch, meta12525) {
            this.fn1 = fn1;
            this._ = _;
            this.meta12522 = meta12522;
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta12525 = meta12525;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t12524.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t12524.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t12524.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__12514_SHARP_) {
                  return f1.call(null, p1__12514_SHARP_ == null ? null : self__.f.call(null, p1__12514_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t12524.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_12526) {
              var self__ = this;
              var _12526__$1 = this;
              return self__.meta12525;
            };
          }(___$1);
          cljs.core.async.t12524.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_12526, meta12525__$1) {
              var self__ = this;
              var _12526__$1 = this;
              return new cljs.core.async.t12524(self__.fn1, self__._, self__.meta12522, self__.map_LT_, self__.f, self__.ch, meta12525__$1);
            };
          }(___$1);
          cljs.core.async.t12524.cljs$lang$type = true;
          cljs.core.async.t12524.cljs$lang$ctorStr = "cljs.core.async/t12524";
          cljs.core.async.t12524.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
              return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async/t12524");
            };
          }(___$1);
          cljs.core.async.__GT_t12524 = function(___$1) {
            return function __GT_t12524(fn1__$1, ___$2, meta12522__$1, map_LT___$1, f__$1, ch__$1, meta12525) {
              return new cljs.core.async.t12524(fn1__$1, ___$2, meta12522__$1, map_LT___$1, f__$1, ch__$1, meta12525);
            };
          }(___$1);
        }
        return new cljs.core.async.t12524(fn1, ___$1, self__.meta12522, self__.map_LT_, self__.f, self__.ch, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 46, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 737, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 731, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/brabadu/projects/prom-stats/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
        null));
      }());
      if (cljs.core.truth_(function() {
        var and__3634__auto__ = ret;
        if (cljs.core.truth_(and__3634__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3634__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t12521.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t12521.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t12521.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t12521.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12523) {
      var self__ = this;
      var _12523__$1 = this;
      return self__.meta12522;
    };
    cljs.core.async.t12521.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12523, meta12522__$1) {
      var self__ = this;
      var _12523__$1 = this;
      return new cljs.core.async.t12521(self__.ch, self__.f, self__.map_LT_, meta12522__$1);
    };
    cljs.core.async.t12521.cljs$lang$type = true;
    cljs.core.async.t12521.cljs$lang$ctorStr = "cljs.core.async/t12521";
    cljs.core.async.t12521.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
      return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async/t12521");
    };
    cljs.core.async.__GT_t12521 = function __GT_t12521(ch__$1, f__$1, map_LT___$1, meta12522) {
      return new cljs.core.async.t12521(ch__$1, f__$1, map_LT___$1, meta12522);
    };
  }
  return new cljs.core.async.t12521(ch, f, map_LT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 46, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 743, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 722, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/brabadu/projects/prom-stats/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t12530 !== "undefined") {
  } else {
    cljs.core.async.t12530 = function(ch, f, map_GT_, meta12531) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta12531 = meta12531;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t12530.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t12530.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t12530.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t12530.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t12530.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t12530.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t12530.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12532) {
      var self__ = this;
      var _12532__$1 = this;
      return self__.meta12531;
    };
    cljs.core.async.t12530.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12532, meta12531__$1) {
      var self__ = this;
      var _12532__$1 = this;
      return new cljs.core.async.t12530(self__.ch, self__.f, self__.map_GT_, meta12531__$1);
    };
    cljs.core.async.t12530.cljs$lang$type = true;
    cljs.core.async.t12530.cljs$lang$ctorStr = "cljs.core.async/t12530";
    cljs.core.async.t12530.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
      return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async/t12530");
    };
    cljs.core.async.__GT_t12530 = function __GT_t12530(ch__$1, f__$1, map_GT___$1, meta12531) {
      return new cljs.core.async.t12530(ch__$1, f__$1, map_GT___$1, meta12531);
    };
  }
  return new cljs.core.async.t12530(ch, f, map_GT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 34, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 757, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 748, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/brabadu/projects/prom-stats/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t12536 !== "undefined") {
  } else {
    cljs.core.async.t12536 = function(ch, p, filter_GT_, meta12537) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta12537 = meta12537;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t12536.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t12536.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t12536.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t12536.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t12536.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t12536.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t12536.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t12536.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12538) {
      var self__ = this;
      var _12538__$1 = this;
      return self__.meta12537;
    };
    cljs.core.async.t12536.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12538, meta12537__$1) {
      var self__ = this;
      var _12538__$1 = this;
      return new cljs.core.async.t12536(self__.ch, self__.p, self__.filter_GT_, meta12537__$1);
    };
    cljs.core.async.t12536.cljs$lang$type = true;
    cljs.core.async.t12536.cljs$lang$ctorStr = "cljs.core.async/t12536";
    cljs.core.async.t12536.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
      return cljs.core._write.call(null, writer__4234__auto__, "cljs.core.async/t12536");
    };
    cljs.core.async.__GT_t12536 = function __GT_t12536(ch__$1, p__$1, filter_GT___$1, meta12537) {
      return new cljs.core.async.t12536(ch__$1, p__$1, filter_GT___$1, meta12537);
    };
  }
  return new cljs.core.async.t12536(ch, p, filter_GT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 48, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 774, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 762, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/brabadu/projects/prom-stats/target/cljsbuild-compiler-0/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6521__auto___12621 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6521__auto___12621, out) {
      return function() {
        var f__6522__auto__ = function() {
          var switch__6506__auto__ = function(c__6521__auto___12621, out) {
            return function(state_12600) {
              var state_val_12601 = state_12600[1];
              if (state_val_12601 === 7) {
                var inst_12596 = state_12600[2];
                var state_12600__$1 = state_12600;
                var statearr_12602_12622 = state_12600__$1;
                statearr_12602_12622[2] = inst_12596;
                statearr_12602_12622[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12601 === 1) {
                  var state_12600__$1 = state_12600;
                  var statearr_12603_12623 = state_12600__$1;
                  statearr_12603_12623[2] = null;
                  statearr_12603_12623[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12601 === 4) {
                    var inst_12582 = state_12600[7];
                    var inst_12582__$1 = state_12600[2];
                    var inst_12583 = inst_12582__$1 == null;
                    var state_12600__$1 = function() {
                      var statearr_12604 = state_12600;
                      statearr_12604[7] = inst_12582__$1;
                      return statearr_12604;
                    }();
                    if (cljs.core.truth_(inst_12583)) {
                      var statearr_12605_12624 = state_12600__$1;
                      statearr_12605_12624[1] = 5;
                    } else {
                      var statearr_12606_12625 = state_12600__$1;
                      statearr_12606_12625[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12601 === 6) {
                      var inst_12582 = state_12600[7];
                      var inst_12587 = p.call(null, inst_12582);
                      var state_12600__$1 = state_12600;
                      if (cljs.core.truth_(inst_12587)) {
                        var statearr_12607_12626 = state_12600__$1;
                        statearr_12607_12626[1] = 8;
                      } else {
                        var statearr_12608_12627 = state_12600__$1;
                        statearr_12608_12627[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12601 === 3) {
                        var inst_12598 = state_12600[2];
                        var state_12600__$1 = state_12600;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12600__$1, inst_12598);
                      } else {
                        if (state_val_12601 === 2) {
                          var state_12600__$1 = state_12600;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12600__$1, 4, ch);
                        } else {
                          if (state_val_12601 === 11) {
                            var inst_12590 = state_12600[2];
                            var state_12600__$1 = state_12600;
                            var statearr_12609_12628 = state_12600__$1;
                            statearr_12609_12628[2] = inst_12590;
                            statearr_12609_12628[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12601 === 9) {
                              var state_12600__$1 = state_12600;
                              var statearr_12610_12629 = state_12600__$1;
                              statearr_12610_12629[2] = null;
                              statearr_12610_12629[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12601 === 5) {
                                var inst_12585 = cljs.core.async.close_BANG_.call(null, out);
                                var state_12600__$1 = state_12600;
                                var statearr_12611_12630 = state_12600__$1;
                                statearr_12611_12630[2] = inst_12585;
                                statearr_12611_12630[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12601 === 10) {
                                  var inst_12593 = state_12600[2];
                                  var state_12600__$1 = function() {
                                    var statearr_12612 = state_12600;
                                    statearr_12612[8] = inst_12593;
                                    return statearr_12612;
                                  }();
                                  var statearr_12613_12631 = state_12600__$1;
                                  statearr_12613_12631[2] = null;
                                  statearr_12613_12631[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12601 === 8) {
                                    var inst_12582 = state_12600[7];
                                    var state_12600__$1 = state_12600;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12600__$1, 11, out, inst_12582);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6521__auto___12621, out);
          return function(switch__6506__auto__, c__6521__auto___12621, out) {
            return function() {
              var state_machine__6507__auto__ = null;
              var state_machine__6507__auto____0 = function() {
                var statearr_12617 = [null, null, null, null, null, null, null, null, null];
                statearr_12617[0] = state_machine__6507__auto__;
                statearr_12617[1] = 1;
                return statearr_12617;
              };
              var state_machine__6507__auto____1 = function(state_12600) {
                while (true) {
                  var ret_value__6508__auto__ = function() {
                    try {
                      while (true) {
                        var result__6509__auto__ = switch__6506__auto__.call(null, state_12600);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6509__auto__;
                        }
                        break;
                      }
                    } catch (e12618) {
                      if (e12618 instanceof Object) {
                        var ex__6510__auto__ = e12618;
                        var statearr_12619_12632 = state_12600;
                        statearr_12619_12632[5] = ex__6510__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12600);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12618;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12633 = state_12600;
                    state_12600 = G__12633;
                    continue;
                  } else {
                    return ret_value__6508__auto__;
                  }
                  break;
                }
              };
              state_machine__6507__auto__ = function(state_12600) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6507__auto____0.call(this);
                  case 1:
                    return state_machine__6507__auto____1.call(this, state_12600);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
              return state_machine__6507__auto__;
            }();
          }(switch__6506__auto__, c__6521__auto___12621, out);
        }();
        var state__6523__auto__ = function() {
          var statearr_12620 = f__6522__auto__.call(null);
          statearr_12620[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto___12621;
          return statearr_12620;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
      };
    }(c__6521__auto___12621, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6521__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6521__auto__) {
    return function() {
      var f__6522__auto__ = function() {
        var switch__6506__auto__ = function(c__6521__auto__) {
          return function(state_12799) {
            var state_val_12800 = state_12799[1];
            if (state_val_12800 === 7) {
              var inst_12795 = state_12799[2];
              var state_12799__$1 = state_12799;
              var statearr_12801_12842 = state_12799__$1;
              statearr_12801_12842[2] = inst_12795;
              statearr_12801_12842[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12800 === 20) {
                var inst_12765 = state_12799[7];
                var inst_12776 = state_12799[2];
                var inst_12777 = cljs.core.next.call(null, inst_12765);
                var inst_12751 = inst_12777;
                var inst_12752 = null;
                var inst_12753 = 0;
                var inst_12754 = 0;
                var state_12799__$1 = function() {
                  var statearr_12802 = state_12799;
                  statearr_12802[8] = inst_12754;
                  statearr_12802[9] = inst_12776;
                  statearr_12802[10] = inst_12752;
                  statearr_12802[11] = inst_12751;
                  statearr_12802[12] = inst_12753;
                  return statearr_12802;
                }();
                var statearr_12803_12843 = state_12799__$1;
                statearr_12803_12843[2] = null;
                statearr_12803_12843[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12800 === 1) {
                  var state_12799__$1 = state_12799;
                  var statearr_12804_12844 = state_12799__$1;
                  statearr_12804_12844[2] = null;
                  statearr_12804_12844[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12800 === 4) {
                    var inst_12740 = state_12799[13];
                    var inst_12740__$1 = state_12799[2];
                    var inst_12741 = inst_12740__$1 == null;
                    var state_12799__$1 = function() {
                      var statearr_12805 = state_12799;
                      statearr_12805[13] = inst_12740__$1;
                      return statearr_12805;
                    }();
                    if (cljs.core.truth_(inst_12741)) {
                      var statearr_12806_12845 = state_12799__$1;
                      statearr_12806_12845[1] = 5;
                    } else {
                      var statearr_12807_12846 = state_12799__$1;
                      statearr_12807_12846[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12800 === 15) {
                      var state_12799__$1 = state_12799;
                      var statearr_12811_12847 = state_12799__$1;
                      statearr_12811_12847[2] = null;
                      statearr_12811_12847[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12800 === 21) {
                        var state_12799__$1 = state_12799;
                        var statearr_12812_12848 = state_12799__$1;
                        statearr_12812_12848[2] = null;
                        statearr_12812_12848[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12800 === 13) {
                          var inst_12754 = state_12799[8];
                          var inst_12752 = state_12799[10];
                          var inst_12751 = state_12799[11];
                          var inst_12753 = state_12799[12];
                          var inst_12761 = state_12799[2];
                          var inst_12762 = inst_12754 + 1;
                          var tmp12808 = inst_12752;
                          var tmp12809 = inst_12751;
                          var tmp12810 = inst_12753;
                          var inst_12751__$1 = tmp12809;
                          var inst_12752__$1 = tmp12808;
                          var inst_12753__$1 = tmp12810;
                          var inst_12754__$1 = inst_12762;
                          var state_12799__$1 = function() {
                            var statearr_12813 = state_12799;
                            statearr_12813[8] = inst_12754__$1;
                            statearr_12813[10] = inst_12752__$1;
                            statearr_12813[11] = inst_12751__$1;
                            statearr_12813[14] = inst_12761;
                            statearr_12813[12] = inst_12753__$1;
                            return statearr_12813;
                          }();
                          var statearr_12814_12849 = state_12799__$1;
                          statearr_12814_12849[2] = null;
                          statearr_12814_12849[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12800 === 22) {
                            var state_12799__$1 = state_12799;
                            var statearr_12815_12850 = state_12799__$1;
                            statearr_12815_12850[2] = null;
                            statearr_12815_12850[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12800 === 6) {
                              var inst_12740 = state_12799[13];
                              var inst_12749 = f.call(null, inst_12740);
                              var inst_12750 = cljs.core.seq.call(null, inst_12749);
                              var inst_12751 = inst_12750;
                              var inst_12752 = null;
                              var inst_12753 = 0;
                              var inst_12754 = 0;
                              var state_12799__$1 = function() {
                                var statearr_12816 = state_12799;
                                statearr_12816[8] = inst_12754;
                                statearr_12816[10] = inst_12752;
                                statearr_12816[11] = inst_12751;
                                statearr_12816[12] = inst_12753;
                                return statearr_12816;
                              }();
                              var statearr_12817_12851 = state_12799__$1;
                              statearr_12817_12851[2] = null;
                              statearr_12817_12851[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12800 === 17) {
                                var inst_12765 = state_12799[7];
                                var inst_12769 = cljs.core.chunk_first.call(null, inst_12765);
                                var inst_12770 = cljs.core.chunk_rest.call(null, inst_12765);
                                var inst_12771 = cljs.core.count.call(null, inst_12769);
                                var inst_12751 = inst_12770;
                                var inst_12752 = inst_12769;
                                var inst_12753 = inst_12771;
                                var inst_12754 = 0;
                                var state_12799__$1 = function() {
                                  var statearr_12818 = state_12799;
                                  statearr_12818[8] = inst_12754;
                                  statearr_12818[10] = inst_12752;
                                  statearr_12818[11] = inst_12751;
                                  statearr_12818[12] = inst_12753;
                                  return statearr_12818;
                                }();
                                var statearr_12819_12852 = state_12799__$1;
                                statearr_12819_12852[2] = null;
                                statearr_12819_12852[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12800 === 3) {
                                  var inst_12797 = state_12799[2];
                                  var state_12799__$1 = state_12799;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12799__$1, inst_12797);
                                } else {
                                  if (state_val_12800 === 12) {
                                    var inst_12785 = state_12799[2];
                                    var state_12799__$1 = state_12799;
                                    var statearr_12820_12853 = state_12799__$1;
                                    statearr_12820_12853[2] = inst_12785;
                                    statearr_12820_12853[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_12800 === 2) {
                                      var state_12799__$1 = state_12799;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12799__$1, 4, in$);
                                    } else {
                                      if (state_val_12800 === 23) {
                                        var inst_12793 = state_12799[2];
                                        var state_12799__$1 = state_12799;
                                        var statearr_12821_12854 = state_12799__$1;
                                        statearr_12821_12854[2] = inst_12793;
                                        statearr_12821_12854[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_12800 === 19) {
                                          var inst_12780 = state_12799[2];
                                          var state_12799__$1 = state_12799;
                                          var statearr_12822_12855 = state_12799__$1;
                                          statearr_12822_12855[2] = inst_12780;
                                          statearr_12822_12855[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_12800 === 11) {
                                            var inst_12765 = state_12799[7];
                                            var inst_12751 = state_12799[11];
                                            var inst_12765__$1 = cljs.core.seq.call(null, inst_12751);
                                            var state_12799__$1 = function() {
                                              var statearr_12823 = state_12799;
                                              statearr_12823[7] = inst_12765__$1;
                                              return statearr_12823;
                                            }();
                                            if (inst_12765__$1) {
                                              var statearr_12824_12856 = state_12799__$1;
                                              statearr_12824_12856[1] = 14;
                                            } else {
                                              var statearr_12825_12857 = state_12799__$1;
                                              statearr_12825_12857[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_12800 === 9) {
                                              var inst_12787 = state_12799[2];
                                              var inst_12788 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_12799__$1 = function() {
                                                var statearr_12826 = state_12799;
                                                statearr_12826[15] = inst_12787;
                                                return statearr_12826;
                                              }();
                                              if (cljs.core.truth_(inst_12788)) {
                                                var statearr_12827_12858 = state_12799__$1;
                                                statearr_12827_12858[1] = 21;
                                              } else {
                                                var statearr_12828_12859 = state_12799__$1;
                                                statearr_12828_12859[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_12800 === 5) {
                                                var inst_12743 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_12799__$1 = state_12799;
                                                var statearr_12829_12860 = state_12799__$1;
                                                statearr_12829_12860[2] = inst_12743;
                                                statearr_12829_12860[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_12800 === 14) {
                                                  var inst_12765 = state_12799[7];
                                                  var inst_12767 = cljs.core.chunked_seq_QMARK_.call(null, inst_12765);
                                                  var state_12799__$1 = state_12799;
                                                  if (inst_12767) {
                                                    var statearr_12830_12861 = state_12799__$1;
                                                    statearr_12830_12861[1] = 17;
                                                  } else {
                                                    var statearr_12831_12862 = state_12799__$1;
                                                    statearr_12831_12862[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_12800 === 16) {
                                                    var inst_12783 = state_12799[2];
                                                    var state_12799__$1 = state_12799;
                                                    var statearr_12832_12863 = state_12799__$1;
                                                    statearr_12832_12863[2] = inst_12783;
                                                    statearr_12832_12863[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_12800 === 10) {
                                                      var inst_12754 = state_12799[8];
                                                      var inst_12752 = state_12799[10];
                                                      var inst_12759 = cljs.core._nth.call(null, inst_12752, inst_12754);
                                                      var state_12799__$1 = state_12799;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12799__$1, 13, out, inst_12759);
                                                    } else {
                                                      if (state_val_12800 === 18) {
                                                        var inst_12765 = state_12799[7];
                                                        var inst_12774 = cljs.core.first.call(null, inst_12765);
                                                        var state_12799__$1 = state_12799;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12799__$1, 20, out, inst_12774);
                                                      } else {
                                                        if (state_val_12800 === 8) {
                                                          var inst_12754 = state_12799[8];
                                                          var inst_12753 = state_12799[12];
                                                          var inst_12756 = inst_12754 < inst_12753;
                                                          var inst_12757 = inst_12756;
                                                          var state_12799__$1 = state_12799;
                                                          if (cljs.core.truth_(inst_12757)) {
                                                            var statearr_12833_12864 = state_12799__$1;
                                                            statearr_12833_12864[1] = 10;
                                                          } else {
                                                            var statearr_12834_12865 = state_12799__$1;
                                                            statearr_12834_12865[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6521__auto__);
        return function(switch__6506__auto__, c__6521__auto__) {
          return function() {
            var state_machine__6507__auto__ = null;
            var state_machine__6507__auto____0 = function() {
              var statearr_12838 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12838[0] = state_machine__6507__auto__;
              statearr_12838[1] = 1;
              return statearr_12838;
            };
            var state_machine__6507__auto____1 = function(state_12799) {
              while (true) {
                var ret_value__6508__auto__ = function() {
                  try {
                    while (true) {
                      var result__6509__auto__ = switch__6506__auto__.call(null, state_12799);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6509__auto__;
                      }
                      break;
                    }
                  } catch (e12839) {
                    if (e12839 instanceof Object) {
                      var ex__6510__auto__ = e12839;
                      var statearr_12840_12866 = state_12799;
                      statearr_12840_12866[5] = ex__6510__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12799);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12839;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12867 = state_12799;
                  state_12799 = G__12867;
                  continue;
                } else {
                  return ret_value__6508__auto__;
                }
                break;
              }
            };
            state_machine__6507__auto__ = function(state_12799) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6507__auto____0.call(this);
                case 1:
                  return state_machine__6507__auto____1.call(this, state_12799);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
            state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
            return state_machine__6507__auto__;
          }();
        }(switch__6506__auto__, c__6521__auto__);
      }();
      var state__6523__auto__ = function() {
        var statearr_12841 = f__6522__auto__.call(null);
        statearr_12841[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto__;
        return statearr_12841;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
    };
  }(c__6521__auto__));
  return c__6521__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6521__auto___12964 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6521__auto___12964, out) {
      return function() {
        var f__6522__auto__ = function() {
          var switch__6506__auto__ = function(c__6521__auto___12964, out) {
            return function(state_12939) {
              var state_val_12940 = state_12939[1];
              if (state_val_12940 === 7) {
                var inst_12934 = state_12939[2];
                var state_12939__$1 = state_12939;
                var statearr_12941_12965 = state_12939__$1;
                statearr_12941_12965[2] = inst_12934;
                statearr_12941_12965[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12940 === 1) {
                  var inst_12916 = null;
                  var state_12939__$1 = function() {
                    var statearr_12942 = state_12939;
                    statearr_12942[7] = inst_12916;
                    return statearr_12942;
                  }();
                  var statearr_12943_12966 = state_12939__$1;
                  statearr_12943_12966[2] = null;
                  statearr_12943_12966[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12940 === 4) {
                    var inst_12919 = state_12939[8];
                    var inst_12919__$1 = state_12939[2];
                    var inst_12920 = inst_12919__$1 == null;
                    var inst_12921 = cljs.core.not.call(null, inst_12920);
                    var state_12939__$1 = function() {
                      var statearr_12944 = state_12939;
                      statearr_12944[8] = inst_12919__$1;
                      return statearr_12944;
                    }();
                    if (inst_12921) {
                      var statearr_12945_12967 = state_12939__$1;
                      statearr_12945_12967[1] = 5;
                    } else {
                      var statearr_12946_12968 = state_12939__$1;
                      statearr_12946_12968[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12940 === 6) {
                      var state_12939__$1 = state_12939;
                      var statearr_12947_12969 = state_12939__$1;
                      statearr_12947_12969[2] = null;
                      statearr_12947_12969[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12940 === 3) {
                        var inst_12936 = state_12939[2];
                        var inst_12937 = cljs.core.async.close_BANG_.call(null, out);
                        var state_12939__$1 = function() {
                          var statearr_12948 = state_12939;
                          statearr_12948[9] = inst_12936;
                          return statearr_12948;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12939__$1, inst_12937);
                      } else {
                        if (state_val_12940 === 2) {
                          var state_12939__$1 = state_12939;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12939__$1, 4, ch);
                        } else {
                          if (state_val_12940 === 11) {
                            var inst_12919 = state_12939[8];
                            var inst_12928 = state_12939[2];
                            var inst_12916 = inst_12919;
                            var state_12939__$1 = function() {
                              var statearr_12949 = state_12939;
                              statearr_12949[10] = inst_12928;
                              statearr_12949[7] = inst_12916;
                              return statearr_12949;
                            }();
                            var statearr_12950_12970 = state_12939__$1;
                            statearr_12950_12970[2] = null;
                            statearr_12950_12970[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12940 === 9) {
                              var inst_12919 = state_12939[8];
                              var state_12939__$1 = state_12939;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12939__$1, 11, out, inst_12919);
                            } else {
                              if (state_val_12940 === 5) {
                                var inst_12916 = state_12939[7];
                                var inst_12919 = state_12939[8];
                                var inst_12923 = cljs.core._EQ_.call(null, inst_12919, inst_12916);
                                var state_12939__$1 = state_12939;
                                if (inst_12923) {
                                  var statearr_12952_12971 = state_12939__$1;
                                  statearr_12952_12971[1] = 8;
                                } else {
                                  var statearr_12953_12972 = state_12939__$1;
                                  statearr_12953_12972[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12940 === 10) {
                                  var inst_12931 = state_12939[2];
                                  var state_12939__$1 = state_12939;
                                  var statearr_12954_12973 = state_12939__$1;
                                  statearr_12954_12973[2] = inst_12931;
                                  statearr_12954_12973[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12940 === 8) {
                                    var inst_12916 = state_12939[7];
                                    var tmp12951 = inst_12916;
                                    var inst_12916__$1 = tmp12951;
                                    var state_12939__$1 = function() {
                                      var statearr_12955 = state_12939;
                                      statearr_12955[7] = inst_12916__$1;
                                      return statearr_12955;
                                    }();
                                    var statearr_12956_12974 = state_12939__$1;
                                    statearr_12956_12974[2] = null;
                                    statearr_12956_12974[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6521__auto___12964, out);
          return function(switch__6506__auto__, c__6521__auto___12964, out) {
            return function() {
              var state_machine__6507__auto__ = null;
              var state_machine__6507__auto____0 = function() {
                var statearr_12960 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_12960[0] = state_machine__6507__auto__;
                statearr_12960[1] = 1;
                return statearr_12960;
              };
              var state_machine__6507__auto____1 = function(state_12939) {
                while (true) {
                  var ret_value__6508__auto__ = function() {
                    try {
                      while (true) {
                        var result__6509__auto__ = switch__6506__auto__.call(null, state_12939);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6509__auto__;
                        }
                        break;
                      }
                    } catch (e12961) {
                      if (e12961 instanceof Object) {
                        var ex__6510__auto__ = e12961;
                        var statearr_12962_12975 = state_12939;
                        statearr_12962_12975[5] = ex__6510__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12939);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12961;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12976 = state_12939;
                    state_12939 = G__12976;
                    continue;
                  } else {
                    return ret_value__6508__auto__;
                  }
                  break;
                }
              };
              state_machine__6507__auto__ = function(state_12939) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6507__auto____0.call(this);
                  case 1:
                    return state_machine__6507__auto____1.call(this, state_12939);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
              return state_machine__6507__auto__;
            }();
          }(switch__6506__auto__, c__6521__auto___12964, out);
        }();
        var state__6523__auto__ = function() {
          var statearr_12963 = f__6522__auto__.call(null);
          statearr_12963[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto___12964;
          return statearr_12963;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
      };
    }(c__6521__auto___12964, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6521__auto___13111 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6521__auto___13111, out) {
      return function() {
        var f__6522__auto__ = function() {
          var switch__6506__auto__ = function(c__6521__auto___13111, out) {
            return function(state_13081) {
              var state_val_13082 = state_13081[1];
              if (state_val_13082 === 7) {
                var inst_13077 = state_13081[2];
                var state_13081__$1 = state_13081;
                var statearr_13083_13112 = state_13081__$1;
                statearr_13083_13112[2] = inst_13077;
                statearr_13083_13112[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13082 === 1) {
                  var inst_13044 = new Array(n);
                  var inst_13045 = inst_13044;
                  var inst_13046 = 0;
                  var state_13081__$1 = function() {
                    var statearr_13084 = state_13081;
                    statearr_13084[7] = inst_13045;
                    statearr_13084[8] = inst_13046;
                    return statearr_13084;
                  }();
                  var statearr_13085_13113 = state_13081__$1;
                  statearr_13085_13113[2] = null;
                  statearr_13085_13113[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13082 === 4) {
                    var inst_13049 = state_13081[9];
                    var inst_13049__$1 = state_13081[2];
                    var inst_13050 = inst_13049__$1 == null;
                    var inst_13051 = cljs.core.not.call(null, inst_13050);
                    var state_13081__$1 = function() {
                      var statearr_13086 = state_13081;
                      statearr_13086[9] = inst_13049__$1;
                      return statearr_13086;
                    }();
                    if (inst_13051) {
                      var statearr_13087_13114 = state_13081__$1;
                      statearr_13087_13114[1] = 5;
                    } else {
                      var statearr_13088_13115 = state_13081__$1;
                      statearr_13088_13115[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13082 === 15) {
                      var inst_13071 = state_13081[2];
                      var state_13081__$1 = state_13081;
                      var statearr_13089_13116 = state_13081__$1;
                      statearr_13089_13116[2] = inst_13071;
                      statearr_13089_13116[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13082 === 13) {
                        var state_13081__$1 = state_13081;
                        var statearr_13090_13117 = state_13081__$1;
                        statearr_13090_13117[2] = null;
                        statearr_13090_13117[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13082 === 6) {
                          var inst_13046 = state_13081[8];
                          var inst_13067 = inst_13046 > 0;
                          var state_13081__$1 = state_13081;
                          if (cljs.core.truth_(inst_13067)) {
                            var statearr_13091_13118 = state_13081__$1;
                            statearr_13091_13118[1] = 12;
                          } else {
                            var statearr_13092_13119 = state_13081__$1;
                            statearr_13092_13119[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13082 === 3) {
                            var inst_13079 = state_13081[2];
                            var state_13081__$1 = state_13081;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13081__$1, inst_13079);
                          } else {
                            if (state_val_13082 === 12) {
                              var inst_13045 = state_13081[7];
                              var inst_13069 = cljs.core.vec.call(null, inst_13045);
                              var state_13081__$1 = state_13081;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13081__$1, 15, out, inst_13069);
                            } else {
                              if (state_val_13082 === 2) {
                                var state_13081__$1 = state_13081;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13081__$1, 4, ch);
                              } else {
                                if (state_val_13082 === 11) {
                                  var inst_13061 = state_13081[2];
                                  var inst_13062 = new Array(n);
                                  var inst_13045 = inst_13062;
                                  var inst_13046 = 0;
                                  var state_13081__$1 = function() {
                                    var statearr_13093 = state_13081;
                                    statearr_13093[7] = inst_13045;
                                    statearr_13093[10] = inst_13061;
                                    statearr_13093[8] = inst_13046;
                                    return statearr_13093;
                                  }();
                                  var statearr_13094_13120 = state_13081__$1;
                                  statearr_13094_13120[2] = null;
                                  statearr_13094_13120[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_13082 === 9) {
                                    var inst_13045 = state_13081[7];
                                    var inst_13059 = cljs.core.vec.call(null, inst_13045);
                                    var state_13081__$1 = state_13081;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13081__$1, 11, out, inst_13059);
                                  } else {
                                    if (state_val_13082 === 5) {
                                      var inst_13049 = state_13081[9];
                                      var inst_13054 = state_13081[11];
                                      var inst_13045 = state_13081[7];
                                      var inst_13046 = state_13081[8];
                                      var inst_13053 = inst_13045[inst_13046] = inst_13049;
                                      var inst_13054__$1 = inst_13046 + 1;
                                      var inst_13055 = inst_13054__$1 < n;
                                      var state_13081__$1 = function() {
                                        var statearr_13095 = state_13081;
                                        statearr_13095[12] = inst_13053;
                                        statearr_13095[11] = inst_13054__$1;
                                        return statearr_13095;
                                      }();
                                      if (cljs.core.truth_(inst_13055)) {
                                        var statearr_13096_13121 = state_13081__$1;
                                        statearr_13096_13121[1] = 8;
                                      } else {
                                        var statearr_13097_13122 = state_13081__$1;
                                        statearr_13097_13122[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_13082 === 14) {
                                        var inst_13074 = state_13081[2];
                                        var inst_13075 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_13081__$1 = function() {
                                          var statearr_13099 = state_13081;
                                          statearr_13099[13] = inst_13074;
                                          return statearr_13099;
                                        }();
                                        var statearr_13100_13123 = state_13081__$1;
                                        statearr_13100_13123[2] = inst_13075;
                                        statearr_13100_13123[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_13082 === 10) {
                                          var inst_13065 = state_13081[2];
                                          var state_13081__$1 = state_13081;
                                          var statearr_13101_13124 = state_13081__$1;
                                          statearr_13101_13124[2] = inst_13065;
                                          statearr_13101_13124[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_13082 === 8) {
                                            var inst_13054 = state_13081[11];
                                            var inst_13045 = state_13081[7];
                                            var tmp13098 = inst_13045;
                                            var inst_13045__$1 = tmp13098;
                                            var inst_13046 = inst_13054;
                                            var state_13081__$1 = function() {
                                              var statearr_13102 = state_13081;
                                              statearr_13102[7] = inst_13045__$1;
                                              statearr_13102[8] = inst_13046;
                                              return statearr_13102;
                                            }();
                                            var statearr_13103_13125 = state_13081__$1;
                                            statearr_13103_13125[2] = null;
                                            statearr_13103_13125[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6521__auto___13111, out);
          return function(switch__6506__auto__, c__6521__auto___13111, out) {
            return function() {
              var state_machine__6507__auto__ = null;
              var state_machine__6507__auto____0 = function() {
                var statearr_13107 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_13107[0] = state_machine__6507__auto__;
                statearr_13107[1] = 1;
                return statearr_13107;
              };
              var state_machine__6507__auto____1 = function(state_13081) {
                while (true) {
                  var ret_value__6508__auto__ = function() {
                    try {
                      while (true) {
                        var result__6509__auto__ = switch__6506__auto__.call(null, state_13081);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6509__auto__;
                        }
                        break;
                      }
                    } catch (e13108) {
                      if (e13108 instanceof Object) {
                        var ex__6510__auto__ = e13108;
                        var statearr_13109_13126 = state_13081;
                        statearr_13109_13126[5] = ex__6510__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13081);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e13108;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__13127 = state_13081;
                    state_13081 = G__13127;
                    continue;
                  } else {
                    return ret_value__6508__auto__;
                  }
                  break;
                }
              };
              state_machine__6507__auto__ = function(state_13081) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6507__auto____0.call(this);
                  case 1:
                    return state_machine__6507__auto____1.call(this, state_13081);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
              return state_machine__6507__auto__;
            }();
          }(switch__6506__auto__, c__6521__auto___13111, out);
        }();
        var state__6523__auto__ = function() {
          var statearr_13110 = f__6522__auto__.call(null);
          statearr_13110[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto___13111;
          return statearr_13110;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
      };
    }(c__6521__auto___13111, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6521__auto___13270 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6521__auto___13270, out) {
      return function() {
        var f__6522__auto__ = function() {
          var switch__6506__auto__ = function(c__6521__auto___13270, out) {
            return function(state_13240) {
              var state_val_13241 = state_13240[1];
              if (state_val_13241 === 7) {
                var inst_13236 = state_13240[2];
                var state_13240__$1 = state_13240;
                var statearr_13242_13271 = state_13240__$1;
                statearr_13242_13271[2] = inst_13236;
                statearr_13242_13271[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13241 === 1) {
                  var inst_13199 = [];
                  var inst_13200 = inst_13199;
                  var inst_13201 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_13240__$1 = function() {
                    var statearr_13243 = state_13240;
                    statearr_13243[7] = inst_13201;
                    statearr_13243[8] = inst_13200;
                    return statearr_13243;
                  }();
                  var statearr_13244_13272 = state_13240__$1;
                  statearr_13244_13272[2] = null;
                  statearr_13244_13272[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13241 === 4) {
                    var inst_13204 = state_13240[9];
                    var inst_13204__$1 = state_13240[2];
                    var inst_13205 = inst_13204__$1 == null;
                    var inst_13206 = cljs.core.not.call(null, inst_13205);
                    var state_13240__$1 = function() {
                      var statearr_13245 = state_13240;
                      statearr_13245[9] = inst_13204__$1;
                      return statearr_13245;
                    }();
                    if (inst_13206) {
                      var statearr_13246_13273 = state_13240__$1;
                      statearr_13246_13273[1] = 5;
                    } else {
                      var statearr_13247_13274 = state_13240__$1;
                      statearr_13247_13274[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13241 === 15) {
                      var inst_13230 = state_13240[2];
                      var state_13240__$1 = state_13240;
                      var statearr_13248_13275 = state_13240__$1;
                      statearr_13248_13275[2] = inst_13230;
                      statearr_13248_13275[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13241 === 13) {
                        var state_13240__$1 = state_13240;
                        var statearr_13249_13276 = state_13240__$1;
                        statearr_13249_13276[2] = null;
                        statearr_13249_13276[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13241 === 6) {
                          var inst_13200 = state_13240[8];
                          var inst_13225 = inst_13200.length;
                          var inst_13226 = inst_13225 > 0;
                          var state_13240__$1 = state_13240;
                          if (cljs.core.truth_(inst_13226)) {
                            var statearr_13250_13277 = state_13240__$1;
                            statearr_13250_13277[1] = 12;
                          } else {
                            var statearr_13251_13278 = state_13240__$1;
                            statearr_13251_13278[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13241 === 3) {
                            var inst_13238 = state_13240[2];
                            var state_13240__$1 = state_13240;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13240__$1, inst_13238);
                          } else {
                            if (state_val_13241 === 12) {
                              var inst_13200 = state_13240[8];
                              var inst_13228 = cljs.core.vec.call(null, inst_13200);
                              var state_13240__$1 = state_13240;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13240__$1, 15, out, inst_13228);
                            } else {
                              if (state_val_13241 === 2) {
                                var state_13240__$1 = state_13240;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13240__$1, 4, ch);
                              } else {
                                if (state_val_13241 === 11) {
                                  var inst_13204 = state_13240[9];
                                  var inst_13208 = state_13240[10];
                                  var inst_13218 = state_13240[2];
                                  var inst_13219 = [];
                                  var inst_13220 = inst_13219.push(inst_13204);
                                  var inst_13200 = inst_13219;
                                  var inst_13201 = inst_13208;
                                  var state_13240__$1 = function() {
                                    var statearr_13252 = state_13240;
                                    statearr_13252[11] = inst_13218;
                                    statearr_13252[12] = inst_13220;
                                    statearr_13252[7] = inst_13201;
                                    statearr_13252[8] = inst_13200;
                                    return statearr_13252;
                                  }();
                                  var statearr_13253_13279 = state_13240__$1;
                                  statearr_13253_13279[2] = null;
                                  statearr_13253_13279[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_13241 === 9) {
                                    var inst_13200 = state_13240[8];
                                    var inst_13216 = cljs.core.vec.call(null, inst_13200);
                                    var state_13240__$1 = state_13240;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13240__$1, 11, out, inst_13216);
                                  } else {
                                    if (state_val_13241 === 5) {
                                      var inst_13204 = state_13240[9];
                                      var inst_13208 = state_13240[10];
                                      var inst_13201 = state_13240[7];
                                      var inst_13208__$1 = f.call(null, inst_13204);
                                      var inst_13209 = cljs.core._EQ_.call(null, inst_13208__$1, inst_13201);
                                      var inst_13210 = cljs.core.keyword_identical_QMARK_.call(null, inst_13201, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_13211 = inst_13209 || inst_13210;
                                      var state_13240__$1 = function() {
                                        var statearr_13254 = state_13240;
                                        statearr_13254[10] = inst_13208__$1;
                                        return statearr_13254;
                                      }();
                                      if (cljs.core.truth_(inst_13211)) {
                                        var statearr_13255_13280 = state_13240__$1;
                                        statearr_13255_13280[1] = 8;
                                      } else {
                                        var statearr_13256_13281 = state_13240__$1;
                                        statearr_13256_13281[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_13241 === 14) {
                                        var inst_13233 = state_13240[2];
                                        var inst_13234 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_13240__$1 = function() {
                                          var statearr_13258 = state_13240;
                                          statearr_13258[13] = inst_13233;
                                          return statearr_13258;
                                        }();
                                        var statearr_13259_13282 = state_13240__$1;
                                        statearr_13259_13282[2] = inst_13234;
                                        statearr_13259_13282[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_13241 === 10) {
                                          var inst_13223 = state_13240[2];
                                          var state_13240__$1 = state_13240;
                                          var statearr_13260_13283 = state_13240__$1;
                                          statearr_13260_13283[2] = inst_13223;
                                          statearr_13260_13283[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_13241 === 8) {
                                            var inst_13204 = state_13240[9];
                                            var inst_13208 = state_13240[10];
                                            var inst_13200 = state_13240[8];
                                            var inst_13213 = inst_13200.push(inst_13204);
                                            var tmp13257 = inst_13200;
                                            var inst_13200__$1 = tmp13257;
                                            var inst_13201 = inst_13208;
                                            var state_13240__$1 = function() {
                                              var statearr_13261 = state_13240;
                                              statearr_13261[14] = inst_13213;
                                              statearr_13261[7] = inst_13201;
                                              statearr_13261[8] = inst_13200__$1;
                                              return statearr_13261;
                                            }();
                                            var statearr_13262_13284 = state_13240__$1;
                                            statearr_13262_13284[2] = null;
                                            statearr_13262_13284[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6521__auto___13270, out);
          return function(switch__6506__auto__, c__6521__auto___13270, out) {
            return function() {
              var state_machine__6507__auto__ = null;
              var state_machine__6507__auto____0 = function() {
                var statearr_13266 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_13266[0] = state_machine__6507__auto__;
                statearr_13266[1] = 1;
                return statearr_13266;
              };
              var state_machine__6507__auto____1 = function(state_13240) {
                while (true) {
                  var ret_value__6508__auto__ = function() {
                    try {
                      while (true) {
                        var result__6509__auto__ = switch__6506__auto__.call(null, state_13240);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6509__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6509__auto__;
                        }
                        break;
                      }
                    } catch (e13267) {
                      if (e13267 instanceof Object) {
                        var ex__6510__auto__ = e13267;
                        var statearr_13268_13285 = state_13240;
                        statearr_13268_13285[5] = ex__6510__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13240);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e13267;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6508__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__13286 = state_13240;
                    state_13240 = G__13286;
                    continue;
                  } else {
                    return ret_value__6508__auto__;
                  }
                  break;
                }
              };
              state_machine__6507__auto__ = function(state_13240) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6507__auto____0.call(this);
                  case 1:
                    return state_machine__6507__auto____1.call(this, state_13240);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6507__auto____0;
              state_machine__6507__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6507__auto____1;
              return state_machine__6507__auto__;
            }();
          }(switch__6506__auto__, c__6521__auto___13270, out);
        }();
        var state__6523__auto__ = function() {
          var statearr_13269 = f__6522__auto__.call(null);
          statearr_13269[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6521__auto___13270;
          return statearr_13269;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6523__auto__);
      };
    }(c__6521__auto___13270, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("goog.dom");
goog.require("om.dom");
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_descriptor_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core._STAR_root_key_STAR_ = null;
om.core.IDisplayName = function() {
  var obj6213 = {};
  return obj6213;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core.display_name[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core.display_name["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj6215 = {};
  return obj6215;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core.init_state[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core.init_state["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj6217 = {};
  return obj6217;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core.should_update[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core.should_update["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj6219 = {};
  return obj6219;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core.will_mount[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core.will_mount["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj6221 = {};
  return obj6221;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core.did_mount[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core.did_mount["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj6223 = {};
  return obj6223;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core.will_unmount[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core.will_unmount["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj6225 = {};
  return obj6225;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core.will_update[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core.will_update["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj6227 = {};
  return obj6227;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core.did_update[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core.did_update["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj6229 = {};
  return obj6229;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core.will_receive_props[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core.will_receive_props["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj6231 = {};
  return obj6231;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core.render[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core.render["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderProps = function() {
  var obj6233 = {};
  return obj6233;
}();
om.core.render_props = function render_props(this$, props, state) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IRenderProps$render_props$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IRenderProps$render_props$arity$3(this$, props, state);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core.render_props[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core.render_props["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderProps.render-props", this$);
        }
      }
    }().call(null, this$, props, state);
  }
};
om.core.IRenderState = function() {
  var obj6235 = {};
  return obj6235;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core.render_state[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core.render_state["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.ICheckState = function() {
  var obj6237 = {};
  return obj6237;
}();
om.core.IOmSwap = function() {
  var obj6239 = {};
  return obj6239;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj6241 = {};
  return obj6241;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = om.core._get_state[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = om.core._get_state["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = om.core._get_state[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = om.core._get_state["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj6243 = {};
  return obj6243;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = om.core._get_render_state[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = om.core._get_render_state["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = om.core._get_render_state[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = om.core._get_render_state["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj6245 = {};
  return obj6245;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___3 = function(this$, val, render) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, val, render);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val, render);
    }
  };
  var _set_state_BANG___4 = function(this$, ks, val, render) {
    if (function() {
      var and__3634__auto__ = this$;
      if (and__3634__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$4;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$4(this$, ks, val, render);
    } else {
      var x__4290__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3646__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val, render);
    }
  };
  _set_state_BANG_ = function(this$, ks, val, render) {
    switch(arguments.length) {
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
      case 4:
        return _set_state_BANG___4.call(this, this$, ks, val, render);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$4 = _set_state_BANG___4;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj6247 = {};
  return obj6247;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core._get_queue[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._get_queue["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj6249 = {};
  return obj6249;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3634__auto__ = x;
    if (and__3634__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4290__auto__ = x == null ? null : x;
    return function() {
      var or__3646__auto__ = om.core._value[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._value["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj6251 = {};
  return obj6251;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3634__auto__ = cursor;
    if (and__3634__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4290__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3646__auto__ = om.core._path[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._path["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3634__auto__ = cursor;
    if (and__3634__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4290__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3646__auto__ = om.core._state[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._state["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj6253 = {};
  return obj6253;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3634__auto__ = value;
      if (and__3634__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4290__auto__ = value == null ? null : value;
      return function() {
        var or__3646__auto__ = om.core._to_cursor[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = om.core._to_cursor["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3634__auto__ = value;
      if (and__3634__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3634__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4290__auto__ = value == null ? null : value;
      return function() {
        var or__3646__auto__ = om.core._to_cursor[goog.typeOf(x__4290__auto__)];
        if (or__3646__auto__) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = om.core._to_cursor["_"];
          if (or__3646__auto____$1) {
            return or__3646__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj6255 = {};
  return obj6255;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3634__auto__ = cursor;
    if (and__3634__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4290__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3646__auto__ = om.core._derive[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._derive["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj6257 = {};
  return obj6257;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3634__auto__ = cursor;
    if (and__3634__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4290__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3646__auto__ = om.core._transact_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj6259 = {};
  return obj6259;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3634__auto__ = x;
    if (and__3634__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4290__auto__ = x == null ? null : x;
    return function() {
      var or__3646__auto__ = om.core._listen_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3634__auto__ = x;
    if (and__3634__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4290__auto__ = x == null ? null : x;
    return function() {
      var or__3646__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3634__auto__ = x;
    if (and__3634__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4290__auto__ = x == null ? null : x;
    return function() {
      var or__3646__auto__ = om.core._notify_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.IRootProperties = function() {
  var obj6261 = {};
  return obj6261;
}();
om.core._set_property_BANG_ = function _set_property_BANG_(this$, id, p, val) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IRootProperties$_set_property_BANG_$arity$4;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_set_property_BANG_$arity$4(this$, id, p, val);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core._set_property_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._set_property_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-set-property!", this$);
        }
      }
    }().call(null, this$, id, p, val);
  }
};
om.core._remove_property_BANG_ = function _remove_property_BANG_(this$, id, p) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IRootProperties$_remove_property_BANG_$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_remove_property_BANG_$arity$3(this$, id, p);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core._remove_property_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._remove_property_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-remove-property!", this$);
        }
      }
    }().call(null, this$, id, p);
  }
};
om.core._remove_properties_BANG_ = function _remove_properties_BANG_(this$, id) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IRootProperties$_remove_properties_BANG_$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_remove_properties_BANG_$arity$2(this$, id);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core._remove_properties_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._remove_properties_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-remove-properties!", this$);
        }
      }
    }().call(null, this$, id);
  }
};
om.core._get_property = function _get_property(this$, id, p) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IRootProperties$_get_property$arity$3;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_get_property$arity$3(this$, id, p);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core._get_property[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._get_property["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-get-property", this$);
        }
      }
    }().call(null, this$, id, p);
  }
};
om.core.IRootKey = function() {
  var obj6263 = {};
  return obj6263;
}();
om.core._root_key = function _root_key(cursor) {
  if (function() {
    var and__3634__auto__ = cursor;
    if (and__3634__auto__) {
      return cursor.om$core$IRootKey$_root_key$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return cursor.om$core$IRootKey$_root_key$arity$1(cursor);
  } else {
    var x__4290__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3646__auto__ = om.core._root_key[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._root_key["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootKey.-root-key", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IAdapt = function() {
  var obj6265 = {};
  return obj6265;
}();
om.core._adapt = function _adapt(this$, other) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IAdapt$_adapt$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IAdapt$_adapt$arity$2(this$, other);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core._adapt[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._adapt["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAdapt.-adapt", this$);
        }
      }
    }().call(null, this$, other);
  }
};
om.core.IAdapt["_"] = true;
om.core._adapt["_"] = function(_, other) {
  return other;
};
om.core.adapt = function adapt(x, other) {
  return om.core._adapt.call(null, x, other);
};
om.core.IOmRef = function() {
  var obj6267 = {};
  return obj6267;
}();
om.core._add_dep_BANG_ = function _add_dep_BANG_(this$, c) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IOmRef$_add_dep_BANG_$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_add_dep_BANG_$arity$2(this$, c);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core._add_dep_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._add_dep_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-add-dep!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._remove_dep_BANG_ = function _remove_dep_BANG_(this$, c) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IOmRef$_remove_dep_BANG_$arity$2;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_remove_dep_BANG_$arity$2(this$, c);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core._remove_dep_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._remove_dep_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-remove-dep!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._refresh_deps_BANG_ = function _refresh_deps_BANG_(this$) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IOmRef$_refresh_deps_BANG_$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_refresh_deps_BANG_$arity$1(this$);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core._refresh_deps_BANG_[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._refresh_deps_BANG_["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-refresh-deps!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._get_deps = function _get_deps(this$) {
  if (function() {
    var and__3634__auto__ = this$;
    if (and__3634__auto__) {
      return this$.om$core$IOmRef$_get_deps$arity$1;
    } else {
      return and__3634__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_get_deps$arity$1(this$);
  } else {
    var x__4290__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3646__auto__ = om.core._get_deps[goog.typeOf(x__4290__auto__)];
      if (or__3646__auto__) {
        return or__3646__auto__;
      } else {
        var or__3646__auto____$1 = om.core._get_deps["_"];
        if (or__3646__auto____$1) {
          return or__3646__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-get-deps", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__6269 = state;
    if (G__6269) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6269.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__6269.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__6269);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__6269);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", -1038866178))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "old-value", "old-value", 862546795), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 1087038368), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1039580704), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    -490349212), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__6271 = x;
  if (G__6271) {
    var bit__4327__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3646__auto__ = bit__4327__auto__;
      if (cljs.core.truth_(or__3646__auto__)) {
        return or__3646__auto__;
      } else {
        return G__6271.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__6271.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__6271);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__6271);
  }
};
om.core.component_QMARK_ = function component_QMARK_(x) {
  return x["isOmComponent"];
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.ifn_QMARK_.call(null, c)) {
    return node.props.children = c.call(null, node);
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, x))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))].join(""));
  }
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4126__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var pending_state = temp__4126__auto__;
    var G__6273 = state;
    G__6273["__om_prev_state"] = state["__om_state"];
    G__6273["__om_state"] = pending_state;
    G__6273["__om_pending_state"] = null;
    return G__6273;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3646__auto__ = props;
      if (cljs.core.truth_(or__3646__auto__)) {
        return or__3646__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4126__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4126__auto__)) {
      var props_state = temp__4126__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3646__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.ref_changed_QMARK_ = function ref_changed_QMARK_(ref) {
  var val = om.core.value.call(null, ref);
  var val_SINGLEQUOTE_ = cljs.core.get_in.call(null, cljs.core.deref.call(null, om.core.state.call(null, ref)), om.core.path.call(null, ref), new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275));
  return cljs.core.not_EQ_.call(null, val, val_SINGLEQUOTE_);
};
om.core.update_refs = function update_refs(c) {
  var cstate = c.state;
  var refs = cstate["__om_refs"];
  if (cljs.core.count.call(null, refs) === 0) {
    return null;
  } else {
    return cstate["__om_refs"] = cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.filter.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, function(cstate, refs) {
      return function(ref) {
        var ref_val = om.core.value.call(null, ref);
        var ref_state = om.core.state.call(null, ref);
        var ref_path = om.core.path.call(null, ref);
        var ref_val_SINGLEQUOTE_ = cljs.core.get_in.call(null, cljs.core.deref.call(null, ref_state), ref_path, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275));
        if (cljs.core.not_EQ_.call(null, ref_val, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275))) {
          if (cljs.core.not_EQ_.call(null, ref_val, ref_val_SINGLEQUOTE_)) {
            return om.core.adapt.call(null, ref, om.core.to_cursor.call(null, ref_val_SINGLEQUOTE_, ref_state, ref_path));
          } else {
            return ref;
          }
        } else {
          return null;
        }
      };
    }(cstate, refs), refs)));
  }
};
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), new cljs.core.Keyword(null, "isOmComponent", "isOmComponent", -2070015162), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 559988974), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), 
new cljs.core.Keyword(null, "render", "render", -1408033454), new cljs.core.Keyword(null, "componentWillUpdate", "componentWillUpdate", 657390932), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 1324429466), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__6275 = c;
    if (G__6275) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6275.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__6275.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__6275);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__6275);
    }
  }()) {
    var state_6296 = this$.state;
    om.core.did_update.call(null, c, om.core.get_props.call(null, {"isOmComponent":true, "props":prev_props}), function() {
      var or__3646__auto__ = state_6296["__om_prev_state"];
      if (cljs.core.truth_(or__3646__auto__)) {
        return or__3646__auto__;
      } else {
        return state_6296["__om_state"];
      }
    }());
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, true, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var cursor = this$.props["__om_cursor"];
  if (function() {
    var G__6276 = c;
    if (G__6276) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6276.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__6276.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__6276);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__6276);
    }
  }()) {
    om.core.will_unmount.call(null, c);
  } else {
  }
  var temp__4126__auto__ = cljs.core.seq.call(null, this$.state["__om_refs"]);
  if (temp__4126__auto__) {
    var refs = temp__4126__auto__;
    var seq__6277 = cljs.core.seq.call(null, refs);
    var chunk__6278 = null;
    var count__6279 = 0;
    var i__6280 = 0;
    while (true) {
      if (i__6280 < count__6279) {
        var ref = cljs.core._nth.call(null, chunk__6278, i__6280);
        om.core.unobserve.call(null, this$, ref);
        var G__6297 = seq__6277;
        var G__6298 = chunk__6278;
        var G__6299 = count__6279;
        var G__6300 = i__6280 + 1;
        seq__6277 = G__6297;
        chunk__6278 = G__6298;
        count__6279 = G__6299;
        i__6280 = G__6300;
        continue;
      } else {
        var temp__4126__auto____$1 = cljs.core.seq.call(null, seq__6277);
        if (temp__4126__auto____$1) {
          var seq__6277__$1 = temp__4126__auto____$1;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6277__$1)) {
            var c__4433__auto__ = cljs.core.chunk_first.call(null, seq__6277__$1);
            var G__6301 = cljs.core.chunk_rest.call(null, seq__6277__$1);
            var G__6302 = c__4433__auto__;
            var G__6303 = cljs.core.count.call(null, c__4433__auto__);
            var G__6304 = 0;
            seq__6277 = G__6301;
            chunk__6278 = G__6302;
            count__6279 = G__6303;
            i__6280 = G__6304;
            continue;
          } else {
            var ref = cljs.core.first.call(null, seq__6277__$1);
            om.core.unobserve.call(null, this$, ref);
            var G__6305 = cljs.core.next.call(null, seq__6277__$1);
            var G__6306 = null;
            var G__6307 = 0;
            var G__6308 = 0;
            seq__6277 = G__6305;
            chunk__6278 = G__6306;
            count__6279 = G__6307;
            i__6280 = G__6308;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__6281 = c;
    if (G__6281) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6281.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__6281.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__6281);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__6281);
    }
  }()) {
    return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"isOmComponent":true, "props":next_props}));
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var props = this$.props;
  var state = this$.state;
  var c = om.core.children.call(null, this$);
  om.core.merge_props_state.call(null, this$, next_props);
  if (function() {
    var G__6282 = c;
    if (G__6282) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6282.om$core$IShouldUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__6282.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__6282);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__6282);
    }
  }()) {
    return om.core.should_update.call(null, c, om.core.get_props.call(null, {"isOmComponent":true, "props":next_props}), om.core._get_state.call(null, this$));
  } else {
    var cursor = props["__om_cursor"];
    var next_cursor = next_props["__om_cursor"];
    if (cljs.core.not_EQ_.call(null, om.core._value.call(null, cursor), om.core._value.call(null, next_cursor))) {
      return true;
    } else {
      if (om.core.cursor_QMARK_.call(null, cursor) && om.core.cursor_QMARK_.call(null, next_cursor) && cljs.core.not_EQ_.call(null, om.core._path.call(null, cursor), om.core._path.call(null, next_cursor))) {
        return true;
      } else {
        if (cljs.core.not_EQ_.call(null, om.core._get_state.call(null, this$), om.core._get_render_state.call(null, this$))) {
          return true;
        } else {
          if (cljs.core.truth_(function() {
            var and__3634__auto__ = !(cljs.core.count.call(null, state["__om_refs"]) === 0);
            if (and__3634__auto__) {
              return cljs.core.some.call(null, function(and__3634__auto__, cursor, next_cursor, props, state, c, this$) {
                return function(p1__6274_SHARP_) {
                  return om.core.ref_changed_QMARK_.call(null, p1__6274_SHARP_);
                };
              }(and__3634__auto__, cursor, next_cursor, props, state, c, this$), state["__om_refs"]);
            } else {
              return and__3634__auto__;
            }
          }())) {
            return true;
          } else {
            if (!(props["__om_index"] === next_props["__om_index"])) {
              return true;
            } else {
              return false;
            }
          }
        }
      }
    }
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_parent_STAR_6283 = om.core._STAR_parent_STAR_;
  var _STAR_state_STAR_6284 = om.core._STAR_state_STAR_;
  var _STAR_instrument_STAR_6285 = om.core._STAR_instrument_STAR_;
  var _STAR_descriptor_STAR_6286 = om.core._STAR_descriptor_STAR_;
  var _STAR_root_key_STAR_6287 = om.core._STAR_root_key_STAR_;
  try {
    om.core._STAR_parent_STAR_ = this$;
    om.core._STAR_state_STAR_ = props["__om_app_state"];
    om.core._STAR_instrument_STAR_ = props["__om_instrument"];
    om.core._STAR_descriptor_STAR_ = props["__om_descriptor"];
    om.core._STAR_root_key_STAR_ = props["__om_root_key"];
    if (function() {
      var G__6288 = c;
      if (G__6288) {
        var bit__4327__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3646__auto__ = bit__4327__auto__;
          if (cljs.core.truth_(or__3646__auto__)) {
            return or__3646__auto__;
          } else {
            return G__6288.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__6288.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__6288);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__6288);
      }
    }()) {
      return om.core.render.call(null, c);
    } else {
      if (function() {
        var G__6289 = c;
        if (G__6289) {
          var bit__4327__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3646__auto__ = bit__4327__auto__;
            if (cljs.core.truth_(or__3646__auto__)) {
              return or__3646__auto__;
            } else {
              return G__6289.om$core$IRenderProps$;
            }
          }())) {
            return true;
          } else {
            if (!G__6289.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__6289);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__6289);
        }
      }()) {
        return om.core.render_props.call(null, c, props["__om_cursor"], om.core.get_state.call(null, this$));
      } else {
        if (function() {
          var G__6290 = c;
          if (G__6290) {
            var bit__4327__auto__ = null;
            if (cljs.core.truth_(function() {
              var or__3646__auto__ = bit__4327__auto__;
              if (cljs.core.truth_(or__3646__auto__)) {
                return or__3646__auto__;
              } else {
                return G__6290.om$core$IRenderState$;
              }
            }())) {
              return true;
            } else {
              if (!G__6290.cljs$lang$protocol_mask$partition$) {
                return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__6290);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__6290);
          }
        }()) {
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } else {
          return c;
        }
      }
    }
  } finally {
    om.core._STAR_root_key_STAR_ = _STAR_root_key_STAR_6287;
    om.core._STAR_descriptor_STAR_ = _STAR_descriptor_STAR_6286;
    om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_6285;
    om.core._STAR_state_STAR_ = _STAR_state_STAR_6284;
    om.core._STAR_parent_STAR_ = _STAR_parent_STAR_6283;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_6309 = om.core.children.call(null, this$);
  if (function() {
    var G__6291 = c_6309;
    if (G__6291) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6291.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__6291.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__6291);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__6291);
    }
  }()) {
    var state_6310 = this$.state;
    om.core.will_update.call(null, c_6309, om.core.get_props.call(null, {"isOmComponent":true, "props":next_props}), om.core._get_state.call(null, this$));
  } else {
  }
  om.core.merge_pending_state.call(null, this$);
  return om.core.update_refs.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3646__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3646__auto__)) {
      return or__3646__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, function() {
    var G__6292 = c;
    if (G__6292) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6292.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__6292.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__6292);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__6292);
    }
  }() ? om.core.init_state.call(null, c) : null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693))), "__om_id":function() {
    var or__3646__auto__ = id;
    if (cljs.core.truth_(or__3646__auto__)) {
      return or__3646__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var cursor = this$.props["__om_cursor"];
  if (function() {
    var G__6293 = c;
    if (G__6293) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6293.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__6293.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__6293);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__6293);
    }
  }()) {
    return om.core.did_mount.call(null, c);
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__6294 = c;
    if (G__6294) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6294.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__6294.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__6294);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__6294);
    }
  }()) {
    return om.core.display_name.call(null, c);
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_6311 = om.core.children.call(null, this$);
  if (function() {
    var G__6295 = c_6311;
    if (G__6295) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6295.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__6295.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__6295);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__6295);
    }
  }()) {
    om.core.will_mount.call(null, c_6311);
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x6313 = obj;
  x6313.om$core$IGetState$ = true;
  x6313.om$core$IGetState$_get_state$arity$1 = function(x6313) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3646__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3646__auto__)) {
        return or__3646__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x6313);
  x6313.om$core$IGetState$_get_state$arity$2 = function(x6313) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x6313);
  x6313.om$core$IGetRenderState$ = true;
  x6313.om$core$IGetRenderState$_get_render_state$arity$1 = function(x6313) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x6313);
  x6313.om$core$IGetRenderState$_get_render_state$arity$2 = function(x6313) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x6313);
  x6313.om$core$ISetState$ = true;
  x6313.om$core$ISetState$_set_state_BANG_$arity$3 = function(x6313) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var props = this$__$1.props;
      var app_state = props["__om_app_state"];
      this$__$1.state["__om_pending_state"] = val;
      if (cljs.core.truth_(function() {
        var and__3634__auto__ = !(app_state == null);
        if (and__3634__auto__) {
          return render;
        } else {
          return and__3634__auto__;
        }
      }())) {
        return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
      } else {
        return null;
      }
    };
  }(x6313);
  x6313.om$core$ISetState$_set_state_BANG_$arity$4 = function(x6313) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      var props = this$__$1.props;
      var state = this$__$1.state;
      var pstate = om.core._get_state.call(null, this$__$1);
      var app_state = props["__om_app_state"];
      state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
      if (cljs.core.truth_(function() {
        var and__3634__auto__ = !(app_state == null);
        if (and__3634__auto__) {
          return render;
        } else {
          return and__3634__auto__;
        }
      }())) {
        return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
      } else {
        return null;
      }
    };
  }(x6313);
  return x6313;
};
om.core.pure_descriptor = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
om.core.react_id = function react_id(x) {
  var id = x["_rootNodeID"];
  if (cljs.core.truth_(id)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "id", "id", 252129435, null)))].join(""));
  }
  return id;
};
om.core.get_gstate = function get_gstate(owner) {
  return owner.props["__om_app_state"];
};
om.core.no_local_merge_pending_state = function no_local_merge_pending_state(owner) {
  var gstate = om.core.get_gstate.call(null, owner);
  var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, owner)], null);
  var states = cljs.core.get_in.call(null, cljs.core.deref.call(null, gstate), spath);
  if (cljs.core.truth_((new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)).cljs$core$IFn$_invoke$arity$1(states))) {
    return cljs.core.swap_BANG_.call(null, gstate, cljs.core.update_in, spath, function(gstate, spath, states) {
      return function(states__$1) {
        return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, states__$1, new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923), (new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states__$1)), new cljs.core.Keyword(null, "render-state", "render-state", 2053902270), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states__$1), 
        (new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)).cljs$core$IFn$_invoke$arity$1(states__$1))), new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973));
      };
    }(gstate, spath, states));
  } else {
    return null;
  }
};
om.core.no_local_state_methods = cljs.core.assoc.call(null, om.core.pure_methods, new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3646__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3646__auto__)) {
      return or__3646__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var om_id = function() {
    var or__3646__auto__ = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
    if (cljs.core.truth_(or__3646__auto__)) {
      return or__3646__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }();
  var state = cljs.core.merge.call(null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)), function() {
    var G__6314 = c;
    if (G__6314) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6314.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__6314.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__6314);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__6314);
    }
  }() ? om.core.init_state.call(null, c) : null);
  var spath = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$), new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)], null);
  props["__om_init_state"] = null;
  cljs.core.swap_BANG_.call(null, om.core.get_gstate.call(null, this$), cljs.core.assoc_in, spath, state);
  return{"__om_id":om_id};
}, new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619), function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_6323 = om.core.children.call(null, this$);
  if (function() {
    var G__6315 = c_6323;
    if (G__6315) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6315.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__6315.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__6315);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__6315);
    }
  }()) {
    om.core.will_mount.call(null, c_6323);
  } else {
  }
  return om.core.no_local_merge_pending_state.call(null, this$);
}, new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$)], null);
  if (function() {
    var G__6316 = c;
    if (G__6316) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6316.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__6316.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__6316);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__6316);
    }
  }()) {
    om.core.will_unmount.call(null, c);
  } else {
  }
  cljs.core.swap_BANG_.call(null, om.core.get_gstate.call(null, this$), cljs.core.update_in, spath, cljs.core.dissoc);
  var temp__4126__auto__ = cljs.core.seq.call(null, this$.state["__om_refs"]);
  if (temp__4126__auto__) {
    var refs = temp__4126__auto__;
    var seq__6317 = cljs.core.seq.call(null, refs);
    var chunk__6318 = null;
    var count__6319 = 0;
    var i__6320 = 0;
    while (true) {
      if (i__6320 < count__6319) {
        var ref = cljs.core._nth.call(null, chunk__6318, i__6320);
        om.core.unobserve.call(null, this$, ref);
        var G__6324 = seq__6317;
        var G__6325 = chunk__6318;
        var G__6326 = count__6319;
        var G__6327 = i__6320 + 1;
        seq__6317 = G__6324;
        chunk__6318 = G__6325;
        count__6319 = G__6326;
        i__6320 = G__6327;
        continue;
      } else {
        var temp__4126__auto____$1 = cljs.core.seq.call(null, seq__6317);
        if (temp__4126__auto____$1) {
          var seq__6317__$1 = temp__4126__auto____$1;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6317__$1)) {
            var c__4433__auto__ = cljs.core.chunk_first.call(null, seq__6317__$1);
            var G__6328 = cljs.core.chunk_rest.call(null, seq__6317__$1);
            var G__6329 = c__4433__auto__;
            var G__6330 = cljs.core.count.call(null, c__4433__auto__);
            var G__6331 = 0;
            seq__6317 = G__6328;
            chunk__6318 = G__6329;
            count__6319 = G__6330;
            i__6320 = G__6331;
            continue;
          } else {
            var ref = cljs.core.first.call(null, seq__6317__$1);
            om.core.unobserve.call(null, this$, ref);
            var G__6332 = cljs.core.next.call(null, seq__6317__$1);
            var G__6333 = null;
            var G__6334 = 0;
            var G__6335 = 0;
            seq__6317 = G__6332;
            chunk__6318 = G__6333;
            count__6319 = G__6334;
            i__6320 = G__6335;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    return null;
  }
}, new cljs.core.Keyword(null, "componentWillUpdate", "componentWillUpdate", 657390932), function(next_props, next_state) {
  var this$ = this;
  var props_6336 = this$.props;
  var c_6337 = om.core.children.call(null, this$);
  if (function() {
    var G__6321 = c_6337;
    if (G__6321) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6321.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__6321.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__6321);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__6321);
    }
  }()) {
    var state_6338 = this$.state;
    om.core.will_update.call(null, c_6337, om.core.get_props.call(null, {"isOmComponent":true, "props":next_props}), om.core._get_state.call(null, this$));
  } else {
  }
  om.core.no_local_merge_pending_state.call(null, this$);
  return om.core.update_refs.call(null, this$);
}, new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var gstate = om.core.get_gstate.call(null, this$);
  var states = cljs.core.get_in.call(null, cljs.core.deref.call(null, gstate), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$)], null));
  var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$)], null);
  if (function() {
    var G__6322 = c;
    if (G__6322) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6322.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__6322.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__6322);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__6322);
    }
  }()) {
    var state_6339 = this$.state;
    om.core.did_update.call(null, c, om.core.get_props.call(null, {"isOmComponent":true, "props":prev_props}), function() {
      var or__3646__auto__ = (new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923)).cljs$core$IFn$_invoke$arity$1(states);
      if (cljs.core.truth_(or__3646__auto__)) {
        return or__3646__auto__;
      } else {
        return(new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states);
      }
    }());
  } else {
  }
  if (cljs.core.truth_((new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923)).cljs$core$IFn$_invoke$arity$1(states))) {
    return cljs.core.swap_BANG_.call(null, gstate, cljs.core.update_in, spath, cljs.core.dissoc, new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923));
  } else {
    return null;
  }
});
om.core.no_local_descriptor = function no_local_descriptor(methods$) {
  var x6341 = cljs.core.clj__GT_js.call(null, methods$);
  x6341.om$core$IGetState$ = true;
  x6341.om$core$IGetState$_get_state$arity$1 = function(x6341) {
    return function(this$) {
      var this$__$1 = this;
      var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$__$1)], null);
      var states = cljs.core.get_in.call(null, cljs.core.deref.call(null, om.core.get_gstate.call(null, this$__$1)), spath);
      var or__3646__auto__ = (new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)).cljs$core$IFn$_invoke$arity$1(states);
      if (cljs.core.truth_(or__3646__auto__)) {
        return or__3646__auto__;
      } else {
        return(new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states);
      }
    };
  }(x6341);
  x6341.om$core$IGetState$_get_state$arity$2 = function(x6341) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x6341);
  x6341.om$core$IGetRenderState$ = true;
  x6341.om$core$IGetRenderState$_get_render_state$arity$1 = function(x6341) {
    return function(this$) {
      var this$__$1 = this;
      var spath = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$__$1), new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)], null);
      return cljs.core.get_in.call(null, cljs.core.deref.call(null, om.core.get_gstate.call(null, this$__$1)), spath);
    };
  }(x6341);
  x6341.om$core$IGetRenderState$_get_render_state$arity$2 = function(x6341) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x6341);
  x6341.om$core$ISetState$ = true;
  x6341.om$core$ISetState$_set_state_BANG_$arity$3 = function(x6341) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var gstate = om.core.get_gstate.call(null, this$__$1);
      var spath = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$__$1), new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)], null);
      cljs.core.swap_BANG_.call(null, om.core.get_gstate.call(null, this$__$1), cljs.core.assoc_in, spath, val);
      if (cljs.core.truth_(function() {
        var and__3634__auto__ = !(gstate == null);
        if (and__3634__auto__) {
          return render;
        } else {
          return and__3634__auto__;
        }
      }())) {
        return om.core._queue_render_BANG_.call(null, gstate, this$__$1);
      } else {
        return null;
      }
    };
  }(x6341);
  x6341.om$core$ISetState$_set_state_BANG_$arity$4 = function(x6341) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      return om.core._set_state_BANG_.call(null, this$__$1, cljs.core.assoc_in.call(null, om.core._get_state.call(null, this$__$1), ks, val), render);
    };
  }(x6341);
  return x6341;
};
om.core.valid_QMARK_ = function valid_QMARK_(x) {
  if (function() {
    var G__6343 = x;
    if (G__6343) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6343.om$core$ICursor$;
        }
      }())) {
        return true;
      } else {
        if (!G__6343.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__6343);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__6343);
    }
  }()) {
    return!cljs.core.keyword_identical_QMARK_.call(null, cljs.core.deref.call(null, x), new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
  } else {
    return true;
  }
};
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2163640079;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var v = cljs.core._lookup.call(null, self__.value, k, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275));
  if (!cljs.core._EQ_.call(null, v, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275))) {
    return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
  } else {
    return not_found;
  }
};
om.core.MapCursor.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._kv_reduce.call(null, self__.value, f, init);
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._pr_writer.call(null, self__.value, writer, opts);
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.meta.call(null, self__.value);
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._count.call(null, self__.value);
};
om.core.MapCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, self__.value);
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core.cursor_QMARK_.call(null, other)) {
    return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
  } else {
    return cljs.core._EQ_.call(null, self__.value, other);
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.value) > 0) {
    return cljs.core.map.call(null, function(this$__$1) {
      return function(p__6345) {
        var vec__6346 = p__6345;
        var k = cljs.core.nth.call(null, vec__6346, 0, null);
        var v = cljs.core.nth.call(null, vec__6346, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
      };
    }(this$__$1), self__.value);
  } else {
    return null;
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
};
om.core.MapCursor.prototype.call = function() {
  var G__6347 = null;
  var G__6347__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__6347__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__6347 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6347__2.call(this, self__, k);
      case 3:
        return G__6347__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6347.cljs$core$IFn$_invoke$arity$2 = G__6347__2;
  G__6347.cljs$core$IFn$_invoke$arity$3 = G__6347__3;
  return G__6347;
}();
om.core.MapCursor.prototype.apply = function(self__, args6344) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6344)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path, new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "om.core/MapCursor");
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2180424479;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, n, null);
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, n, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._kv_reduce.call(null, self__.value, f, init);
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (n < cljs.core._count.call(null, self__.value)) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n, not_found), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    return not_found;
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._pr_writer.call(null, self__.value, writer, opts);
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.meta.call(null, self__.value);
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._count.call(null, self__.value);
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, self__.value);
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core.cursor_QMARK_.call(null, other)) {
    return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
  } else {
    return cljs.core._EQ_.call(null, self__.value, other);
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.value) > 0) {
    return cljs.core.map.call(null, function(this$__$1) {
      return function(v, i) {
        return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
      };
    }(this$__$1), self__.value, cljs.core.range.call(null));
  } else {
    return null;
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.call = function() {
  var G__6349 = null;
  var G__6349__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__6349__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__6349 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6349__2.call(this, self__, k);
      case 3:
        return G__6349__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6349.cljs$core$IFn$_invoke$arity$2 = G__6349__2;
  G__6349.cljs$core$IFn$_invoke$arity$3 = G__6349__3;
  return G__6349;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args6348) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6348)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path, new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
  return cljs.core._write.call(null, writer__4234__auto__, "om.core/IndexedCursor");
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x6351 = cljs.core.clone.call(null, val);
  x6351.cljs$core$IEquiv$ = true;
  x6351.cljs$core$IEquiv$_equiv$arity$2 = function(x6351) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core.cursor_QMARK_.call(null, other)) {
        return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
      } else {
        return cljs.core._EQ_.call(null, val, other);
      }
    };
  }(x6351);
  x6351.om$core$ITransact$ = true;
  x6351.om$core$ITransact$_transact_BANG_$arity$4 = function(x6351) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x6351);
  x6351.om$core$ICursor$ = true;
  x6351.om$core$ICursor$_path$arity$1 = function(x6351) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x6351);
  x6351.om$core$ICursor$_state$arity$1 = function(x6351) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x6351);
  x6351.cljs$core$IDeref$ = true;
  x6351.cljs$core$IDeref$_deref$arity$1 = function(x6351) {
    return function(this$) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path, new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
    };
  }(x6351);
  return x6351;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__6354 = val;
        if (G__6354) {
          var bit__4327__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3646__auto__ = bit__4327__auto__;
            if (cljs.core.truth_(or__3646__auto__)) {
              return or__3646__auto__;
            } else {
              return G__6354.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__6354.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__6354);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__6354);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__6355 = val;
              if (G__6355) {
                var bit__4327__auto__ = G__6355.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4327__auto__ || G__6355.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__6355.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__6355);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__6355);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              return val;
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.root_cursor = function root_cursor(atom) {
  if (function() {
    var G__6357 = atom;
    if (G__6357) {
      var bit__4327__auto__ = G__6357.cljs$lang$protocol_mask$partition0$ & 32768;
      if (bit__4327__auto__ || G__6357.cljs$core$IDeref$) {
        return true;
      } else {
        if (!G__6357.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__6357);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__6357);
    }
  }()) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IDeref", "IDeref", 1738423197, null), new cljs.core.Symbol(null, "atom", "atom", 1243487874, null))))].join(""));
  }
  return om.core.to_cursor.call(null, cljs.core.deref.call(null, atom), atom, cljs.core.PersistentVector.EMPTY);
};
om.core._refs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.ref_sub_cursor = function ref_sub_cursor(x, parent) {
  var x6359 = cljs.core.clone.call(null, x);
  x6359.om$core$ITransact$ = true;
  x6359.om$core$ITransact$_transact_BANG_$arity$4 = function(x6359) {
    return function(cursor, korks, f, tag) {
      var cursor__$1 = this;
      om.core.commit_BANG_.call(null, cursor__$1, korks, f);
      return om.core._refresh_deps_BANG_.call(null, parent);
    };
  }(x6359);
  x6359.om$core$ICursorDerive$ = true;
  x6359.om$core$ICursorDerive$_derive$arity$4 = function(x6359) {
    return function(this$, derived, state, path) {
      var this$__$1 = this;
      var cursor_SINGLEQUOTE_ = om.core.to_cursor.call(null, derived, state, path);
      if (om.core.cursor_QMARK_.call(null, cursor_SINGLEQUOTE_)) {
        return om.core.adapt.call(null, this$__$1, cursor_SINGLEQUOTE_);
      } else {
        return cursor_SINGLEQUOTE_;
      }
    };
  }(x6359);
  x6359.om$core$IAdapt$ = true;
  x6359.om$core$IAdapt$_adapt$arity$2 = function(x6359) {
    return function(this$, other) {
      var this$__$1 = this;
      return ref_sub_cursor.call(null, om.core.adapt.call(null, x, other), parent);
    };
  }(x6359);
  x6359.cljs$core$ICloneable$ = true;
  x6359.cljs$core$ICloneable$_clone$arity$1 = function(x6359) {
    return function(this$) {
      var this$__$1 = this;
      return ref_sub_cursor.call(null, cljs.core.clone.call(null, x), parent);
    };
  }(x6359);
  return x6359;
};
om.core.ref_cursor = function ref_cursor(cursor) {
  if (om.core.cursor_QMARK_.call(null, cursor)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  if (function() {
    var G__6366 = cursor;
    if (G__6366) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6366.om$core$IOmRef$;
        }
      }())) {
        return true;
      } else {
        if (!G__6366.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmRef, G__6366);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmRef, G__6366);
    }
  }()) {
    return cursor;
  } else {
    var path = om.core.path.call(null, cursor);
    var storage = cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, om.core._refs, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null), cljs.core.fnil.call(null, cljs.core.identity, cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY))), path);
    var x6367 = cljs.core.clone.call(null, cursor);
    x6367.om$core$ITransact$ = true;
    x6367.om$core$ITransact$_transact_BANG_$arity$4 = function(x6367, path, storage) {
      return function(cursor__$1, korks, f, tag) {
        var cursor__$2 = this;
        om.core.commit_BANG_.call(null, cursor__$2, korks, f);
        return om.core._refresh_deps_BANG_.call(null, cursor__$2);
      };
    }(x6367, path, storage);
    x6367.om$core$IOmRef$ = true;
    x6367.om$core$IOmRef$_add_dep_BANG_$arity$2 = function(x6367, path, storage) {
      return function(_, c) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, storage, cljs.core.assoc, om.core.id.call(null, c), c);
      };
    }(x6367, path, storage);
    x6367.om$core$IOmRef$_remove_dep_BANG_$arity$2 = function(x6367, path, storage) {
      return function(_, c) {
        var ___$1 = this;
        var m = cljs.core.swap_BANG_.call(null, storage, cljs.core.dissoc, om.core.id.call(null, c));
        if (cljs.core.count.call(null, m) === 0) {
          return cljs.core.swap_BANG_.call(null, om.core._refs, cljs.core.dissoc, path);
        } else {
          return null;
        }
      };
    }(x6367, path, storage);
    x6367.om$core$IOmRef$_refresh_deps_BANG_$arity$1 = function(x6367, path, storage) {
      return function(_) {
        var ___$1 = this;
        var seq__6368 = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.deref.call(null, storage)));
        var chunk__6369 = null;
        var count__6370 = 0;
        var i__6371 = 0;
        while (true) {
          if (i__6371 < count__6370) {
            var c = cljs.core._nth.call(null, chunk__6369, i__6371);
            om.core._queue_render_BANG_.call(null, om.core.state.call(null, cursor), c);
            var G__6372 = seq__6368;
            var G__6373 = chunk__6369;
            var G__6374 = count__6370;
            var G__6375 = i__6371 + 1;
            seq__6368 = G__6372;
            chunk__6369 = G__6373;
            count__6370 = G__6374;
            i__6371 = G__6375;
            continue;
          } else {
            var temp__4126__auto__ = cljs.core.seq.call(null, seq__6368);
            if (temp__4126__auto__) {
              var seq__6368__$1 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__6368__$1)) {
                var c__4433__auto__ = cljs.core.chunk_first.call(null, seq__6368__$1);
                var G__6376 = cljs.core.chunk_rest.call(null, seq__6368__$1);
                var G__6377 = c__4433__auto__;
                var G__6378 = cljs.core.count.call(null, c__4433__auto__);
                var G__6379 = 0;
                seq__6368 = G__6376;
                chunk__6369 = G__6377;
                count__6370 = G__6378;
                i__6371 = G__6379;
                continue;
              } else {
                var c = cljs.core.first.call(null, seq__6368__$1);
                om.core._queue_render_BANG_.call(null, om.core.state.call(null, cursor), c);
                var G__6380 = cljs.core.next.call(null, seq__6368__$1);
                var G__6381 = null;
                var G__6382 = 0;
                var G__6383 = 0;
                seq__6368 = G__6380;
                chunk__6369 = G__6381;
                count__6370 = G__6382;
                i__6371 = G__6383;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      };
    }(x6367, path, storage);
    x6367.om$core$IOmRef$_get_deps$arity$1 = function(x6367, path, storage) {
      return function(_) {
        var ___$1 = this;
        return cljs.core.deref.call(null, storage);
      };
    }(x6367, path, storage);
    x6367.om$core$ICursorDerive$ = true;
    x6367.om$core$ICursorDerive$_derive$arity$4 = function(x6367, path, storage) {
      return function(this$, derived, state, path__$1) {
        var this$__$1 = this;
        var cursor_SINGLEQUOTE_ = om.core.to_cursor.call(null, derived, state, path__$1);
        if (om.core.cursor_QMARK_.call(null, cursor_SINGLEQUOTE_)) {
          return om.core.ref_sub_cursor.call(null, cursor_SINGLEQUOTE_, this$__$1);
        } else {
          return cursor_SINGLEQUOTE_;
        }
      };
    }(x6367, path, storage);
    return x6367;
  }
};
om.core.add_ref_to_component_BANG_ = function add_ref_to_component_BANG_(c, ref) {
  var state = c.state;
  var refs = function() {
    var or__3646__auto__ = state["__om_refs"];
    if (cljs.core.truth_(or__3646__auto__)) {
      return or__3646__auto__;
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  }();
  if (cljs.core.contains_QMARK_.call(null, refs, ref)) {
    return null;
  } else {
    return state["__om_refs"] = cljs.core.conj.call(null, refs, ref);
  }
};
om.core.remove_ref_from_component_BANG_ = function remove_ref_from_component_BANG_(c, ref) {
  var state = c.state;
  var refs = state["__om_refs"];
  if (cljs.core.contains_QMARK_.call(null, refs, ref)) {
    return state["__om_refs"] = cljs.core.disj.call(null, refs, ref);
  } else {
    return null;
  }
};
om.core.observe = function observe(c, ref) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  if (om.core.cursor_QMARK_.call(null, ref)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))].join(""));
  }
  om.core.add_ref_to_component_BANG_.call(null, c, ref);
  om.core._add_dep_BANG_.call(null, ref, c);
  return ref;
};
om.core.unobserve = function unobserve(c, ref) {
  om.core.remove_ref_from_component_BANG_.call(null, c, ref);
  om.core._remove_dep_BANG_.call(null, ref, c);
  return ref;
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.get_renderT = function get_renderT(state) {
  var or__3646__auto__ = state.om$render$T;
  if (cljs.core.truth_(or__3646__auto__)) {
    return or__3646__auto__;
  } else {
    return 0;
  }
};
om.core.render_all = function() {
  var render_all = null;
  var render_all__0 = function() {
    return render_all.call(null, null);
  };
  var render_all__1 = function(state) {
    om.core.refresh_queued = false;
    var seq__6388_6392 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
    var chunk__6389_6393 = null;
    var count__6390_6394 = 0;
    var i__6391_6395 = 0;
    while (true) {
      if (i__6391_6395 < count__6390_6394) {
        var f_6396 = cljs.core._nth.call(null, chunk__6389_6393, i__6391_6395);
        f_6396.call(null);
        var G__6397 = seq__6388_6392;
        var G__6398 = chunk__6389_6393;
        var G__6399 = count__6390_6394;
        var G__6400 = i__6391_6395 + 1;
        seq__6388_6392 = G__6397;
        chunk__6389_6393 = G__6398;
        count__6390_6394 = G__6399;
        i__6391_6395 = G__6400;
        continue;
      } else {
        var temp__4126__auto___6401 = cljs.core.seq.call(null, seq__6388_6392);
        if (temp__4126__auto___6401) {
          var seq__6388_6402__$1 = temp__4126__auto___6401;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6388_6402__$1)) {
            var c__4433__auto___6403 = cljs.core.chunk_first.call(null, seq__6388_6402__$1);
            var G__6404 = cljs.core.chunk_rest.call(null, seq__6388_6402__$1);
            var G__6405 = c__4433__auto___6403;
            var G__6406 = cljs.core.count.call(null, c__4433__auto___6403);
            var G__6407 = 0;
            seq__6388_6392 = G__6404;
            chunk__6389_6393 = G__6405;
            count__6390_6394 = G__6406;
            i__6391_6395 = G__6407;
            continue;
          } else {
            var f_6408 = cljs.core.first.call(null, seq__6388_6402__$1);
            f_6408.call(null);
            var G__6409 = cljs.core.next.call(null, seq__6388_6402__$1);
            var G__6410 = null;
            var G__6411 = 0;
            var G__6412 = 0;
            seq__6388_6392 = G__6409;
            chunk__6389_6393 = G__6410;
            count__6390_6394 = G__6411;
            i__6391_6395 = G__6412;
            continue;
          }
        } else {
        }
      }
      break;
    }
    if (state == null) {
      return null;
    } else {
      return state.om$render$T = om.core.get_renderT.call(null, state) + 1;
    }
  };
  render_all = function(state) {
    switch(arguments.length) {
      case 0:
        return render_all__0.call(this);
      case 1:
        return render_all__1.call(this, state);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render_all.cljs$core$IFn$_invoke$arity$0 = render_all__0;
  render_all.cljs$core$IFn$_invoke$arity$1 = render_all__1;
  return render_all;
}();
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_component_QMARK_ = function valid_component_QMARK_(x, f) {
  if (function() {
    var or__3646__auto__ = function() {
      var G__6419 = x;
      if (G__6419) {
        var bit__4327__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3646__auto__ = bit__4327__auto__;
          if (cljs.core.truth_(or__3646__auto__)) {
            return or__3646__auto__;
          } else {
            return G__6419.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__6419.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__6419);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__6419);
      }
    }();
    if (or__3646__auto__) {
      return or__3646__auto__;
    } else {
      var or__3646__auto____$1 = function() {
        var G__6421 = x;
        if (G__6421) {
          var bit__4327__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3646__auto____$1 = bit__4327__auto__;
            if (cljs.core.truth_(or__3646__auto____$1)) {
              return or__3646__auto____$1;
            } else {
              return G__6421.om$core$IRenderProps$;
            }
          }())) {
            return true;
          } else {
            if (!G__6421.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__6421);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__6421);
        }
      }();
      if (or__3646__auto____$1) {
        return or__3646__auto____$1;
      } else {
        var G__6422 = x;
        if (G__6422) {
          var bit__4327__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3646__auto____$2 = bit__4327__auto__;
            if (cljs.core.truth_(or__3646__auto____$2)) {
              return or__3646__auto____$2;
            } else {
              return G__6422.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__6422.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__6422);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__6422);
        }
      }
    }
  }()) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid Om component fn, "), cljs.core.str(f.name), cljs.core.str(" does not return valid instance")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRender", "IRender", 590822196, null), new cljs.core.Symbol(null, 
    "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderProps", "IRenderProps", 2115139472, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderState", "IRenderState", -897673898, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))))].join(""));
  }
};
om.core.valid_opts_QMARK_ = function valid_opts_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "instrument", "instrument", -960698844), null, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), null, new cljs.core.Keyword(null, "key", "key", -1516042587), null, new cljs.core.Keyword(null, "init-state", 
  "init-state", 1450863212), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "key-fn", "key-fn", -636154479), null, new cljs.core.Keyword(null, "opts", "opts", 155075701), null, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), null, new cljs.core.Keyword(null, "shared", "shared", -384145993), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.get_descriptor = function() {
  var get_descriptor = null;
  var get_descriptor__1 = function(f) {
    return get_descriptor.call(null, f, null);
  };
  var get_descriptor__2 = function(f, descriptor) {
    if (f["om$descriptor"] == null) {
      f["om$descriptor"] = React.createFactory(React.createClass(function() {
        var or__3646__auto__ = descriptor;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          var or__3646__auto____$1 = om.core._STAR_descriptor_STAR_;
          if (cljs.core.truth_(or__3646__auto____$1)) {
            return or__3646__auto____$1;
          } else {
            return om.core.pure_descriptor;
          }
        }
      }()));
    } else {
    }
    return f["om$descriptor"];
  };
  get_descriptor = function(f, descriptor) {
    switch(arguments.length) {
      case 1:
        return get_descriptor__1.call(this, f);
      case 2:
        return get_descriptor__2.call(this, f, descriptor);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_descriptor.cljs$core$IFn$_invoke$arity$1 = get_descriptor__1;
  get_descriptor.cljs$core$IFn$_invoke$arity$2 = get_descriptor__2;
  return get_descriptor;
}();
om.core.getf = function() {
  var getf = null;
  var getf__2 = function(f, cursor) {
    if (f instanceof cljs.core.MultiFn) {
      var dv = f.dispatch_fn.call(null, cursor, null);
      return cljs.core.get_method.call(null, f, dv);
    } else {
      return f;
    }
  };
  var getf__3 = function(f, cursor, opts) {
    if (f instanceof cljs.core.MultiFn) {
      var dv = f.dispatch_fn.call(null, cursor, null, opts);
      return cljs.core.get_method.call(null, f, dv);
    } else {
      return f;
    }
  };
  getf = function(f, cursor, opts) {
    switch(arguments.length) {
      case 2:
        return getf__2.call(this, f, cursor);
      case 3:
        return getf__3.call(this, f, cursor, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  getf.cljs$core$IFn$_invoke$arity$2 = getf__2;
  getf.cljs$core$IFn$_invoke$arity$3 = getf__3;
  return getf;
}();
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    if (m == null || cljs.core.map_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))].join(""));
    }
    if (om.core.valid_opts_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :key-fn :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid-opts?", "valid-opts?", 1000038576, null), new cljs.core.Symbol(null, "m", "m", 
      -1021758608, null))))].join(""));
    }
    if (m == null) {
      var shared = om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
      var ctor = om.core.get_descriptor.call(null, om.core.getf.call(null, f, cursor));
      return ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var ret = f.call(null, cursor, this$);
          om.core.valid_component_QMARK_.call(null, ret, f);
          return ret;
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_descriptor":om.core._STAR_descriptor_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_root_key":om.core._STAR_root_key_STAR_, "__om_shared":shared, "__om_cursor":cursor});
    } else {
      var map__6424 = m;
      var map__6424__$1 = cljs.core.seq_QMARK_.call(null, map__6424) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6424) : map__6424;
      var opts = cljs.core.get.call(null, map__6424__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
      var init_state = cljs.core.get.call(null, map__6424__$1, new cljs.core.Keyword(null, "init-state", "init-state", 1450863212));
      var state = cljs.core.get.call(null, map__6424__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
      var key_fn = cljs.core.get.call(null, map__6424__$1, new cljs.core.Keyword(null, "key-fn", "key-fn", -636154479));
      var key = cljs.core.get.call(null, map__6424__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
      var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
      var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
        var temp__4124__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var i = temp__4124__auto__;
          return dataf.call(null, cursor, i);
        } else {
          return dataf.call(null, cursor);
        }
      }() : cursor;
      var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : !(key_fn == null) ? key_fn.call(null, cursor_SINGLEQUOTE_) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348));
      var shared = function() {
        var or__3646__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, om.core.getf.call(null, f, cursor_SINGLEQUOTE_, opts), (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"__om_state":state, "__om_instrument":om.core._STAR_instrument_STAR_, "children":opts == null ? function(map__6424, map__6424__$1, opts, init_state, state, key_fn, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var ret = f.call(null, cursor_SINGLEQUOTE_, this$);
          om.core.valid_component_QMARK_.call(null, ret, f);
          return ret;
        };
      }(map__6424, map__6424__$1, opts, init_state, state, key_fn, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__6424, map__6424__$1, opts, init_state, state, key_fn, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var ret = f.call(null, cursor_SINGLEQUOTE_, this$, opts);
          om.core.valid_component_QMARK_.call(null, ret, f);
          return ret;
        };
      }(map__6424, map__6424__$1, opts, init_state, state, key_fn, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_init_state":init_state, "key":function() {
        var or__3646__auto__ = rkey;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return undefined;
        }
      }(), "__om_app_state":om.core._STAR_state_STAR_, "__om_cursor":cursor_SINGLEQUOTE_, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m), "__om_shared":shared, "__om_descriptor":om.core._STAR_descriptor_STAR_, "__om_root_key":om.core._STAR_root_key_STAR_});
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, x) {
    return build.call(null, f, x, null);
  };
  var build__3 = function(f, x, m) {
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    if (m == null || cljs.core.map_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))].join(""));
    }
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = om.core._STAR_instrument_STAR_.call(null, f, x, m);
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", -1453289268))) {
        return om.core.build_STAR_.call(null, f, x, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, x, m);
    }
  };
  build = function(f, x, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, x);
      case 3:
        return build__3.call(this, f, x, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    if (m == null || cljs.core.map_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))].join(""));
    }
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__6433 = state;
    if (G__6433) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6433.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__6433.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__6433);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__6433);
    }
  }()) {
  } else {
    var properties_6441 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var listeners_6442 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_6443 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x6434_6444 = state;
    x6434_6444.om$core$IRenderQueue$ = true;
    x6434_6444.om$core$IRenderQueue$_get_queue$arity$1 = function(x6434_6444, properties_6441, listeners_6442, render_queue_6443) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_6443);
      };
    }(x6434_6444, properties_6441, listeners_6442, render_queue_6443);
    x6434_6444.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x6434_6444, properties_6441, listeners_6442, render_queue_6443) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_6443), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_6443, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x6434_6444, properties_6441, listeners_6442, render_queue_6443);
    x6434_6444.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x6434_6444, properties_6441, listeners_6442, render_queue_6443) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_6443, cljs.core.empty);
      };
    }(x6434_6444, properties_6441, listeners_6442, render_queue_6443);
    x6434_6444.om$core$INotify$ = true;
    x6434_6444.om$core$INotify$_listen_BANG_$arity$3 = function(x6434_6444, properties_6441, listeners_6442, render_queue_6443) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_6442, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x6434_6444, properties_6441, listeners_6442, render_queue_6443);
    x6434_6444.om$core$INotify$_unlisten_BANG_$arity$2 = function(x6434_6444, properties_6441, listeners_6442, render_queue_6443) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_6442, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x6434_6444, properties_6441, listeners_6442, render_queue_6443);
    x6434_6444.om$core$INotify$_notify_BANG_$arity$3 = function(x6434_6444, properties_6441, listeners_6442, render_queue_6443) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        var seq__6435_6445 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_6442));
        var chunk__6436_6446 = null;
        var count__6437_6447 = 0;
        var i__6438_6448 = 0;
        while (true) {
          if (i__6438_6448 < count__6437_6447) {
            var vec__6439_6449 = cljs.core._nth.call(null, chunk__6436_6446, i__6438_6448);
            var __6450 = cljs.core.nth.call(null, vec__6439_6449, 0, null);
            var f_6451 = cljs.core.nth.call(null, vec__6439_6449, 1, null);
            f_6451.call(null, tx_data, root_cursor);
            var G__6452 = seq__6435_6445;
            var G__6453 = chunk__6436_6446;
            var G__6454 = count__6437_6447;
            var G__6455 = i__6438_6448 + 1;
            seq__6435_6445 = G__6452;
            chunk__6436_6446 = G__6453;
            count__6437_6447 = G__6454;
            i__6438_6448 = G__6455;
            continue;
          } else {
            var temp__4126__auto___6456 = cljs.core.seq.call(null, seq__6435_6445);
            if (temp__4126__auto___6456) {
              var seq__6435_6457__$1 = temp__4126__auto___6456;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__6435_6457__$1)) {
                var c__4433__auto___6458 = cljs.core.chunk_first.call(null, seq__6435_6457__$1);
                var G__6459 = cljs.core.chunk_rest.call(null, seq__6435_6457__$1);
                var G__6460 = c__4433__auto___6458;
                var G__6461 = cljs.core.count.call(null, c__4433__auto___6458);
                var G__6462 = 0;
                seq__6435_6445 = G__6459;
                chunk__6436_6446 = G__6460;
                count__6437_6447 = G__6461;
                i__6438_6448 = G__6462;
                continue;
              } else {
                var vec__6440_6463 = cljs.core.first.call(null, seq__6435_6457__$1);
                var __6464 = cljs.core.nth.call(null, vec__6440_6463, 0, null);
                var f_6465 = cljs.core.nth.call(null, vec__6440_6463, 1, null);
                f_6465.call(null, tx_data, root_cursor);
                var G__6466 = cljs.core.next.call(null, seq__6435_6457__$1);
                var G__6467 = null;
                var G__6468 = 0;
                var G__6469 = 0;
                seq__6435_6445 = G__6466;
                chunk__6436_6446 = G__6467;
                count__6437_6447 = G__6468;
                i__6438_6448 = G__6469;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return this$__$1;
      };
    }(x6434_6444, properties_6441, listeners_6442, render_queue_6443);
    x6434_6444.om$core$IRootProperties$ = true;
    x6434_6444.om$core$IRootProperties$_set_property_BANG_$arity$4 = function(x6434_6444, properties_6441, listeners_6442, render_queue_6443) {
      return function(_, id, k, v) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, properties_6441, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, k], null), v);
      };
    }(x6434_6444, properties_6441, listeners_6442, render_queue_6443);
    x6434_6444.om$core$IRootProperties$_remove_property_BANG_$arity$3 = function(x6434_6444, properties_6441, listeners_6442, render_queue_6443) {
      return function(_, id, k) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, properties_6441, cljs.core.dissoc, id, k);
      };
    }(x6434_6444, properties_6441, listeners_6442, render_queue_6443);
    x6434_6444.om$core$IRootProperties$_remove_properties_BANG_$arity$2 = function(x6434_6444, properties_6441, listeners_6442, render_queue_6443) {
      return function(_, id) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, properties_6441, cljs.core.dissoc, id);
      };
    }(x6434_6444, properties_6441, listeners_6442, render_queue_6443);
    x6434_6444.om$core$IRootProperties$_get_property$arity$3 = function(x6434_6444, properties_6441, listeners_6442, render_queue_6443) {
      return function(_, id, k) {
        var ___$1 = this;
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, properties_6441), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, k], null));
      };
    }(x6434_6444, properties_6441, listeners_6442, render_queue_6443);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.tag_root_key = function tag_root_key(cursor, root_key) {
  if (om.core.cursor_QMARK_.call(null, cursor)) {
    var x6471 = cljs.core.clone.call(null, cursor);
    x6471.om$core$IRootKey$ = true;
    x6471.om$core$IRootKey$_root_key$arity$1 = function(x6471) {
      return function(this$) {
        var this$__$1 = this;
        return root_key;
      };
    }(x6471);
    x6471.om$core$IAdapt$ = true;
    x6471.om$core$IAdapt$_adapt$arity$2 = function(x6471) {
      return function(this$, other) {
        var this$__$1 = this;
        return tag_root_key.call(null, om.core.adapt.call(null, cursor, other), root_key);
      };
    }(x6471);
    x6471.cljs$core$ICloneable$ = true;
    x6471.cljs$core$ICloneable$_clone$arity$1 = function(x6471) {
      return function(this$) {
        var this$__$1 = this;
        return tag_root_key.call(null, cljs.core.clone.call(null, cursor), root_key);
      };
    }(x6471);
    return x6471;
  } else {
    return cursor;
  }
};
om.core.root = function root(f, value, p__6472) {
  var map__6535 = p__6472;
  var map__6535__$1 = cljs.core.seq_QMARK_.call(null, map__6535) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6535) : map__6535;
  var options = map__6535__$1;
  var raf = cljs.core.get.call(null, map__6535__$1, new cljs.core.Keyword(null, "raf", "raf", -1295410152));
  var adapt = cljs.core.get.call(null, map__6535__$1, new cljs.core.Keyword(null, "adapt", "adapt", -1817022327));
  var descriptor = cljs.core.get.call(null, map__6535__$1, new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018));
  var instrument = cljs.core.get.call(null, map__6535__$1, new cljs.core.Keyword(null, "instrument", "instrument", -960698844));
  var path = cljs.core.get.call(null, map__6535__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
  var tx_listen = cljs.core.get.call(null, map__6535__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367));
  var target = cljs.core.get.call(null, map__6535__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("First argument must be a function"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  if (!(target == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No target specified to om.core/root"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null)))))].join(""));
  }
  var roots_SINGLEQUOTE__6597 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__6597, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__6597, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__6536 = value;
    if (G__6536) {
      var bit__4327__auto__ = G__6536.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4327__auto__ || G__6536.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__6536.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__6536);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__6536);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var adapt__$1 = function() {
    var or__3646__auto__ = adapt;
    if (cljs.core.truth_(or__3646__auto__)) {
      return or__3646__auto__;
    } else {
      return cljs.core.identity;
    }
  }();
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 253001721), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "adapt", "adapt", -1817022327));
  var ret = cljs.core.atom.call(null, null);
  var rootf = function(watch_key, state, state__$1, adapt__$1, m, ret, map__6535, map__6535__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = adapt__$1.call(null, om.core.tag_root_key.call(null, path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path), watch_key));
      if (cljs.core.truth_(om.core._get_property.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "skip-render-root", "skip-render-root", -5219643)))) {
      } else {
        var c_6598 = om.dom.render.call(null, function() {
          var _STAR_descriptor_STAR_6567 = om.core._STAR_descriptor_STAR_;
          var _STAR_instrument_STAR_6568 = om.core._STAR_instrument_STAR_;
          var _STAR_state_STAR_6569 = om.core._STAR_state_STAR_;
          var _STAR_root_key_STAR_6570 = om.core._STAR_root_key_STAR_;
          try {
            om.core._STAR_descriptor_STAR_ = descriptor;
            om.core._STAR_instrument_STAR_ = instrument;
            om.core._STAR_state_STAR_ = state__$1;
            om.core._STAR_root_key_STAR_ = watch_key;
            return om.core.build.call(null, f, cursor, m);
          } finally {
            om.core._STAR_root_key_STAR_ = _STAR_root_key_STAR_6570;
            om.core._STAR_state_STAR_ = _STAR_state_STAR_6569;
            om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_6568;
            om.core._STAR_descriptor_STAR_ = _STAR_descriptor_STAR_6567;
          }
        }(), target);
        if (cljs.core.deref.call(null, ret) == null) {
          cljs.core.reset_BANG_.call(null, ret, c_6598);
        } else {
        }
      }
      var queue_6599 = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue_6599)) {
      } else {
        var seq__6571_6600 = cljs.core.seq.call(null, queue_6599);
        var chunk__6572_6601 = null;
        var count__6573_6602 = 0;
        var i__6574_6603 = 0;
        while (true) {
          if (i__6574_6603 < count__6573_6602) {
            var c_6604 = cljs.core._nth.call(null, chunk__6572_6601, i__6574_6603);
            if (cljs.core.truth_(c_6604.isMounted())) {
              var temp__4126__auto___6605 = c_6604.state["__om_next_cursor"];
              if (cljs.core.truth_(temp__4126__auto___6605)) {
                var next_props_6606 = temp__4126__auto___6605;
                c_6604.props["__om_cursor"] = next_props_6606;
                c_6604.state["__om_next_cursor"] = null;
              } else {
              }
              if (cljs.core.truth_(function() {
                var or__3646__auto__ = !function() {
                  var G__6576 = om.core.children.call(null, c_6604);
                  if (G__6576) {
                    var bit__4327__auto__ = null;
                    if (cljs.core.truth_(function() {
                      var or__3646__auto__ = bit__4327__auto__;
                      if (cljs.core.truth_(or__3646__auto__)) {
                        return or__3646__auto__;
                      } else {
                        return G__6576.om$core$ICheckState$;
                      }
                    }())) {
                      return true;
                    } else {
                      if (!G__6576.cljs$lang$protocol_mask$partition$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__6576);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__6576);
                  }
                }();
                if (or__3646__auto__) {
                  return or__3646__auto__;
                } else {
                  return c_6604.shouldComponentUpdate(c_6604.props, c_6604.state);
                }
              }())) {
                c_6604.forceUpdate();
              } else {
              }
            } else {
            }
            var G__6607 = seq__6571_6600;
            var G__6608 = chunk__6572_6601;
            var G__6609 = count__6573_6602;
            var G__6610 = i__6574_6603 + 1;
            seq__6571_6600 = G__6607;
            chunk__6572_6601 = G__6608;
            count__6573_6602 = G__6609;
            i__6574_6603 = G__6610;
            continue;
          } else {
            var temp__4126__auto___6611 = cljs.core.seq.call(null, seq__6571_6600);
            if (temp__4126__auto___6611) {
              var seq__6571_6612__$1 = temp__4126__auto___6611;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__6571_6612__$1)) {
                var c__4433__auto___6613 = cljs.core.chunk_first.call(null, seq__6571_6612__$1);
                var G__6614 = cljs.core.chunk_rest.call(null, seq__6571_6612__$1);
                var G__6615 = c__4433__auto___6613;
                var G__6616 = cljs.core.count.call(null, c__4433__auto___6613);
                var G__6617 = 0;
                seq__6571_6600 = G__6614;
                chunk__6572_6601 = G__6615;
                count__6573_6602 = G__6616;
                i__6574_6603 = G__6617;
                continue;
              } else {
                var c_6618 = cljs.core.first.call(null, seq__6571_6612__$1);
                if (cljs.core.truth_(c_6618.isMounted())) {
                  var temp__4126__auto___6619__$1 = c_6618.state["__om_next_cursor"];
                  if (cljs.core.truth_(temp__4126__auto___6619__$1)) {
                    var next_props_6620 = temp__4126__auto___6619__$1;
                    c_6618.props["__om_cursor"] = next_props_6620;
                    c_6618.state["__om_next_cursor"] = null;
                  } else {
                  }
                  if (cljs.core.truth_(function() {
                    var or__3646__auto__ = !function() {
                      var G__6578 = om.core.children.call(null, c_6618);
                      if (G__6578) {
                        var bit__4327__auto__ = null;
                        if (cljs.core.truth_(function() {
                          var or__3646__auto__ = bit__4327__auto__;
                          if (cljs.core.truth_(or__3646__auto__)) {
                            return or__3646__auto__;
                          } else {
                            return G__6578.om$core$ICheckState$;
                          }
                        }())) {
                          return true;
                        } else {
                          if (!G__6578.cljs$lang$protocol_mask$partition$) {
                            return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__6578);
                          } else {
                            return false;
                          }
                        }
                      } else {
                        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__6578);
                      }
                    }();
                    if (or__3646__auto__) {
                      return or__3646__auto__;
                    } else {
                      return c_6618.shouldComponentUpdate(c_6618.props, c_6618.state);
                    }
                  }())) {
                    c_6618.forceUpdate();
                  } else {
                  }
                } else {
                }
                var G__6621 = cljs.core.next.call(null, seq__6571_6612__$1);
                var G__6622 = null;
                var G__6623 = 0;
                var G__6624 = 0;
                seq__6571_6600 = G__6621;
                chunk__6572_6601 = G__6622;
                count__6573_6602 = G__6623;
                i__6574_6603 = G__6624;
                continue;
              }
            } else {
            }
          }
          break;
        }
        om.core._empty_queue_BANG_.call(null, state__$1);
      }
      var _refs_6625 = cljs.core.deref.call(null, om.core._refs);
      if (cljs.core.empty_QMARK_.call(null, _refs_6625)) {
      } else {
        var seq__6579_6626 = cljs.core.seq.call(null, _refs_6625);
        var chunk__6580_6627 = null;
        var count__6581_6628 = 0;
        var i__6582_6629 = 0;
        while (true) {
          if (i__6582_6629 < count__6581_6628) {
            var vec__6583_6630 = cljs.core._nth.call(null, chunk__6580_6627, i__6582_6629);
            var path_6631__$1 = cljs.core.nth.call(null, vec__6583_6630, 0, null);
            var cs_6632 = cljs.core.nth.call(null, vec__6583_6630, 1, null);
            var cs_6633__$1 = cljs.core.deref.call(null, cs_6632);
            var seq__6584_6634 = cljs.core.seq.call(null, cs_6633__$1);
            var chunk__6585_6635 = null;
            var count__6586_6636 = 0;
            var i__6587_6637 = 0;
            while (true) {
              if (i__6587_6637 < count__6586_6636) {
                var vec__6588_6638 = cljs.core._nth.call(null, chunk__6585_6635, i__6587_6637);
                var id_6639 = cljs.core.nth.call(null, vec__6588_6638, 0, null);
                var c_6640 = cljs.core.nth.call(null, vec__6588_6638, 1, null);
                if (cljs.core.truth_(c_6640.shouldComponentUpdate(c_6640.props, c_6640.state))) {
                  c_6640.forceUpdate();
                } else {
                }
                var G__6641 = seq__6584_6634;
                var G__6642 = chunk__6585_6635;
                var G__6643 = count__6586_6636;
                var G__6644 = i__6587_6637 + 1;
                seq__6584_6634 = G__6641;
                chunk__6585_6635 = G__6642;
                count__6586_6636 = G__6643;
                i__6587_6637 = G__6644;
                continue;
              } else {
                var temp__4126__auto___6645 = cljs.core.seq.call(null, seq__6584_6634);
                if (temp__4126__auto___6645) {
                  var seq__6584_6646__$1 = temp__4126__auto___6645;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__6584_6646__$1)) {
                    var c__4433__auto___6647 = cljs.core.chunk_first.call(null, seq__6584_6646__$1);
                    var G__6648 = cljs.core.chunk_rest.call(null, seq__6584_6646__$1);
                    var G__6649 = c__4433__auto___6647;
                    var G__6650 = cljs.core.count.call(null, c__4433__auto___6647);
                    var G__6651 = 0;
                    seq__6584_6634 = G__6648;
                    chunk__6585_6635 = G__6649;
                    count__6586_6636 = G__6650;
                    i__6587_6637 = G__6651;
                    continue;
                  } else {
                    var vec__6589_6652 = cljs.core.first.call(null, seq__6584_6646__$1);
                    var id_6653 = cljs.core.nth.call(null, vec__6589_6652, 0, null);
                    var c_6654 = cljs.core.nth.call(null, vec__6589_6652, 1, null);
                    if (cljs.core.truth_(c_6654.shouldComponentUpdate(c_6654.props, c_6654.state))) {
                      c_6654.forceUpdate();
                    } else {
                    }
                    var G__6655 = cljs.core.next.call(null, seq__6584_6646__$1);
                    var G__6656 = null;
                    var G__6657 = 0;
                    var G__6658 = 0;
                    seq__6584_6634 = G__6655;
                    chunk__6585_6635 = G__6656;
                    count__6586_6636 = G__6657;
                    i__6587_6637 = G__6658;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            var G__6659 = seq__6579_6626;
            var G__6660 = chunk__6580_6627;
            var G__6661 = count__6581_6628;
            var G__6662 = i__6582_6629 + 1;
            seq__6579_6626 = G__6659;
            chunk__6580_6627 = G__6660;
            count__6581_6628 = G__6661;
            i__6582_6629 = G__6662;
            continue;
          } else {
            var temp__4126__auto___6663 = cljs.core.seq.call(null, seq__6579_6626);
            if (temp__4126__auto___6663) {
              var seq__6579_6664__$1 = temp__4126__auto___6663;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__6579_6664__$1)) {
                var c__4433__auto___6665 = cljs.core.chunk_first.call(null, seq__6579_6664__$1);
                var G__6666 = cljs.core.chunk_rest.call(null, seq__6579_6664__$1);
                var G__6667 = c__4433__auto___6665;
                var G__6668 = cljs.core.count.call(null, c__4433__auto___6665);
                var G__6669 = 0;
                seq__6579_6626 = G__6666;
                chunk__6580_6627 = G__6667;
                count__6581_6628 = G__6668;
                i__6582_6629 = G__6669;
                continue;
              } else {
                var vec__6590_6670 = cljs.core.first.call(null, seq__6579_6664__$1);
                var path_6671__$1 = cljs.core.nth.call(null, vec__6590_6670, 0, null);
                var cs_6672 = cljs.core.nth.call(null, vec__6590_6670, 1, null);
                var cs_6673__$1 = cljs.core.deref.call(null, cs_6672);
                var seq__6591_6674 = cljs.core.seq.call(null, cs_6673__$1);
                var chunk__6592_6675 = null;
                var count__6593_6676 = 0;
                var i__6594_6677 = 0;
                while (true) {
                  if (i__6594_6677 < count__6593_6676) {
                    var vec__6595_6678 = cljs.core._nth.call(null, chunk__6592_6675, i__6594_6677);
                    var id_6679 = cljs.core.nth.call(null, vec__6595_6678, 0, null);
                    var c_6680 = cljs.core.nth.call(null, vec__6595_6678, 1, null);
                    if (cljs.core.truth_(c_6680.shouldComponentUpdate(c_6680.props, c_6680.state))) {
                      c_6680.forceUpdate();
                    } else {
                    }
                    var G__6681 = seq__6591_6674;
                    var G__6682 = chunk__6592_6675;
                    var G__6683 = count__6593_6676;
                    var G__6684 = i__6594_6677 + 1;
                    seq__6591_6674 = G__6681;
                    chunk__6592_6675 = G__6682;
                    count__6593_6676 = G__6683;
                    i__6594_6677 = G__6684;
                    continue;
                  } else {
                    var temp__4126__auto___6685__$1 = cljs.core.seq.call(null, seq__6591_6674);
                    if (temp__4126__auto___6685__$1) {
                      var seq__6591_6686__$1 = temp__4126__auto___6685__$1;
                      if (cljs.core.chunked_seq_QMARK_.call(null, seq__6591_6686__$1)) {
                        var c__4433__auto___6687 = cljs.core.chunk_first.call(null, seq__6591_6686__$1);
                        var G__6688 = cljs.core.chunk_rest.call(null, seq__6591_6686__$1);
                        var G__6689 = c__4433__auto___6687;
                        var G__6690 = cljs.core.count.call(null, c__4433__auto___6687);
                        var G__6691 = 0;
                        seq__6591_6674 = G__6688;
                        chunk__6592_6675 = G__6689;
                        count__6593_6676 = G__6690;
                        i__6594_6677 = G__6691;
                        continue;
                      } else {
                        var vec__6596_6692 = cljs.core.first.call(null, seq__6591_6686__$1);
                        var id_6693 = cljs.core.nth.call(null, vec__6596_6692, 0, null);
                        var c_6694 = cljs.core.nth.call(null, vec__6596_6692, 1, null);
                        if (cljs.core.truth_(c_6694.shouldComponentUpdate(c_6694.props, c_6694.state))) {
                          c_6694.forceUpdate();
                        } else {
                        }
                        var G__6695 = cljs.core.next.call(null, seq__6591_6686__$1);
                        var G__6696 = null;
                        var G__6697 = 0;
                        var G__6698 = 0;
                        seq__6591_6674 = G__6695;
                        chunk__6592_6675 = G__6696;
                        count__6593_6676 = G__6697;
                        i__6594_6677 = G__6698;
                        continue;
                      }
                    } else {
                    }
                  }
                  break;
                }
                var G__6699 = cljs.core.next.call(null, seq__6579_6664__$1);
                var G__6700 = null;
                var G__6701 = 0;
                var G__6702 = 0;
                seq__6579_6626 = G__6699;
                chunk__6580_6627 = G__6700;
                count__6581_6628 = G__6701;
                i__6582_6629 = G__6702;
                continue;
              }
            } else {
            }
          }
          break;
        }
      }
      om.core._set_property_BANG_.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "skip-render-root", "skip-render-root", -5219643), true);
      return cljs.core.deref.call(null, ret);
    };
  }(watch_key, state, state__$1, adapt__$1, m, ret, map__6535, map__6535__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__6535, map__6535__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
    return function(_, ___$1, o, n) {
      if (cljs.core.not.call(null, om.core._get_property.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "ignore", "ignore", -1631542033))) && !(o === n)) {
        om.core._set_property_BANG_.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "skip-render-root", "skip-render-root", -5219643), false);
      } else {
      }
      om.core._set_property_BANG_.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "ignore", "ignore", -1631542033), false);
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (raf === false || !(typeof requestAnimationFrame !== "undefined")) {
          return setTimeout(function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__6535, map__6535__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
            return function() {
              return om.core.render_all.call(null, state__$1);
            };
          }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__6535, map__6535__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target), 16);
        } else {
          if (cljs.core.fn_QMARK_.call(null, raf)) {
            return raf.call(null);
          } else {
            return requestAnimationFrame(function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__6535, map__6535__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
              return function() {
                return om.core.render_all.call(null, state__$1);
              };
            }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__6535, map__6535__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target));
          }
        }
      }
    };
  }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__6535, map__6535__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__6535, map__6535__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target) {
    return function() {
      om.core._remove_properties_BANG_.call(null, state__$1, watch_key);
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__6535, map__6535__$1, options, raf, adapt, descriptor, instrument, path, tx_listen, target));
  return rootf.call(null);
};
om.core.detach_root = function detach_root(target) {
  if (cljs.core.truth_(goog.dom.isElement(target))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("gdom", "isElement", "gdom/isElement", 465934354, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null))))].join(""));
  }
  var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, om.core.roots), target);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    return f.call(null);
  } else {
    return null;
  }
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    if (om.core.cursor_QMARK_.call(null, cursor)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    if (om.core.cursor_QMARK_.call(null, cursor)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
    }
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    if (om.core.cursor_QMARK_.call(null, cursor)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
    }
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    if (om.core.cursor_QMARK_.call(null, cursor)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
    }
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.commit_BANG_ = function commit_BANG_(cursor, korks, f) {
  if (om.core.cursor_QMARK_.call(null, cursor)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  var key = function() {
    var G__6704 = cursor;
    if (G__6704) {
      var bit__4327__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3646__auto__ = bit__4327__auto__;
        if (cljs.core.truth_(or__3646__auto__)) {
          return or__3646__auto__;
        } else {
          return G__6704.om$core$IRootKey$;
        }
      }())) {
        return true;
      } else {
        if (!G__6704.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRootKey, G__6704);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRootKey, G__6704);
    }
  }() ? om.core._root_key.call(null, cursor) : null;
  var app_state = om.core.state.call(null, cursor);
  var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  var cpath = om.core.path.call(null, cursor);
  var rpath = cljs.core.into.call(null, cpath, korks__$1);
  if (cljs.core.truth_(key)) {
    om.core._set_property_BANG_.call(null, app_state, key, new cljs.core.Keyword(null, "ignore", "ignore", -1631542033), true);
  } else {
  }
  if (cljs.core.empty_QMARK_.call(null, rpath)) {
    return cljs.core.swap_BANG_.call(null, app_state, f);
  } else {
    return cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, rpath, f);
  }
};
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    if (typeof name === "string") {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "string?", "string?", -1129175764, null), new cljs.core.Symbol(null, "name", "name", -810760592, null))))].join(""));
    }
    var temp__4126__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4126__auto__)) {
      var refs = temp__4126__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.mounted_QMARK_ = function mounted_QMARK_(owner) {
  return owner.isMounted();
};
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    return om.core._set_state_BANG_.call(null, owner, v, true);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, true);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.set_state_nr_BANG_ = function() {
  var set_state_nr_BANG_ = null;
  var set_state_nr_BANG___2 = function(owner, v) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    return om.core._set_state_BANG_.call(null, owner, v, false);
  };
  var set_state_nr_BANG___3 = function(owner, korks, v) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, false);
  };
  set_state_nr_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_nr_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_nr_BANG___2;
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_nr_BANG___3;
  return set_state_nr_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.update_state_nr_BANG_ = function() {
  var update_state_nr_BANG_ = null;
  var update_state_nr_BANG___2 = function(owner, f) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    return om.core.set_state_nr_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_nr_BANG___3 = function(owner, korks, f) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    if (cljs.core.ifn_QMARK_.call(null, f)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }
    return om.core.set_state_nr_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_nr_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_nr_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_nr_BANG___2;
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_nr_BANG___3;
  return update_state_nr_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
    }
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var G__13398 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var G__13399 = cljs.core.next.call(null, coll__$1);
        sb = G__13398;
        coll__$1 = G__13399;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  var join__2 = function(separator, coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var coll__$2 = cljs.core.next.call(null, coll__$1);
        if (coll__$2 == null) {
        } else {
          sb.append(separator);
        }
        var G__13400 = sb;
        var G__13401 = coll__$2;
        sb = G__13400;
        coll__$1 = G__13401;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__13402 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__13402;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__13406 = cljs.core._EQ_;
    var expr__13407 = limit;
    if (cljs.core.truth_(pred__13406.call(null, 1, expr__13407))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__13406.call(null, 2, expr__13407))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__13409 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__13410 = limit__$1 - 1;
            var G__13411 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__13409;
            limit__$1 = G__13410;
            parts = G__13411;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__13412 = index - 1;
        index = G__13412;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___13413 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___13413)) {
        var replacement_13414 = temp__4124__auto___13413;
        buffer.append([cljs.core.str(replacement_13414)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__13415 = index + 1;
      index = G__13415;
      continue;
    }
    break;
  }
};
goog.provide("expenses.stats");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("om.dom");
goog.require("om.core");
goog.require("clojure.string");
expenses.stats.stats_view = function stats_view(app, owner) {
  if (typeof expenses.stats.t13452 !== "undefined") {
  } else {
    expenses.stats.t13452 = function(owner, app, stats_view, meta13453) {
      this.owner = owner;
      this.app = app;
      this.stats_view = stats_view;
      this.meta13453 = meta13453;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    expenses.stats.t13452.prototype.om$core$IRenderState$ = true;
    expenses.stats.t13452.prototype.om$core$IRenderState$render_state$arity$2 = function(this$, state) {
      var self__ = this;
      var this$__$1 = this;
      var expenses__$1 = (new cljs.core.Keyword(null, "expenses", "expenses", -63975799)).cljs$core$IFn$_invoke$arity$1(self__.app);
      var exp_by_categories = cljs.core.group_by.call(null, new cljs.core.Keyword(null, "category", "category", -593092832), expenses__$1);
      var sum_categories = cljs.core.reduce.call(null, cljs.core.conj, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(expenses__$1, exp_by_categories, this$__$1) {
        return function(p__13455) {
          var vec__13456 = p__13455;
          var cat = cljs.core.nth.call(null, vec__13456, 0, null);
          var _exps = cljs.core.nth.call(null, vec__13456, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cat, cljs.core.reduce.call(null, cljs.core._PLUS_, 0, cljs.core.map.call(null, new cljs.core.Keyword(null, "amount", "amount", 364489504), _exps))], null);
        };
      }(expenses__$1, exp_by_categories, this$__$1), exp_by_categories));
      var sum_total = cljs.core.reduce.call(null, cljs.core._PLUS_, 0, cljs.core.map.call(null, new cljs.core.Keyword(null, "amount", "amount", 364489504), expenses__$1));
      return React.DOM.table(null, cljs.core.apply.call(null, om.dom.tbody, null, cljs.core.concat.call(null, cljs.core.map.call(null, function(expenses__$1, exp_by_categories, sum_categories, sum_total, this$__$1) {
        return function(p__13457) {
          var vec__13458 = p__13457;
          var category = cljs.core.nth.call(null, vec__13458, 0, null);
          var sum_category = cljs.core.nth.call(null, vec__13458, 1, null);
          return React.DOM.tr(null, React.DOM.td(null, category), React.DOM.td(null, sum_category));
        };
      }(expenses__$1, exp_by_categories, sum_categories, sum_total, this$__$1), sum_categories), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.tr(null, React.DOM.td(null, "TOTAL"), React.DOM.td(null, sum_total))], null))));
    };
    expenses.stats.t13452.prototype.om$core$IDisplayName$ = true;
    expenses.stats.t13452.prototype.om$core$IDisplayName$display_name$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return "stats-view";
    };
    expenses.stats.t13452.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13454) {
      var self__ = this;
      var _13454__$1 = this;
      return self__.meta13453;
    };
    expenses.stats.t13452.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13454, meta13453__$1) {
      var self__ = this;
      var _13454__$1 = this;
      return new expenses.stats.t13452(self__.owner, self__.app, self__.stats_view, meta13453__$1);
    };
    expenses.stats.t13452.cljs$lang$type = true;
    expenses.stats.t13452.cljs$lang$ctorStr = "expenses.stats/t13452";
    expenses.stats.t13452.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
      return cljs.core._write.call(null, writer__4234__auto__, "expenses.stats/t13452");
    };
    expenses.stats.__GT_t13452 = function __GT_t13452(owner__$1, app__$1, stats_view__$1, meta13453) {
      return new expenses.stats.t13452(owner__$1, app__$1, stats_view__$1, meta13453);
    };
  }
  return new expenses.stats.t13452(owner, app, stats_view, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 79, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 34, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 10, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/brabadu/projects/prom-stats/src-cljs/expenses/stats.cljs"], null));
};
goog.provide("expenses.date");
goog.require("cljs.core");
expenses.date.format_date = function format_date(d) {
  return[cljs.core.str(d.getDate()), cljs.core.str("/"), cljs.core.str(d.getMonth() + 1), cljs.core.str("/"), cljs.core.str(d.getFullYear())].join("");
};
expenses.date.parse_date = function parse_date(d) {
  var all_matches = d.match(/(\d{1,2})\/(\d{1,2})\/(\d{4})/);
  var matches = cljs.core.drop.call(null, 1, all_matches);
  var vec__23935 = cljs.core.map.call(null, function(all_matches, matches) {
    return function(p1__23933_SHARP_) {
      return parseInt(p1__23933_SHARP_, 10);
    };
  }(all_matches, matches), matches);
  var day = cljs.core.nth.call(null, vec__23935, 0, null);
  var month = cljs.core.nth.call(null, vec__23935, 1, null);
  var year = cljs.core.nth.call(null, vec__23935, 2, null);
  var month__$1 = month - 1;
  if (cljs.core.truth_(function() {
    var and__3634__auto__ = day;
    if (cljs.core.truth_(and__3634__auto__)) {
      var and__3634__auto____$1 = month__$1;
      if (cljs.core.truth_(and__3634__auto____$1)) {
        return year;
      } else {
        return and__3634__auto____$1;
      }
    } else {
      return and__3634__auto__;
    }
  }())) {
    return new Date(year, month__$1, day);
  } else {
    return null;
  }
};
goog.provide("expenses.main");
goog.require("cljs.core");
goog.require("expenses.stats");
goog.require("om.dom");
goog.require("expenses.date");
goog.require("cljs.core.async");
goog.require("clojure.string");
goog.require("om.core");
cljs.core.enable_console_print_BANG_.call(null);
expenses.main.Expense = function(id, date, amount, name, category, __meta, __extmap, __hash) {
  this.id = id;
  this.date = date;
  this.amount = amount;
  this.name = name;
  this.category = category;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
expenses.main.Expense.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4249__auto__, k__4250__auto__) {
  var self__ = this;
  var this__4249__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4249__auto____$1, k__4250__auto__, null);
};
expenses.main.Expense.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4251__auto__, k13287, else__4252__auto__) {
  var self__ = this;
  var this__4251__auto____$1 = this;
  var G__13289 = k13287 instanceof cljs.core.Keyword ? k13287.fqn : null;
  switch(G__13289) {
    case "category":
      return self__.category;
      break;
    case "name":
      return self__.name;
      break;
    case "amount":
      return self__.amount;
      break;
    case "date":
      return self__.date;
      break;
    case "id":
      return self__.id;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k13287, else__4252__auto__);
  }
};
expenses.main.Expense.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4263__auto__, writer__4264__auto__, opts__4265__auto__) {
  var self__ = this;
  var this__4263__auto____$1 = this;
  var pr_pair__4266__auto__ = function(this__4263__auto____$1) {
    return function(keyval__4267__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4264__auto__, cljs.core.pr_writer, "", " ", "", opts__4265__auto__, keyval__4267__auto__);
    };
  }(this__4263__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4264__auto__, pr_pair__4266__auto__, "#expenses.main.Expense{", ", ", "}", opts__4265__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "id", "id", -1388402092), self__.id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "date", "date", -1463434462), self__.date], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "amount", "amount", 364489504), self__.amount], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "category", "category", -593092832), self__.category], null)], null), self__.__extmap));
};
expenses.main.Expense.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4247__auto__) {
  var self__ = this;
  var this__4247__auto____$1 = this;
  return self__.__meta;
};
expenses.main.Expense.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4243__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  return new expenses.main.Expense(self__.id, self__.date, self__.amount, self__.name, self__.category, self__.__meta, self__.__extmap, self__.__hash);
};
expenses.main.Expense.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4253__auto__) {
  var self__ = this;
  var this__4253__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
expenses.main.Expense.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4244__auto__) {
  var self__ = this;
  var this__4244__auto____$1 = this;
  var h__4067__auto__ = self__.__hash;
  if (!(h__4067__auto__ == null)) {
    return h__4067__auto__;
  } else {
    var h__4067__auto____$1 = cljs.core.hash_imap.call(null, this__4244__auto____$1);
    self__.__hash = h__4067__auto____$1;
    return h__4067__auto____$1;
  }
};
expenses.main.Expense.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4245__auto__, other__4246__auto__) {
  var self__ = this;
  var this__4245__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3634__auto__ = other__4246__auto__;
    if (cljs.core.truth_(and__3634__auto__)) {
      return this__4245__auto____$1.constructor === other__4246__auto__.constructor && cljs.core.equiv_map.call(null, this__4245__auto____$1, other__4246__auto__);
    } else {
      return and__3634__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
expenses.main.Expense.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4258__auto__, k__4259__auto__) {
  var self__ = this;
  var this__4258__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "category", "category", -593092832), null, new cljs.core.Keyword(null, "amount", "amount", 364489504), null, new cljs.core.Keyword(null, "date", "date", -1463434462), null, new cljs.core.Keyword(null, "name", "name", 1843675177), null, new cljs.core.Keyword(null, "id", "id", -1388402092), null], null), null), k__4259__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4258__auto____$1), self__.__meta), k__4259__auto__);
  } else {
    return new expenses.main.Expense(self__.id, self__.date, self__.amount, self__.name, self__.category, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4259__auto__)), null);
  }
};
expenses.main.Expense.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4256__auto__, k__4257__auto__, G__13286) {
  var self__ = this;
  var this__4256__auto____$1 = this;
  var pred__13290 = cljs.core.keyword_identical_QMARK_;
  var expr__13291 = k__4257__auto__;
  if (cljs.core.truth_(pred__13290.call(null, new cljs.core.Keyword(null, "id", "id", -1388402092), expr__13291))) {
    return new expenses.main.Expense(G__13286, self__.date, self__.amount, self__.name, self__.category, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__13290.call(null, new cljs.core.Keyword(null, "date", "date", -1463434462), expr__13291))) {
      return new expenses.main.Expense(self__.id, G__13286, self__.amount, self__.name, self__.category, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__13290.call(null, new cljs.core.Keyword(null, "amount", "amount", 364489504), expr__13291))) {
        return new expenses.main.Expense(self__.id, self__.date, G__13286, self__.name, self__.category, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__13290.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), expr__13291))) {
          return new expenses.main.Expense(self__.id, self__.date, self__.amount, G__13286, self__.category, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__13290.call(null, new cljs.core.Keyword(null, "category", "category", -593092832), expr__13291))) {
            return new expenses.main.Expense(self__.id, self__.date, self__.amount, self__.name, G__13286, self__.__meta, self__.__extmap, null);
          } else {
            return new expenses.main.Expense(self__.id, self__.date, self__.amount, self__.name, self__.category, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4257__auto__, G__13286), null);
          }
        }
      }
    }
  }
};
expenses.main.Expense.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4261__auto__) {
  var self__ = this;
  var this__4261__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "id", "id", -1388402092), self__.id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "date", "date", -1463434462), self__.date], null), new cljs.core.PersistentVector(null, 2, 
  5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "amount", "amount", 364489504), self__.amount], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "category", "category", -593092832), self__.category], null)], null), self__.__extmap));
};
expenses.main.Expense.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4248__auto__, G__13286) {
  var self__ = this;
  var this__4248__auto____$1 = this;
  return new expenses.main.Expense(self__.id, self__.date, self__.amount, self__.name, self__.category, G__13286, self__.__extmap, self__.__hash);
};
expenses.main.Expense.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4254__auto__, entry__4255__auto__) {
  var self__ = this;
  var this__4254__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4255__auto__)) {
    return cljs.core._assoc.call(null, this__4254__auto____$1, cljs.core._nth.call(null, entry__4255__auto__, 0), cljs.core._nth.call(null, entry__4255__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4254__auto____$1, entry__4255__auto__);
  }
};
expenses.main.Expense.cljs$lang$type = true;
expenses.main.Expense.cljs$lang$ctorPrSeq = function(this__4283__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "expenses.main/Expense");
};
expenses.main.Expense.cljs$lang$ctorPrWriter = function(this__4283__auto__, writer__4284__auto__) {
  return cljs.core._write.call(null, writer__4284__auto__, "expenses.main/Expense");
};
expenses.main.__GT_Expense = function __GT_Expense(id, date, amount, name, category) {
  return new expenses.main.Expense(id, date, amount, name, category, null, null, null);
};
expenses.main.map__GT_Expense = function map__GT_Expense(G__13288) {
  return new expenses.main.Expense((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(G__13288), (new cljs.core.Keyword(null, "date", "date", -1463434462)).cljs$core$IFn$_invoke$arity$1(G__13288), (new cljs.core.Keyword(null, "amount", "amount", 364489504)).cljs$core$IFn$_invoke$arity$1(G__13288), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(G__13288), (new cljs.core.Keyword(null, "category", "category", -593092832)).cljs$core$IFn$_invoke$arity$1(G__13288), 
  null, cljs.core.dissoc.call(null, G__13288, new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "date", "date", -1463434462), new cljs.core.Keyword(null, "amount", "amount", 364489504), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "category", "category", -593092832)), null);
};
expenses.main.state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "expenses", "expenses", -63975799), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new expenses.main.Expense(1, new Date, 100, "Ashan", "food", null, null, null), new expenses.main.Expense(2, new Date, 150, "Novus", "food", null, null, null), new expenses.main.Expense(3, new Date, 300, "Arenda", "home", null, null, null), new expenses.main.Expense(4, 
new Date, 100, "Gasoline", "transport", null, null, null)], null), new cljs.core.Keyword(null, "categories", "categories", 178386610), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["food", "home", "transport"], null)], null));
expenses.main.set_form_fields = function set_form_fields(owner, p__13295) {
  var map__13303 = p__13295;
  var map__13303__$1 = cljs.core.seq_QMARK_.call(null, map__13303) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13303) : map__13303;
  var category = cljs.core.get.call(null, map__13303__$1, new cljs.core.Keyword(null, "category", "category", -593092832));
  var name = cljs.core.get.call(null, map__13303__$1, new cljs.core.Keyword(null, "name", "name", 1843675177));
  var amount = cljs.core.get.call(null, map__13303__$1, new cljs.core.Keyword(null, "amount", "amount", 364489504));
  var date = cljs.core.get.call(null, map__13303__$1, new cljs.core.Keyword(null, "date", "date", -1463434462));
  var fields = cljs.core.map.call(null, function(map__13303, map__13303__$1, category, name, amount, date) {
    return function(p1__13294_SHARP_) {
      return om.core.get_node.call(null, owner, p1__13294_SHARP_);
    };
  }(map__13303, map__13303__$1, category, name, amount, date), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["date", "amount", "name", "category"], null));
  var values = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [date, amount, name, category], null);
  var seq__13304 = cljs.core.seq.call(null, cljs.core.zipmap.call(null, fields, values));
  var chunk__13305 = null;
  var count__13306 = 0;
  var i__13307 = 0;
  while (true) {
    if (i__13307 < count__13306) {
      var vec__13308 = cljs.core._nth.call(null, chunk__13305, i__13307);
      var f = cljs.core.nth.call(null, vec__13308, 0, null);
      var v = cljs.core.nth.call(null, vec__13308, 1, null);
      f.value = v;
      var G__13310 = seq__13304;
      var G__13311 = chunk__13305;
      var G__13312 = count__13306;
      var G__13313 = i__13307 + 1;
      seq__13304 = G__13310;
      chunk__13305 = G__13311;
      count__13306 = G__13312;
      i__13307 = G__13313;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__13304);
      if (temp__4126__auto__) {
        var seq__13304__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13304__$1)) {
          var c__4433__auto__ = cljs.core.chunk_first.call(null, seq__13304__$1);
          var G__13314 = cljs.core.chunk_rest.call(null, seq__13304__$1);
          var G__13315 = c__4433__auto__;
          var G__13316 = cljs.core.count.call(null, c__4433__auto__);
          var G__13317 = 0;
          seq__13304 = G__13314;
          chunk__13305 = G__13315;
          count__13306 = G__13316;
          i__13307 = G__13317;
          continue;
        } else {
          var vec__13309 = cljs.core.first.call(null, seq__13304__$1);
          var f = cljs.core.nth.call(null, vec__13309, 0, null);
          var v = cljs.core.nth.call(null, vec__13309, 1, null);
          f.value = v;
          var G__13318 = cljs.core.next.call(null, seq__13304__$1);
          var G__13319 = null;
          var G__13320 = 0;
          var G__13321 = 0;
          seq__13304 = G__13318;
          chunk__13305 = G__13319;
          count__13306 = G__13320;
          i__13307 = G__13321;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
expenses.main.add_expense = function add_expense(app, owner) {
  var date_field = om.core.get_node.call(null, owner, "date");
  var amount_field = om.core.get_node.call(null, owner, "amount");
  var name_field = om.core.get_node.call(null, owner, "name");
  var category_field = om.core.get_node.call(null, owner, "category");
  var id = cljs.core.count.call(null, (new cljs.core.Keyword(null, "expenses", "expenses", -63975799)).cljs$core$IFn$_invoke$arity$1(app)) + 1;
  var date = expenses.date.parse_date.call(null, date_field.value);
  var amount = amount_field.value;
  var name = name_field.value;
  var category = category_field.value;
  if (cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, cljs.core.complement.call(null, clojure.string.blank_QMARK_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [date, amount, name, category], null)))) {
    om.core.transact_BANG_.call(null, app, new cljs.core.Keyword(null, "expenses", "expenses", -63975799), function(date_field, amount_field, name_field, category_field, id, date, amount, name, category) {
      return function(p1__13322_SHARP_) {
        return cljs.core.conj.call(null, p1__13322_SHARP_, new expenses.main.Expense(id, date, amount, name, category, null, null, null));
      };
    }(date_field, amount_field, name_field, category_field, id, date, amount, name, category));
    return expenses.main.set_form_fields.call(null, owner, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "date", "date", -1463434462), "", new cljs.core.Keyword(null, "amount", "amount", 364489504), "", new cljs.core.Keyword(null, "name", "name", 1843675177), "", new cljs.core.Keyword(null, "category", "category", -593092832), ""], null));
  } else {
    return null;
  }
};
expenses.main.new_expense_form = function new_expense_form(app, owner) {
  if (typeof expenses.main.t13350 !== "undefined") {
  } else {
    expenses.main.t13350 = function(owner, app, new_expense_form, meta13351) {
      this.owner = owner;
      this.app = app;
      this.new_expense_form = new_expense_form;
      this.meta13351 = meta13351;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    expenses.main.t13350.prototype.om$core$IRenderState$ = true;
    expenses.main.t13350.prototype.om$core$IRenderState$render_state$arity$2 = function(this$, state) {
      var self__ = this;
      var this$__$1 = this;
      return React.DOM.div({"className":"add-expense-block"}, React.DOM.div({"style":{"float":"left"}}, React.DOM.div(null, om.dom.input.call(null, {"placeholder":"Date", "ref":"date"}), om.dom.input.call(null, {"placeholder":"Amount", "ref":"amount"}), cljs.core.apply.call(null, om.dom.select, {"defaultValue":"", "ref":"category"}, om.dom.option.call(null, {"disabled":"disabled", "value":""}, "Select category"), cljs.core.map.call(null, function(this$__$1) {
        return function(p1__13323_SHARP_) {
          return om.dom.option.call(null, {"value":p1__13323_SHARP_}, p1__13323_SHARP_);
        };
      }(this$__$1), (new cljs.core.Keyword(null, "categories", "categories", 178386610)).cljs$core$IFn$_invoke$arity$1(self__.app)))), React.DOM.div(null, om.dom.input.call(null, {"placeholder":"Name", "style":{"width":"386px"}, "ref":"name"}))), React.DOM.button({"onClick":function(this$__$1) {
        return function() {
          return expenses.main.add_expense.call(null, self__.app, self__.owner);
        };
      }(this$__$1), "className":"add-item"}, "\u2714"));
    };
    expenses.main.t13350.prototype.om$core$IWillMount$ = true;
    expenses.main.t13350.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var copy = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "copy", "copy", -1077617309));
      var c__7010__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__7010__auto__, copy, ___$1) {
        return function() {
          var f__7011__auto__ = function() {
            var switch__6995__auto__ = function(c__7010__auto__, copy, ___$1) {
              return function(state_13364) {
                var state_val_13365 = state_13364[1];
                if (state_val_13365 === 4) {
                  var inst_13355 = state_13364[2];
                  var inst_13356 = (new cljs.core.Keyword(null, "date", "date", -1463434462)).cljs$core$IFn$_invoke$arity$1(inst_13355);
                  var inst_13357 = expenses.date.format_date.call(null, inst_13356);
                  var inst_13358 = cljs.core.assoc.call(null, inst_13355, new cljs.core.Keyword(null, "date", "date", -1463434462), inst_13357);
                  var inst_13359 = expenses.main.set_form_fields.call(null, self__.owner, inst_13358);
                  var state_13364__$1 = function() {
                    var statearr_13366 = state_13364;
                    statearr_13366[7] = inst_13359;
                    return statearr_13366;
                  }();
                  var statearr_13367_13376 = state_13364__$1;
                  statearr_13367_13376[2] = null;
                  statearr_13367_13376[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13365 === 3) {
                    var inst_13362 = state_13364[2];
                    var state_13364__$1 = state_13364;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13364__$1, inst_13362);
                  } else {
                    if (state_val_13365 === 2) {
                      var state_13364__$1 = state_13364;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13364__$1, 4, copy);
                    } else {
                      if (state_val_13365 === 1) {
                        var state_13364__$1 = state_13364;
                        var statearr_13368_13377 = state_13364__$1;
                        statearr_13368_13377[2] = null;
                        statearr_13368_13377[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              };
            }(c__7010__auto__, copy, ___$1);
            return function(switch__6995__auto__, c__7010__auto__, copy, ___$1) {
              return function() {
                var state_machine__6996__auto__ = null;
                var state_machine__6996__auto____0 = function() {
                  var statearr_13372 = [null, null, null, null, null, null, null, null];
                  statearr_13372[0] = state_machine__6996__auto__;
                  statearr_13372[1] = 1;
                  return statearr_13372;
                };
                var state_machine__6996__auto____1 = function(state_13364) {
                  while (true) {
                    var ret_value__6997__auto__ = function() {
                      try {
                        while (true) {
                          var result__6998__auto__ = switch__6995__auto__.call(null, state_13364);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6998__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6998__auto__;
                          }
                          break;
                        }
                      } catch (e13373) {
                        if (e13373 instanceof Object) {
                          var ex__6999__auto__ = e13373;
                          var statearr_13374_13378 = state_13364;
                          statearr_13374_13378[5] = ex__6999__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13364);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e13373;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6997__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__13379 = state_13364;
                      state_13364 = G__13379;
                      continue;
                    } else {
                      return ret_value__6997__auto__;
                    }
                    break;
                  }
                };
                state_machine__6996__auto__ = function(state_13364) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6996__auto____0.call(this);
                    case 1:
                      return state_machine__6996__auto____1.call(this, state_13364);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6996__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6996__auto____0;
                state_machine__6996__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6996__auto____1;
                return state_machine__6996__auto__;
              }();
            }(switch__6995__auto__, c__7010__auto__, copy, ___$1);
          }();
          var state__7012__auto__ = function() {
            var statearr_13375 = f__7011__auto__.call(null);
            statearr_13375[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7010__auto__;
            return statearr_13375;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7012__auto__);
        };
      }(c__7010__auto__, copy, ___$1));
      return c__7010__auto__;
    };
    expenses.main.t13350.prototype.om$core$IDisplayName$ = true;
    expenses.main.t13350.prototype.om$core$IDisplayName$display_name$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return "add-expense";
    };
    expenses.main.t13350.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13352) {
      var self__ = this;
      var _13352__$1 = this;
      return self__.meta13351;
    };
    expenses.main.t13350.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13352, meta13351__$1) {
      var self__ = this;
      var _13352__$1 = this;
      return new expenses.main.t13350(self__.owner, self__.app, self__.new_expense_form, meta13351__$1);
    };
    expenses.main.t13350.cljs$lang$type = true;
    expenses.main.t13350.cljs$lang$ctorStr = "expenses.main/t13350";
    expenses.main.t13350.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
      return cljs.core._write.call(null, writer__4234__auto__, "expenses.main/t13350");
    };
    expenses.main.__GT_t13350 = function __GT_t13350(owner__$1, app__$1, new_expense_form__$1, meta13351) {
      return new expenses.main.t13350(owner__$1, app__$1, new_expense_form__$1, meta13351);
    };
  }
  return new expenses.main.t13350(owner, app, new_expense_form, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 19, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 80, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 48, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/brabadu/projects/prom-stats/src-cljs/expenses/main.cljs"], null));
};
expenses.main.expenses_view = function expenses_view(app, owner) {
  if (typeof expenses.main.t13409 !== "undefined") {
  } else {
    expenses.main.t13409 = function(owner, app, expenses_view, meta13410) {
      this.owner = owner;
      this.app = app;
      this.expenses_view = expenses_view;
      this.meta13410 = meta13410;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    expenses.main.t13409.prototype.om$core$IRenderState$ = true;
    expenses.main.t13409.prototype.om$core$IRenderState$render_state$arity$2 = function(this$, p__13412) {
      var self__ = this;
      var map__13413 = p__13412;
      var map__13413__$1 = cljs.core.seq_QMARK_.call(null, map__13413) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13413) : map__13413;
      var copy = cljs.core.get.call(null, map__13413__$1, new cljs.core.Keyword(null, "copy", "copy", -1077617309));
      var delete$ = cljs.core.get.call(null, map__13413__$1, new cljs.core.Keyword(null, "delete", "delete", -1768633620));
      var this$__$1 = this;
      return React.DOM.table(null, cljs.core.apply.call(null, om.dom.tbody, null, cljs.core.map.call(null, function(this$__$1, map__13413, map__13413__$1, copy, delete$) {
        return function(p1__13382_SHARP_, p2__13381_SHARP_) {
          return React.DOM.tr({"className":p2__13381_SHARP_}, React.DOM.td({"className":"cell-width"}, expenses.date.format_date.call(null, (new cljs.core.Keyword(null, "date", "date", -1463434462)).cljs$core$IFn$_invoke$arity$1(p1__13382_SHARP_))), React.DOM.td({"className":"cell-width"}, (new cljs.core.Keyword(null, "amount", "amount", 364489504)).cljs$core$IFn$_invoke$arity$1(p1__13382_SHARP_)), React.DOM.td({"className":"cell-width"}, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(p1__13382_SHARP_)), 
          React.DOM.td({"className":"cell-width"}, cljs.core.name.call(null, (new cljs.core.Keyword(null, "category", "category", -593092832)).cljs$core$IFn$_invoke$arity$1(p1__13382_SHARP_))), React.DOM.td(null, React.DOM.button({"onClick":function(this$__$1, map__13413, map__13413__$1, copy, delete$) {
            return function(_) {
              return cljs.core.async.put_BANG_.call(null, delete$, p1__13382_SHARP_);
            };
          }(this$__$1, map__13413, map__13413__$1, copy, delete$)}, "\u2716")), React.DOM.td(null, React.DOM.button({"onClick":function(this$__$1, map__13413, map__13413__$1, copy, delete$) {
            return function(_) {
              return cljs.core.async.put_BANG_.call(null, copy, p1__13382_SHARP_);
            };
          }(this$__$1, map__13413, map__13413__$1, copy, delete$)}, "Copy")));
        };
      }(this$__$1, map__13413, map__13413__$1, copy, delete$), (new cljs.core.Keyword(null, "expenses", "expenses", -63975799)).cljs$core$IFn$_invoke$arity$1(self__.app), cljs.core.cycle.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "grey"], null)))));
    };
    expenses.main.t13409.prototype.om$core$IWillMount$ = true;
    expenses.main.t13409.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var delete$ = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "delete", "delete", -1768633620));
      var c__7010__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__7010__auto__, delete$, ___$1) {
        return function() {
          var f__7011__auto__ = function() {
            var switch__6995__auto__ = function(c__7010__auto__, delete$, ___$1) {
              return function(state_13423) {
                var state_val_13424 = state_13423[1];
                if (state_val_13424 === 4) {
                  var inst_13416 = state_13423[2];
                  var inst_13417 = function() {
                    var expense = inst_13416;
                    return function(expense, inst_13416, state_val_13424, c__7010__auto__, delete$, ___$1) {
                      return function(xs) {
                        return cljs.core.vec.call(null, cljs.core.remove.call(null, function(expense, inst_13416, state_val_13424, c__7010__auto__, delete$, ___$1) {
                          return function(p1__13380_SHARP_) {
                            return cljs.core._EQ_.call(null, expense, p1__13380_SHARP_);
                          };
                        }(expense, inst_13416, state_val_13424, c__7010__auto__, delete$, ___$1), xs));
                      };
                    }(expense, inst_13416, state_val_13424, c__7010__auto__, delete$, ___$1);
                  }();
                  var inst_13418 = om.core.transact_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "expenses", "expenses", -63975799), inst_13417);
                  var state_13423__$1 = function() {
                    var statearr_13425 = state_13423;
                    statearr_13425[7] = inst_13418;
                    return statearr_13425;
                  }();
                  var statearr_13426_13435 = state_13423__$1;
                  statearr_13426_13435[2] = null;
                  statearr_13426_13435[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13424 === 3) {
                    var inst_13421 = state_13423[2];
                    var state_13423__$1 = state_13423;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13423__$1, inst_13421);
                  } else {
                    if (state_val_13424 === 2) {
                      var state_13423__$1 = state_13423;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13423__$1, 4, delete$);
                    } else {
                      if (state_val_13424 === 1) {
                        var state_13423__$1 = state_13423;
                        var statearr_13427_13436 = state_13423__$1;
                        statearr_13427_13436[2] = null;
                        statearr_13427_13436[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              };
            }(c__7010__auto__, delete$, ___$1);
            return function(switch__6995__auto__, c__7010__auto__, delete$, ___$1) {
              return function() {
                var state_machine__6996__auto__ = null;
                var state_machine__6996__auto____0 = function() {
                  var statearr_13431 = [null, null, null, null, null, null, null, null];
                  statearr_13431[0] = state_machine__6996__auto__;
                  statearr_13431[1] = 1;
                  return statearr_13431;
                };
                var state_machine__6996__auto____1 = function(state_13423) {
                  while (true) {
                    var ret_value__6997__auto__ = function() {
                      try {
                        while (true) {
                          var result__6998__auto__ = switch__6995__auto__.call(null, state_13423);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6998__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6998__auto__;
                          }
                          break;
                        }
                      } catch (e13432) {
                        if (e13432 instanceof Object) {
                          var ex__6999__auto__ = e13432;
                          var statearr_13433_13437 = state_13423;
                          statearr_13433_13437[5] = ex__6999__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13423);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e13432;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6997__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__13438 = state_13423;
                      state_13423 = G__13438;
                      continue;
                    } else {
                      return ret_value__6997__auto__;
                    }
                    break;
                  }
                };
                state_machine__6996__auto__ = function(state_13423) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6996__auto____0.call(this);
                    case 1:
                      return state_machine__6996__auto____1.call(this, state_13423);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6996__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6996__auto____0;
                state_machine__6996__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6996__auto____1;
                return state_machine__6996__auto__;
              }();
            }(switch__6995__auto__, c__7010__auto__, delete$, ___$1);
          }();
          var state__7012__auto__ = function() {
            var statearr_13434 = f__7011__auto__.call(null);
            statearr_13434[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7010__auto__;
            return statearr_13434;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7012__auto__);
        };
      }(c__7010__auto__, delete$, ___$1));
      return c__7010__auto__;
    };
    expenses.main.t13409.prototype.om$core$IInitState$ = true;
    expenses.main.t13409.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "delete", "delete", -1768633620), cljs.core.async.chan.call(null)], null);
    };
    expenses.main.t13409.prototype.om$core$IDisplayName$ = true;
    expenses.main.t13409.prototype.om$core$IDisplayName$display_name$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return "expenses-view";
    };
    expenses.main.t13409.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13411) {
      var self__ = this;
      var _13411__$1 = this;
      return self__.meta13410;
    };
    expenses.main.t13409.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13411, meta13410__$1) {
      var self__ = this;
      var _13411__$1 = this;
      return new expenses.main.t13409(self__.owner, self__.app, self__.expenses_view, meta13410__$1);
    };
    expenses.main.t13409.cljs$lang$type = true;
    expenses.main.t13409.cljs$lang$ctorStr = "expenses.main/t13409";
    expenses.main.t13409.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
      return cljs.core._write.call(null, writer__4234__auto__, "expenses.main/t13409");
    };
    expenses.main.__GT_t13409 = function __GT_t13409(owner__$1, app__$1, expenses_view__$1, meta13410) {
      return new expenses.main.t13409(owner__$1, app__$1, expenses_view__$1, meta13410);
    };
  }
  return new expenses.main.t13409(owner, app, expenses_view, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 54, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 112, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 83, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/brabadu/projects/prom-stats/src-cljs/expenses/main.cljs"], null));
};
expenses.main.change_view = function change_view(owner, new_view) {
  return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "view", "view", 1247994814), new_view);
};
expenses.main.active_menu_item = function active_menu_item(state, check_view) {
  if (cljs.core._EQ_.call(null, check_view, (new cljs.core.Keyword(null, "view", "view", 1247994814)).cljs$core$IFn$_invoke$arity$1(state))) {
    return "menu-item__active";
  } else {
    return null;
  }
};
expenses.main.app_expenses = function app_expenses(data, owner) {
  if (typeof expenses.main.t13442 !== "undefined") {
  } else {
    expenses.main.t13442 = function(owner, data, app_expenses, meta13443) {
      this.owner = owner;
      this.data = data;
      this.app_expenses = app_expenses;
      this.meta13443 = meta13443;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    expenses.main.t13442.prototype.om$core$IRenderState$ = true;
    expenses.main.t13442.prototype.om$core$IRenderState$render_state$arity$2 = function(this$, state) {
      var self__ = this;
      var this$__$1 = this;
      return React.DOM.div(null, React.DOM.ul({"className":"menu"}, React.DOM.li({"className":[cljs.core.str("menu-item "), cljs.core.str(expenses.main.active_menu_item.call(null, state, new cljs.core.Keyword(null, "add", "add", 235287739)))].join("")}, React.DOM.a({"onClick":function(this$__$1) {
        return function() {
          return expenses.main.change_view.call(null, self__.owner, new cljs.core.Keyword(null, "add", "add", 235287739));
        };
      }(this$__$1), "href":"#"}, "Add")), React.DOM.li({"className":[cljs.core.str("menu-item "), cljs.core.str(expenses.main.active_menu_item.call(null, state, new cljs.core.Keyword(null, "list", "list", 765357683)))].join("")}, React.DOM.a({"onClick":function(this$__$1) {
        return function() {
          return expenses.main.change_view.call(null, self__.owner, new cljs.core.Keyword(null, "list", "list", 765357683));
        };
      }(this$__$1), "href":"#"}, "List")), React.DOM.li({"className":[cljs.core.str("menu-item "), cljs.core.str(expenses.main.active_menu_item.call(null, state, new cljs.core.Keyword(null, "stats", "stats", -85643011)))].join("")}, React.DOM.a({"onClick":function(this$__$1) {
        return function() {
          return expenses.main.change_view.call(null, self__.owner, new cljs.core.Keyword(null, "stats", "stats", -85643011));
        };
      }(this$__$1), "href":"#"}, "Stats"))), function() {
        var view = (new cljs.core.Keyword(null, "view", "view", 1247994814)).cljs$core$IFn$_invoke$arity$1(state);
        if (cljs.core._EQ_.call(null, view, new cljs.core.Keyword(null, "add", "add", 235287739))) {
          return[om.core.build.call(null, expenses.main.new_expense_form, self__.data, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "init-state", "init-state", 1450863212), state], null)), om.core.build.call(null, expenses.main.expenses_view, self__.data, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "init-state", "init-state", 1450863212), state], null))];
        } else {
          if (cljs.core._EQ_.call(null, view, new cljs.core.Keyword(null, "list", "list", 765357683))) {
            return om.core.build.call(null, expenses.main.expenses_view, self__.data, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "init-state", "init-state", 1450863212), state], null));
          } else {
            if (cljs.core._EQ_.call(null, view, new cljs.core.Keyword(null, "stats", "stats", -85643011))) {
              return om.core.build.call(null, expenses.stats.stats_view, self__.data);
            } else {
              return "Oh, nothing here";
            }
          }
        }
      }());
    };
    expenses.main.t13442.prototype.om$core$IInitState$ = true;
    expenses.main.t13442.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "copy", "copy", -1077617309), cljs.core.async.chan.call(null), new cljs.core.Keyword(null, "view", "view", 1247994814), new cljs.core.Keyword(null, "add", "add", 235287739)], null);
    };
    expenses.main.t13442.prototype.om$core$IDisplayName$ = true;
    expenses.main.t13442.prototype.om$core$IDisplayName$display_name$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return "app-expenses";
    };
    expenses.main.t13442.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13444) {
      var self__ = this;
      var _13444__$1 = this;
      return self__.meta13443;
    };
    expenses.main.t13442.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13444, meta13443__$1) {
      var self__ = this;
      var _13444__$1 = this;
      return new expenses.main.t13442(self__.owner, self__.data, self__.app_expenses, meta13443__$1);
    };
    expenses.main.t13442.cljs$lang$type = true;
    expenses.main.t13442.cljs$lang$ctorStr = "expenses.main/t13442";
    expenses.main.t13442.cljs$lang$ctorPrWriter = function(this__4233__auto__, writer__4234__auto__, opt__4235__auto__) {
      return cljs.core._write.call(null, writer__4234__auto__, "expenses.main/t13442");
    };
    expenses.main.__GT_t13442 = function __GT_t13442(owner__$1, data__$1, app_expenses__$1, meta13443) {
      return new expenses.main.t13442(owner__$1, data__$1, app_expenses__$1, meta13443);
    };
  }
  return new expenses.main.t13442(owner, data, app_expenses, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 9, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 153, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 122, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/brabadu/projects/prom-stats/src-cljs/expenses/main.cljs"], null));
};
om.core.root.call(null, expenses.main.app_expenses, expenses.main.state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById("app-root")], null));
